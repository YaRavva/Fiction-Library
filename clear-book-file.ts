import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import { config } from 'dotenv';
config();

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;

if (!supabaseUrl || !serviceRoleKey) {
  console.error('‚ùå Missing Supabase environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, serviceRoleKey);

async function clearBookFileLink(bookTitle: string, bookAuthor: string) {
  try {
    console.log(`üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏: "${bookTitle}" - ${bookAuthor}`);
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–≤—Ç–æ—Ä—É
    const { data: books, error: searchError } = await supabase
      .from('books')
      .select('*')
      .ilike('title', `%${bookTitle}%`)
      .ilike('author', `%${bookAuthor}%`);

    if (searchError) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥–∏: ${searchError.message}`);
    }

    if (!books || books.length === 0) {
      console.log('‚ùå –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    if (books.length > 1) {
      console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥:');
      books.forEach((book, index) => {
        console.log(`${index + 1}. "${book.title}" - ${book.author} (ID: ${book.id})`);
      });
      console.log('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å');
      return;
    }

    const book = books[0];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: "${book.title}" - ${book.author} (ID: ${book.id})`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    if (!book.file_url) {
      console.log('‚ÑπÔ∏è –£ –∫–Ω–∏–≥–∏ –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞');
      return;
    }

    console.log(`üìÅ –¢–µ–∫—É—â–∏–π —Ñ–∞–π–ª: ${book.file_url}`);
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏
    console.log('\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥–µ—Ç –æ—á–∏—â–µ–Ω–∞ –ø—Ä–∏–≤—è–∑–∫–∞ —Ñ–∞–π–ª–∞ –∫ –∫–Ω–∏–≥–µ');
    console.log('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N)');
    
    const readline = require('readline');
    const rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });

    rl.question('', async (answer: string) => {
      if (answer.toLowerCase() !== 'y' && answer.toLowerCase() !== 'yes') {
        console.log('‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
        rl.close();
        return;
      }

      try {
        // –û—á–∏—â–∞–µ–º –ø—Ä–∏–≤—è–∑–∫—É —Ñ–∞–π–ª–∞ –∫ –∫–Ω–∏–≥–µ
        const { data, error } = await supabase
          .from('books')
          .update({
            file_url: null,
            storage_path: null,
            file_size: null,
            file_format: null,
            telegram_file_id: null,
            updated_at: new Date().toISOString()
          })
          .eq('id', book.id)
          .select()
          .single();

        if (error) {
          throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏: ${error.message}`);
        }

        console.log(`‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ–∞–π–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞ –¥–ª—è –∫–Ω–∏–≥–∏ "${book.title}"`);
        rl.close();
      } catch (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø—Ä–∏–≤—è–∑–∫–∏ —Ñ–∞–π–ª–∞:', updateError);
        rl.close();
      }
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (process.argv.length < 4) {
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx clear-book-file.ts "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏" "–ê–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏"');
  console.log('–ü—Ä–∏–º–µ—Ä: npx tsx clear-book-file.ts "—Ü–∏–∫–ª –ù–∏–∫" "–ê–Ω–¥–∂–µ–π –Ø—Å–∏–Ω—Å–∫–∏–π"');
  process.exit(1);
}

const bookTitle = process.argv[2];
const bookAuthor = process.argv[3];

clearBookFileLink(bookTitle, bookAuthor);