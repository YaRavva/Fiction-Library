import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import { config } from 'dotenv';
config();

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;

if (!supabaseUrl || !serviceRoleKey) {
  console.error('‚ùå Missing Supabase environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, serviceRoleKey);

async function checkBookFile(bookTitle: string, bookAuthor: string) {
  try {
    console.log(`üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏: "${bookTitle}" - ${bookAuthor}`);
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–≤—Ç–æ—Ä—É
    const { data: books, error: searchError } = await supabase
      .from('books')
      .select('*')
      .ilike('title', `%${bookTitle}%`)
      .ilike('author', `%${bookAuthor}%`);

    if (searchError) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥–∏: ${searchError.message}`);
    }

    if (!books || books.length === 0) {
      console.log('‚ùå –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    if (books.length > 1) {
      console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥:');
      books.forEach((book, index) => {
        console.log(`${index + 1}. "${book.title}" - ${book.author} (ID: ${book.id})`);
        console.log(`   file_url: ${book.file_url}`);
        console.log(`   storage_path: ${book.storage_path}`);
        console.log(`   file_size: ${book.file_size}`);
        console.log(`   file_format: ${book.file_format}`);
        console.log('---');
      });
      return;
    }

    const book = books[0];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: "${book.title}" - ${book.author} (ID: ${book.id})`);
    console.log(`file_url: ${book.file_url}`);
    console.log(`storage_path: ${book.storage_path}`);
    console.log(`file_size: ${book.file_size}`);
    console.log(`file_format: ${book.file_format}`);
    console.log(`telegram_file_id: ${book.telegram_file_id}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (process.argv.length < 4) {
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx check-book-file.ts "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏" "–ê–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏"');
  console.log('–ü—Ä–∏–º–µ—Ä: npx tsx check-book-file.ts "—Ü–∏–∫–ª –ù–∏–∫" "–ê–Ω–¥–∂–µ–π –Ø—Å–∏–Ω—Å–∫–∏–π"');
  process.exit(1);
}

const bookTitle = process.argv[2];
const bookAuthor = process.argv[3];

checkBookFile(bookTitle, bookAuthor);