'use client';

import React, { useState, useEffect, useCallback, useRef } from 'react';
import { createPortal } from 'react-dom';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { FileSearch, Play, RotateCcw, CheckCircle, AlertCircle, Clock, FileText } from 'lucide-react';
import { getBrowserSupabase } from '@/lib/browserSupabase';
import { FileOption, FileSelector } from './file-selector';

interface BookWithoutFile {
  id: string;
  title: string;
  author: string;
  publication_year?: number;
}

interface ProcessingState {
  status: 'idle' | 'loading' | 'searching' | 'processing' | 'completed' | 'error';
  message: string;
}

export function FileSearchManager() {
  const [processingState, setProcessingState] = useState<ProcessingState>({
    status: 'idle',
    message: ''
  });
  const [error, setError] = useState<string | null>(null);
  const [isResetting, setIsResetting] = useState(false); // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–±—Ä–æ—Å–∞

  const [booksWithoutFiles, setBooksWithoutFiles] = useState<BookWithoutFile[]>([]);
  const [currentBookIndex, setCurrentBookIndex] = useState(0);
  const [selectedFileIndex, setSelectedFileIndex] = useState(0);
  const [showFileSelector, setShowFileSelector] = useState(false);
  const [fileSelectorKey, setFileSelectorKey] = useState(0); // –°–æ—Å—Ç–æ—è–Ω–∏–µ-—Ñ–ª–∞–≥ –¥–ª—è –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ FileSelector

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useRef –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤–º–µ—Å—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const allTelegramFilesRef = useRef<FileOption[]>([]);
  const currentBookFilesRef = useRef<FileOption[]>([]);
  
  // –î–æ–±–∞–≤–ª—è–µ–º ref –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
  const currentBookRef = useRef<BookWithoutFile | null>(null);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –æ–∫–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const logToResults = (message: string) => {
    const timestamp = new Date().toLocaleTimeString('ru-RU');
    const logMessage = `[${timestamp}] ${message}\n`;

    // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('FileSearchManager log:', message);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if (typeof window !== 'undefined' && (window as any).updateFileSearchResults) {
      try {
        (window as any).updateFileSearchResults(logMessage);
        console.log('‚úÖ Message sent to results window:', message);
      } catch (error) {
        console.error('‚ùå Error sending message to results window:', error);
        console.error('Available window properties:', Object.keys(window || {}));
      }
    } else {
      console.log('‚ùå updateFileSearchResults not available');
      console.log('Available window properties:', Object.keys(window || {}));
    }
  };

  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
  const logToConsole = (message: string) => {
    console.log(`üîç FileSearch: ${message}`);
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const getAuthToken = async (): Promise<string> => {
    const supabase = getBrowserSupabase();
    const { data: { session }, error } = await supabase.auth.getSession();
    
    if (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏: ${error.message}`);
    }
    
    if (!session || !session.access_token) {
      throw new Error('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    return session.access_token;
  };

  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ —Ñ–∞–π–ª–∞ –∫ –∫–Ω–∏–≥–µ
  const clearFileLink = async (bookId: string): Promise<void> => {
    const token = await getAuthToken();
    
    const response = await fetch('/api/admin/clear-file-link', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`,
      },
      body: JSON.stringify({
        bookId,
      }),
    });

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      const errorMessage = errorData.error || `HTTP –æ—à–∏–±–∫–∞: ${response.status} ${response.statusText}`;
      throw new Error(errorMessage);
    }

    const result = await response.json();
    logToResults(`‚úÖ ${result.message}`);
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤ (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤)
  const loadBooksWithoutFiles = async (): Promise<BookWithoutFile[]> => {
    logToResults('üìö –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤...');

    const supabase = getBrowserSupabase();

    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ –±–µ–∑ —Ñ–∞–π–ª–æ–≤
      const { data, error: dbError } = await supabase
        .from('books')
        .select('id, title, author, publication_year')
        .is('file_url', null)
        .order('author', { ascending: true })
        .order('title', { ascending: true });

      if (dbError) {
        logToResults(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫–Ω–∏–≥: ${dbError.message}`);
        throw new Error(`–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${dbError.message}`);
      }

      logToResults(`üìä –ù–∞–π–¥–µ–Ω–æ ${data?.length || 0} –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤`);
      
      if (data && data.length > 0) {
        return data;
      } else {
        logToResults('‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤.');
        return []; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
      }
    } catch (err: any) {
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤:', err);
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥';
      if (err && typeof err === 'object') {
        if (err.message) {
          errorMessage = err.message;
        } else if (Object.keys(err).length > 0) {
          errorMessage = JSON.stringify(err);
        }
      } else if (typeof err === 'string') {
        errorMessage = err;
      }
      
      logToResults(`‚ùå ${errorMessage}`);
      throw new Error(errorMessage);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram –∫–∞–Ω–∞–ª–∞
  const loadTelegramFiles = async (): Promise<FileOption[]> => {
    logToResults('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram –∫–∞–Ω–∞–ª–∞ (–ø–∞–∫–µ—Ç–∞–º–∏ –ø–æ 1000 —Å –ø–∞—É–∑–æ–π 1—Å)...');
    const token = await getAuthToken();

    try {
      const response = await fetch('/api/admin/telegram-files', {
        headers: { 'Authorization': `Bearer ${token}` },
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        const errorMessage = errorData.error || `HTTP –æ—à–∏–±–∫–∞: ${response.status} ${response.statusText}`;
        throw new Error(errorMessage);
      }

      const data = await response.json();
      logToResults(`üìÅ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${data.files?.length || 0} —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram`);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –≤ ref –≤–º–µ—Å—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      const files = data.files || [];
      allTelegramFilesRef.current = files;
      
      return files;
    } catch (err: any) {
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram:', err);
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∏–∑ Telegram';
      if (err && typeof err === 'object') {
        if (err.message) {
          errorMessage = err.message;
        } else if (Object.keys(err).length > 0) {
          errorMessage = JSON.stringify(err);
        }
      } else if (typeof err === 'string') {
        errorMessage = err;
      }
      
      logToResults(`‚ùå ${errorMessage}`);
      throw new Error(errorMessage);
    }
  };

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–∏
  const showFilesForCurrentBook = useCallback(async (books: BookWithoutFile[], files: FileOption[] = []) => {
    if (books.length === 0) {
      logToResults('‚ùå –ù–µ—Ç –∫–Ω–∏–≥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
      setProcessingState({ status: 'idle', message: '–ù–µ—Ç –∫–Ω–∏–≥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥.' });
      return;
    }

    if (currentBookIndex < 0 || currentBookIndex >= books.length) {
      logToResults(`‚ùå –û—à–∏–±–∫–∞: –∏–Ω–¥–µ–∫—Å ${currentBookIndex} –≤–Ω–µ –≥—Ä–∞–Ω–∏—Ü –º–∞—Å—Å–∏–≤–∞ (0-${books.length - 1}).`);
      setProcessingState({ status: 'error', message: '–û—à–∏–±–∫–∞: –∏–Ω–¥–µ–∫—Å –∫–Ω–∏–≥–∏ –≤–Ω–µ –≥—Ä–∞–Ω–∏—Ü –º–∞—Å—Å–∏–≤–∞.' });
      return;
    }

    const currentBook = books[currentBookIndex];
    
    if (!currentBook) {
      logToResults(`‚ùå –û—à–∏–±–∫–∞: –∫–Ω–∏–≥–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º ${currentBookIndex} —Ä–∞–≤–Ω–∞ null/undefined.`);
      setProcessingState({ status: 'error', message: '–û—à–∏–±–∫–∞: –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.' });
      return;
    }

    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–¢–µ–∫—É—â–∞—è –∫–Ω–∏–≥–∞", –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏
    // logToResults(`üìö –¢–µ–∫—É—â–∞—è –∫–Ω–∏–≥–∞: ${currentBook.author} - ${currentBook.title}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ –≤ ref
    currentBookRef.current = currentBook;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º ref
    const filesToUse = files.length > 0 ? files : allTelegramFilesRef.current;
    
    const matchingFiles = findMatchingFiles(currentBook, filesToUse);
    
    // –í–∞–∂–Ω–æ: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –≤ ref
    currentBookFilesRef.current = matchingFiles;
    setSelectedFileIndex(0); // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ FileSelector
    setFileSelectorKey(prev => prev + 1);

    if (matchingFiles.length === 0) {
      logToResults('‚ùå –ü–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...');
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–µ, –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤
      setTimeout(() => {
        // –í—ã–∑—ã–≤–∞–µ–º processNextBook —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setCurrentBookIndex(prevIndex => {
          const nextIndex = prevIndex + 1;
          if (nextIndex >= books.length) {
            logToResults('üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.');
            setProcessingState({ status: 'completed', message: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.' });
            setShowFileSelector(false); // –°–∫—Ä—ã–≤–∞–µ–º FileSelector –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
            return prevIndex;
          }
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–∏
          setTimeout(() => {
            showFilesForCurrentBook(books, allTelegramFilesRef.current);
          }, 0);
          return nextIndex;
        });
      }, 2000);
    } else {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º FileSelector –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
      setShowFileSelector(true);
    }

    setProcessingState({ status: 'searching', message: '–û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...' });

  }, [currentBookIndex, booksWithoutFiles, setSelectedFileIndex, setShowFileSelector, setProcessingState, logToResults, setFileSelectorKey]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–∏
  const processNextBook = useCallback(async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ —Å–±—Ä–æ—Å–∞
    if (isResetting) {
      logToResults('‚èπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–±—Ä–æ—Å).');
      setIsResetting(false);
      return;
    }
    
    const nextIndex = currentBookIndex + 1;
    if (nextIndex >= booksWithoutFiles.length) {
      logToResults('üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.');
      setProcessingState({ status: 'completed', message: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.' });
      setShowFileSelector(false); // –°–∫—Ä—ã–≤–∞–µ–º FileSelector –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
      setFileSelectorKey(prev => prev + 1); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ FileSelector –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
      return;
    }
    
    // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º FileSelector
    setShowFileSelector(false);
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ FileSelector –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
    setFileSelectorKey(prev => prev + 1);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –∫–Ω–∏–≥–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ –≤ ref
    setCurrentBookIndex(nextIndex);
    setSelectedFileIndex(0); // –°–±—Ä–æ—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ –≤ ref —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞
    if (nextIndex < booksWithoutFiles.length) {
      currentBookRef.current = booksWithoutFiles[nextIndex];
      // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏
    }
    
    // –ñ–¥–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–∏
    setTimeout(() => {
      showFilesForCurrentBook(booksWithoutFiles, allTelegramFilesRef.current);
    }, 0);
  }, [booksWithoutFiles, currentBookIndex, showFilesForCurrentBook, setSelectedFileIndex, setShowFileSelector, logToResults, setProcessingState, setFileSelectorKey, isResetting, setIsResetting, currentBookRef]);

  // –ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–Ω–∏–≥–∏
  const findMatchingFiles = (book: BookWithoutFile, files: FileOption[]): FileOption[] => {
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const normalizeString = (str: string) => {
      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤ NFC —Ñ–æ—Ä–º—É –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
      let normalized = str.normalize('NFC').toLowerCase();
      // –ó–∞–º–µ–Ω—è–µ–º "—ë" –Ω–∞ "–µ" –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
      normalized = normalized.replace(/—ë/g, '–µ');
      return normalized;
    };

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏
    const bookTitle = normalizeString(book.title);
    const bookAuthor = normalizeString(book.author);

    // –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ —Å–ª–æ–≤–∞ —Å —É—á–µ—Ç–æ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π
    const extractWords = (str: string): string[] => {
      // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º: –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, —Å–∫–æ–±–∫–∏, —Ç–æ—á–∫–∏ –∏ —Ç.–¥.
      return str
        .split(/[\s\-_\(\)\[\]\{\}\/\\\.]+/)
        .filter(word => word.length > 1) // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–ª–æ–≤–∞ –∫–æ—Ä–æ—á–µ 2 —Å–∏–º–≤–æ–ª–æ–≤
        .map(word => word.trim())
        .filter(word => word.length > 0);
    };

    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ª–æ–≤–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏
    const titleWords = extractWords(bookTitle);
    const authorWords = extractWords(bookAuthor);

    // –°–æ–∑–¥–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    const createRegex = (word: string) => {
      // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
      const escapedWord = word.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
      return new RegExp(escapedWord, 'i');
    };

    let matchingFiles = files
      .filter(file => {
        // –û—Ç—Å–µ–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã —Å —Ç–∏–ø–æ–º application/octet-stream, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –æ—à–∏–±–æ—á–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É
        if (file.mime_type === 'application/octet-stream') {
          return false;
        }
        return true;
      })
      .map(file => {
        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        const filename = normalizeString(file.file_name || '');
        let score = 0;
        let titleMatches = 0;
        let authorMatches = 0;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–Ω–∏–≥–∏
        for (const word of titleWords) {
          const regex = createRegex(word);
          if (regex.test(filename)) {
            titleMatches++;
            score += 15; // –í—ã—Å–æ–∫–∏–π –≤–µ—Å –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å–ª–æ–≤ –Ω–∞–∑–≤–∞–Ω–∏—è
          }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ –∞–≤—Ç–æ—Ä—É –∫–Ω–∏–≥–∏
        for (const word of authorWords) {
          const regex = createRegex(word);
          if (regex.test(filename)) {
            authorMatches++;
            score += 12; // –í—ã—Å–æ–∫–∏–π –≤–µ—Å –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å–ª–æ–≤ –∞–≤—Ç–æ—Ä–∞
          }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏ (–µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ)
        if (bookTitle.length > 5 && filename.includes(bookTitle)) {
          score += 20; // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –≤–µ—Å –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ (–µ—Å–ª–∏ –∏–º—è –∞–≤—Ç–æ—Ä–∞ –Ω–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ)
        if (bookAuthor.length > 5 && filename.includes(bookAuthor)) {
          score += 18; // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –≤–µ—Å –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∞
        }

        // –§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –ò–õ–ò –∞–≤—Ç–æ—Ä–∞
        if (titleMatches === 0 && authorMatches === 0) {
          return null;
        }

        // –ë–æ–Ω—É—Å –∑–∞ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ (fb2 –∏ zip –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ)
        if (filename.endsWith('.fb2')) {
          score += 5;
        } else if (filename.endsWith('.zip')) {
          score += 3;
        }

        return { ...file, relevance_score: score };
      })
      .filter((file): file is FileOption & { relevance_score: number } => file !== null)
      .sort((a, b) => b.relevance_score - a.relevance_score)
      .slice(0, 15); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ 15 —Å–∞–º—ã—Ö —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

    return matchingFiles;
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
  const handleFileSelect = useCallback(async (fileToSelect: FileOption | null) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ —Å–±—Ä–æ—Å–∞
    if (isResetting) {
      logToResults('‚èπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–±—Ä–æ—Å).');
      setIsResetting(false);
      setShowFileSelector(false);
      setFileSelectorKey(prev => prev + 1);
      return;
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º FileSelector
    setShowFileSelector(false);
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ FileSelector –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
    setFileSelectorKey(prev => prev + 1);
    
    logToResults(`üéØ –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞: ${fileToSelect ? fileToSelect.file_name : '–ü–†–û–ü–£–°–ö'}`);

    if (!fileToSelect) {
      logToResults('‚è≠Ô∏è –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–µ.');
      await processNextBook();
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ –∏–∑ ref –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    let currentBook = currentBookRef.current;
    if (!currentBook || currentBook.id !== booksWithoutFiles[currentBookIndex]?.id) {
      // –ï—Å–ª–∏ ref –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–Ω–∏–≥—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      if (currentBookIndex < booksWithoutFiles.length) {
        currentBook = booksWithoutFiles[currentBookIndex];
        // –û–±–Ω–æ–≤–ª—è–µ–º ref –¥–ª—è –±—É–¥—É—â–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π
        currentBookRef.current = currentBook;
        logToResults(`üìö –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ: ${currentBook.author} - ${currentBook.title}`);
      } else {
        logToResults(`‚ùå –û—à–∏–±–∫–∞: —Ç–µ–∫—É—â–∞—è –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞.`);
        setProcessingState({ status: 'error', message: '–û—à–∏–±–∫–∞: —Ç–µ–∫—É—â–∞—è –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.' });
        return;
      }
    }

    logToResults(`üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ "${fileToSelect.file_name}" –¥–ª—è –∫–Ω–∏–≥–∏ "${currentBook.title}"...`);
    setProcessingState({ status: 'processing', message: '–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–∏–≤—è–∑–∫–∞ —Ñ–∞–π–ª–∞...' });

    try {
      const token = await getAuthToken();
      
      const response = await fetch('/api/admin/file-link', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`,
        },
        body: JSON.stringify({
          bookId: currentBook.id,
          fileMessageId: fileToSelect.message_id,
        }),
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        const errorMessage = errorData.error || `HTTP –æ—à–∏–±–∫–∞: ${response.status} ${response.statusText}`;
        
        // –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–±—É–µ–º –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
        if (errorMessage.includes('The resource already exists')) {
          logToResults(`‚ÑπÔ∏è –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –ø—Ä–æ–±—É–µ–º –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –∫ –∫–Ω–∏–≥–µ "${currentBook.author}: ${currentBook.title}"...`);
          
          // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞
          const linkResponse = await fetch('/api/admin/file-link-existing', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${token}`,
            },
            body: JSON.stringify({
              bookId: currentBook.id,
              fileMessageId: fileToSelect.message_id,
            }),
          });
          
          if (!linkResponse.ok) {
            const linkErrorData = await linkResponse.json().catch(() => ({}));
            const linkErrorMessage = linkErrorData.error || `HTTP –æ—à–∏–±–∫–∞: ${linkResponse.status} ${linkResponse.statusText}`;
            
            // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º, –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π
            if (linkErrorMessage === 'FILE_MISMATCH_NEEDS_REUPLOAD' || linkResponse.status === 422) {
              logToResults(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º, –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–Ω–∏–≥–∏ "${currentBook.author}: ${currentBook.title}"...`);
              
              // –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π endpoint –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
              const retryResponse = await fetch('/api/admin/file-link', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${token}`,
                },
                body: JSON.stringify({
                  bookId: currentBook.id,
                  fileMessageId: fileToSelect.message_id,
                }),
              });
              
              if (!retryResponse.ok) {
                const retryErrorData = await retryResponse.json().catch(() => ({}));
                const retryErrorMessage = retryErrorData.error || `HTTP –æ—à–∏–±–∫–∞: ${response.status} ${response.statusText}`;
                throw new Error(retryErrorMessage);
              }
              
              const result = await retryResponse.json();
              logToResults(`‚úÖ –ù–æ–≤—ã–π —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–Ω–∏–≥–µ "${currentBook.author}: ${currentBook.title}"!`);
            } else {
              throw new Error(linkErrorMessage);
            }
          } else {
            const result = await linkResponse.json();
            logToResults(`‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–Ω–∏–≥–µ "${currentBook.author}: ${currentBook.title}"!`);
          }
        } else {
          logToResults(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ —Ñ–∞–π–ª–∞: ${errorMessage}`);
          throw new Error(errorMessage);
        }
      } else {
        const result = await response.json();
        logToResults(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–Ω–∏–≥–µ "${currentBook.author}: ${currentBook.title}"!`);
      }
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–µ
      await processNextBook();

    } catch (err: any) {
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ —Ñ–∞–π–ª–∞:', err);
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ —Ñ–∞–π–ª–∞';
      if (err && typeof err === 'object') {
        if (err.message) {
          errorMessage = err.message;
        } else if (Object.keys(err).length > 0) {
          errorMessage = JSON.stringify(err);
        }
      } else if (typeof err === 'string') {
        errorMessage = err;
      }
      
      logToResults(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ —Ñ–∞–π–ª–∞: ${errorMessage}`);
      setProcessingState({ status: 'error', message: `–û—à–∏–±–∫–∞: ${errorMessage}` });
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–µ
      await processNextBook();
    }
  }, [getAuthToken, processNextBook, setProcessingState, setFileSelectorKey, currentBookRef, isResetting, setIsResetting, currentBookIndex, booksWithoutFiles]);

  // –ü—Ä–æ–ø—É—Å–∫ –∫–Ω–∏–≥–∏
  const handleSkipBook = useCallback(async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ —Å–±—Ä–æ—Å–∞
    if (isResetting) {
      logToResults('‚èπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–±—Ä–æ—Å).');
      setIsResetting(false);
      setShowFileSelector(false);
      setFileSelectorKey(prev => prev + 1);
      return;
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º FileSelector
    setShowFileSelector(false);
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ FileSelector –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
    setFileSelectorKey(prev => prev + 1);
    
    logToResults('‚è≠Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫–Ω–∏–≥—É');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ –∏–∑ ref –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    let currentBook = currentBookRef.current;
    if (!currentBook || currentBook.id !== booksWithoutFiles[currentBookIndex]?.id) {
      // –ï—Å–ª–∏ ref –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–Ω–∏–≥—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      if (currentBookIndex < booksWithoutFiles.length) {
        currentBook = booksWithoutFiles[currentBookIndex];
        // –û–±–Ω–æ–≤–ª—è–µ–º ref –¥–ª—è –±—É–¥—É—â–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π
        currentBookRef.current = currentBook;
        logToResults(`üìö –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ: ${currentBook.author} - ${currentBook.title}`);
      }
    }
    
    if (currentBook) {
      logToResults(`‚è≠Ô∏è –ö–Ω–∏–≥–∞ "${currentBook.title}" –ø—Ä–æ–ø—É—â–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.`);
    } else {
      logToResults('‚è≠Ô∏è –ö–Ω–∏–≥–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–Ω–µ –Ω–∞–π–¥–µ–Ω–∞).');
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–Ω–∏–≥–µ
    await processNextBook();
  }, [processNextBook, setFileSelectorKey, isResetting, setIsResetting, currentBookIndex, booksWithoutFiles, currentBookRef]);

  // –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const startInteractiveFileSearch = async () => {
    if (processingState.status !== 'idle' && processingState.status !== 'completed' && processingState.status !== 'error') {
      return;
    }

    logToResults('üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...');
    setProcessingState({ status: 'loading', message: '–ó–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤...' });
    setError(null);

    try {
      // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∫–Ω–∏–≥–∏ –±–µ–∑ —Ñ–∞–π–ª–æ–≤
      const books = await loadBooksWithoutFiles();
      setBooksWithoutFiles(books);

      if (books.length === 0) {
        setProcessingState({ status: 'idle', message: '–ù–µ—Ç –∫–Ω–∏–≥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥.' });
        return;
      }

      // –®–∞–≥ 2: –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram
      setProcessingState({ status: 'loading', message: '–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram...' });
      const telegramFiles = await loadTelegramFiles();
      // –§–∞–π–ª—ã —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ref –≤ —Ñ—É–Ω–∫—Ü–∏–∏ loadTelegramFiles

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
      if (telegramFiles.length === 0) {
        setProcessingState({ status: 'error', message: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∏–∑ Telegram.' });
        return;
      }

      // –®–∞–≥ 3: –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä–≤–æ–π –∫–Ω–∏–≥–∏
      setCurrentBookIndex(0);
      setSelectedFileIndex(0);
      await showFilesForCurrentBook(books, telegramFiles); // –ü–µ—Ä–µ–¥–∞–µ–º –∫–Ω–∏–≥–∏ –∏ —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é

    } catch (err: any) {
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      console.error('–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:', err);
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      if (err && typeof err === 'object') {
        if (err.message) {
          errorMessage = err.message;
        } else if (Object.keys(err).length > 0) {
          errorMessage = JSON.stringify(err);
        }
      } else if (typeof err === 'string') {
        errorMessage = err;
      }
      
      setError(`–û—à–∏–±–∫–∞: ${errorMessage}`);
      setProcessingState({ status: 'error', message: `–û—à–∏–±–∫–∞: ${errorMessage}` });
    }
  };


  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const handleReset = useCallback(() => {
    logToResults('üîÑ –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...');
    setProcessingState({ status: 'idle', message: '' });
    setError(null);
    setBooksWithoutFiles([]);
    setCurrentBookIndex(0);
    // –û—á–∏—â–∞–µ–º ref'—ã –≤–º–µ—Å—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    currentBookFilesRef.current = [];
    allTelegramFilesRef.current = [];
    currentBookRef.current = null; // –û—á–∏—â–∞–µ–º ref —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–µ–π –∫–Ω–∏–≥–µ
    setSelectedFileIndex(0);
    setShowFileSelector(false); // –°–∫—Ä—ã–≤–∞–µ–º FileSelector –ø—Ä–∏ —Å–±—Ä–æ—Å–µ
    setFileSelectorKey(prev => prev + 1); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ FileSelector –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
    setIsResetting(true); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–±—Ä–æ—Å–∞
    logToResults('‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ. –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  }, [setFileSelectorKey, setIsResetting]);

  return (
    <>
      <div className="flex items-center gap-4">
        <Button
          onClick={startInteractiveFileSearch}
          disabled={processingState.status === 'loading' || processingState.status === 'searching' || processingState.status === 'processing'}
          size="default"
        >
          {processingState.status === 'loading' || processingState.status === 'searching' || processingState.status === 'processing' ? (
            <>
              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2" />
              {processingState.status === 'loading' ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ü–æ–∏—Å–∫/–û–±—Ä–∞–±–æ—Ç–∫–∞...'}
            </>
          ) : (
            <>
              –ù–∞—á–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
            </>
          )}
        </Button>

        <Button variant="outline" onClick={handleReset} size="default">
          –°–±—Ä–æ—Å
        </Button>
      </div>

      {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º FileSelector —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç–∞–ª */}
      {showFileSelector && booksWithoutFiles.length > 0 && currentBookIndex < booksWithoutFiles.length && typeof document !== 'undefined' && createPortal(
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[100] p-4">
          <div className="bg-white rounded-lg shadow-xl w-full max-w-4xl h-[90vh] overflow-hidden flex flex-col">
            <FileSelector
              key={`file-selector-${fileSelectorKey}-${currentBookIndex}-${booksWithoutFiles[currentBookIndex].id}`}
              book={booksWithoutFiles[currentBookIndex]}
              files={findMatchingFiles(
                booksWithoutFiles[currentBookIndex], 
                allTelegramFilesRef.current.length > 0 ? allTelegramFilesRef.current : []
              )}
              onSelect={handleFileSelect}
              onSkip={handleSkipBook}
            />
          </div>
        </div>,
        document.body
      )}
    </>
  );
}
