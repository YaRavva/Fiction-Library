import { TelegramFileService } from '../lib/telegram/file-service';

async function testExistingFileCheck() {
  try {
    console.log('üîç Testing existing file check...');
    
    // Initialize the Telegram file service
    const fileService = await TelegramFileService.getInstance();
    console.log('‚úÖ TelegramFileService initialized');
    
    // Process only 3 files directly (without queue)
    console.log('üìö Processing 3 files from Telegram channel...');
    const results = await fileService.downloadAndProcessFilesDirectly(3);
    
    console.log(`\nüìä Results:`);
    console.log(`  Total processed: ${results.length}`);
    
    // Filter and display only successful matches with scores
    const successfulMatches = results.filter((r: any) => r.success && !r.skipped && r.bookTitle && r.bookAuthor);
    
    if (successfulMatches.length > 0) {
      console.log(`\nüìã Successful matches:`);
      successfulMatches.forEach((r: any) => {
        console.log(`  üìÑ ${r.filename}`);
        console.log(`  ‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ª—É—á—à–∞—è –∫–Ω–∏–≥–∞: "${r.bookTitle}" –∞–≤—Ç–æ—Ä–∞ ${r.bookAuthor}`);
        if (r.score !== undefined) {
          console.log(`  üìä –°—á–µ—Ç: ${r.score}`);
        }
        console.log('');
      });
    }
    
    const skipped = results.filter((r: any) => r.success && r.skipped).length;
    const failed = results.filter((r: any) => !r.success).length;
    
    console.log(`  Skipped files: ${skipped}`);
    console.log(`  Failed files: ${failed}`);
    
    if (skipped > 0) {
      console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - —Ñ–∞–π–ª—ã –ø—Ä–æ–ø—É—Å–∫–∞—é—Ç—Å—è');
    } else {
      console.log('\n‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ - –≤–æ–∑–º–æ–∂–Ω–æ, –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–æ–≤—ã–µ');
    }
    
    console.log('\n‚ú® Test completed successfully!');
  } catch (error) {
    console.error('‚ùå Test failed:', error);
  } finally {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∏–∑-–∑–∞ –∏–∑–≤–µ—Å—Ç–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã —Å gramjs
    console.log('üõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å...');
    process.exit(0);
  }
}

// Run the test
testExistingFileCheck();