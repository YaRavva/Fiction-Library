import { config } from 'dotenv';
import { resolve } from 'path';
import { getSupabaseAdmin } from '../lib/supabase';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
const envPath = resolve(__dirname, '../../.env');
config({ path: envPath });

async function checkRealBooks() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∫–Ω–∏–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const supabase = getSupabaseAdmin();
    
    if (!supabase) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Supabase');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    // @ts-ignore
    const { data: books, error } = await supabase
      .from('books')
      .select('author, title, cover_url, telegram_post_id')
      .limit(5);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–∏–≥:', error.message);
      return;
    }
    
    console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${books?.length || 0} –∫–Ω–∏–≥:`);
    // @ts-ignore
    books?.forEach((book: any, index: number) => {
      console.log(`${index + 1}. ${book.author} - ${book.title}`);
      // @ts-ignore
      console.log(`   –û–±–ª–æ–∂–∫–∞: ${book.cover_url ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}`);
      // @ts-ignore
      console.log(`   Telegram ID: ${book.telegram_post_id || '–ù–µ—Ç'}`);
      console.log('');
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkRealBooks();