/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Ñ–∞–π–ª—É 4379.zip
 * –ê–≤—Ç–æ—Ä: –í–∏–ª–º–∞ –ö–∞–¥–ª–µ—á–∫–æ–≤–∞
 * –ù–∞–∑–≤–∞–Ω–∏–µ: —Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.resolve(process.cwd(), '.env') });

async function fillExistingFileData() {
  console.log('üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Ñ–∞–π–ª—É 4379.zip\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É –ø–æ –∞–≤—Ç–æ—Ä—É –∏ –Ω–∞–∑–≤–∞–Ω–∏—é
    console.log('üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ –ø–æ –∞–≤—Ç–æ—Ä—É –∏ –Ω–∞–∑–≤–∞–Ω–∏—é...');
    const { data: book, error: bookError } = await supabase
      .from('books')
      .select('*')
      .ilike('author', '%–í–∏–ª–º–∞ –ö–∞–¥–ª–µ—á–∫–æ–≤–∞%')
      .ilike('title', '%—Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π%')
      .single();
      
    if (bookError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏:', bookError.message);
      return;
    }
    
    if (!book) {
      console.log('‚ùå –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: "${book.title}" –∞–≤—Ç–æ—Ä–∞ ${book.author}`);
    console.log(`   ID –∫–Ω–∏–≥–∏: ${book.id}`);
    console.log(`   File URL: ${book.file_url}`);
    console.log(`   Telegram File ID: ${book.telegram_file_id}`);
    console.log(`   Storage Path: ${book.storage_path}\n`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages –¥–ª—è message_id 4379
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages –¥–ª—è message_id 4379...');
    const { data: processedMessage, error: processedMessageError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .eq('message_id', '4379')
      .single();
      
    if (processedMessageError && processedMessageError.code !== 'PGRST116') {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages:', processedMessageError.message);
      return;
    }
    
    if (processedMessage) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages:`);
      console.log(`   ID: ${processedMessage.id}`);
      console.log(`   Message ID: ${processedMessage.message_id}`);
      console.log(`   Book ID: ${processedMessage.book_id}`);
      console.log(`   Telegram File ID: ${processedMessage.telegram_file_id}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ telegram_file_id –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      if (!processedMessage.telegram_file_id) {
        console.log('\n‚úèÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages...');
        const { error: updateError } = await supabase
          .from('telegram_processed_messages')
          .update({
            telegram_file_id: '4379',
            processed_at: new Date().toISOString()
          })
          .eq('id', processedMessage.id);
          
        if (updateError) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:', updateError.message);
        } else {
          console.log('‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        }
      } else {
        console.log('‚ÑπÔ∏è  –ó–∞–ø–∏—Å—å —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç telegram_file_id, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
      }
    } else {
      console.log('‚ÑπÔ∏è  –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      console.log('‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏...');
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages
      const { error: insertError } = await supabase
        .from('telegram_processed_messages')
        .insert({
          message_id: '4379',
          channel: '–ê—Ä—Ö–∏–≤ –¥–ª—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∏',
          book_id: book.id,
          telegram_file_id: '4379',
          processed_at: new Date().toISOString()
        });
        
      if (insertError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:', insertError.message);
      } else {
        console.log('‚úÖ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –≤ Storage
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –≤ Storage...');
    const { data: fileData, error: fileError } = await supabase
      .storage
      .from('books')
      .download('4379.zip');
      
    if (fileError) {
      console.log('‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Storage:', fileError.message);
    } else {
      console.log(`‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω –≤ Storage (${fileData.size} –±–∞–π—Ç)`);
    }
    
    console.log('\n‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
fillExistingFileData().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});