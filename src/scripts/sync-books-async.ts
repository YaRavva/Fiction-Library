import { config } from 'dotenv';
import { TelegramSyncService } from '../lib/telegram/sync';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

/**
 * –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram –∫–∞–Ω–∞–ª–∞ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 * @param limit –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 * @param progressCallback –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 */
export async function syncBooksAsync(
  limit: number = 10, 
  progressCallback?: (progress: number, message: string, result?: any) => void
) {
  try {
    console.log(`üöÄ –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏–∑ Telegram (–ª–∏–º–∏—Ç: ${limit})`);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const syncService = await TelegramSyncService.getInstance();
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    if (progressCallback) {
      progressCallback(0, 'üì• –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö...');
    }
    
    console.log('üì• –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö...');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    const results = await syncService.syncBooks(limit);
    
    // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    let processedMessagesHistory = '';
    let addedCount = 0;
    let updatedCount = 0;
    let skippedCount = 0;
    let errorCount = 0;
    let processedCount = 0;
    
    if (progressCallback) {
      progressCallback(0, `üì• –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${results.details.length} —Å–æ–æ–±—â–µ–Ω–∏–π...`);
    }
    
    console.log(`üì• –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${results.details.length} —Å–æ–æ–±—â–µ–Ω–∏–π...`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for (const detail of results.details) {
      processedCount++;
      const progress = Math.round((processedCount / results.details.length) * 100);
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ –∏–∑ –¥–µ—Ç–∞–ª–µ–π
      const typedDetail = detail as { 
        bookTitle?: string; 
        bookAuthor?: string; 
        bookId?: string; 
        msgId?: string;
        status: string;
        reason?: string;
        error?: string;
      };
      
      const bookInfo = typedDetail.bookTitle && typedDetail.bookAuthor 
        ? `${typedDetail.bookAuthor} - ${typedDetail.bookTitle}`
        : typedDetail.bookId || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–∏–≥–∞';
      
      let statusMessage = '';
      
      switch (typedDetail.status) {
        case 'added':
          addedCount++;
          processedMessagesHistory += `${processedMessagesHistory ? '\n' : ''}‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: ${bookInfo} (—Å–æ–æ–±—â–µ–Ω–∏–µ ${typedDetail.msgId})`;
          statusMessage = `–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: ${bookInfo}`;
          console.log(`‚úÖ ${statusMessage}`);
          break;
        case 'updated':
          updatedCount++;
          processedMessagesHistory += `${processedMessagesHistory ? '\n' : ''}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: ${bookInfo} (—Å–æ–æ–±—â–µ–Ω–∏–µ ${typedDetail.msgId})`;
          statusMessage = `–û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: ${bookInfo}`;
          console.log(`üîÑ ${statusMessage}`);
          break;
        case 'skipped':
          skippedCount++;
          const reason = typedDetail.reason || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞';
          // –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø—Ä–∏—á–∏–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫–∏–π
          let russianReason = reason;
          switch (reason) {
            case 'existing book has better description':
              russianReason = '—É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–Ω–∏–≥–∏ –ª—É—á—à–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ';
              break;
            case 'existing book has genres':
              russianReason = '—É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–Ω–∏–≥–∏ –µ—Å—Ç—å –∂–∞–Ω—Ä—ã';
              break;
            case 'existing book has tags':
              russianReason = '—É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–Ω–∏–≥–∏ –µ—Å—Ç—å —Ç–µ–≥–∏';
              break;
            case 'existing book has cover':
              russianReason = '—É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–Ω–∏–≥–∏ –µ—Å—Ç—å –æ–±–ª–æ–∂–∫–∞';
              break;
            case 'existing book has telegram post id':
              russianReason = '—É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–Ω–∏–≥–∏ –µ—Å—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏—è';
              break;
            case 'book already exists in database':
              russianReason = '–∫–Ω–∏–≥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö';
              break;
            case 'book already exists':
              russianReason = '–∫–Ω–∏–≥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö';
              break;
            case 'missing title or author':
              russianReason = '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∞–≤—Ç–æ—Ä';
              break;
            case 'no text content':
              russianReason = '—Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞';
              break;
            case 'metadata complete':
              russianReason = '–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω—ã–µ';
              break;
          }
          processedMessagesHistory += `${processedMessagesHistory ? '\n' : ''}‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${bookInfo} (—Å–æ–æ–±—â–µ–Ω–∏–µ ${typedDetail.msgId}, ${russianReason})`;
          statusMessage = `–ü—Ä–æ–ø—É—â–µ–Ω–æ: ${bookInfo} (${russianReason})`;
          console.log(`‚ö†Ô∏è ${statusMessage}`);
          break;
        case 'error':
          errorCount++;
          const error = typedDetail.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
          processedMessagesHistory += `${processedMessagesHistory ? '\n' : ''}‚ùå –û—à–∏–±–∫–∞: ${bookInfo} (—Å–æ–æ–±—â–µ–Ω–∏–µ ${typedDetail.msgId}, ${error})`;
          statusMessage = `–û—à–∏–±–∫–∞: ${bookInfo} (${error})`;
          console.log(`‚ùå ${statusMessage}`);
          break;
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      if (progressCallback) {
        const intermediateProgress = Math.round((processedCount / results.details.length) * 100);
        const statusMessage = `${processedMessagesHistory}\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å: –î–æ–±–∞–≤–ª–µ–Ω–æ: ${addedCount} | –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount} | –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} | –û—à–∏–±–æ–∫: ${errorCount} | –í—Å–µ–≥–æ: ${processedCount}/${results.details.length}`;
        progressCallback(intermediateProgress, statusMessage, detail);
      }
      
      console.log(`üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: –î–æ–±–∞–≤–ª–µ–Ω–æ: ${addedCount} | –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount} | –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} | –û—à–∏–±–æ–∫: ${errorCount} | –í—Å–µ–≥–æ: ${processedCount}/${results.details.length}`);
    }
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    const finalMessage = `${processedMessagesHistory}\nüèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: –î–æ–±–∞–≤–ª–µ–Ω–æ: ${addedCount} | –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount} | –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} | –û—à–∏–±–æ–∫: ${errorCount} | –í—Å–µ–≥–æ: ${results.details.length}`;
    if (progressCallback) {
      progressCallback(100, finalMessage);
    }
    
    console.log(`üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: –î–æ–±–∞–≤–ª–µ–Ω–æ: ${addedCount} | –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount} | –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} | –û—à–∏–±–æ–∫: ${errorCount} | –í—Å–µ–≥–æ: ${results.details.length}`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ–± –æ–ø–µ—Ä–∞—Ü–∏–∏
    let report = `üöÄ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö\n`;
    report += `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n`;
    report += `  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: ${addedCount}\n`;
    report += `  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount}\n`;
    report += `  ‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount}\n`;
    report += `  ‚ùå –û—à–∏–±–æ–∫: ${errorCount}\n`;
    report += `  üìö –í—Å–µ–≥–æ: ${results.details.length}\n\n`;
    
    if (processedMessagesHistory) {
      report += `${processedMessagesHistory}\n`;
    }
    
    return {
      success: true,
      message: finalMessage,
      results,
      actions: [
        `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${results.details.length}`,
        `–î–æ–±–∞–≤–ª–µ–Ω–æ: ${addedCount}`,
        `–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount}`,
        `–ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount}`,
        `–û—à–∏–±–æ–∫: ${errorCount}`
      ],
      report
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:', error);
    if (progressCallback) {
      progressCallback(100, `‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
    return {
      success: false,
      message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏',
      results: {
        processed: 0,
        added: 0,
        updated: 0,
        skipped: 0,
        errors: 1,
        details: []
      },
      actions: [],
      report: `‚ùå –û—à–∏–±–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
    };
  }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  (async () => {
    const limit = process.argv[2] ? parseInt(process.argv[2], 10) : 10;
    
    // –ü—Ä–æ—Å—Ç–æ–π callback –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏
    const progressCallback = (progress: number, message: string, result?: any) => {
      console.log(`\n[–ü—Ä–æ–≥—Ä–µ—Å—Å: ${progress}%]\n${message}`);
    };
    
    const result = await syncBooksAsync(limit, progressCallback);
    console.log('\n' + result.report);
  })();
}