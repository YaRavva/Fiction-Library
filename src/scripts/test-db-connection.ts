/**
 * Simple test script to check database connection and basic queries
 */

import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://ygqyswivvdtpgpnxrpzl.supabase.co';
const serviceRoleKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlncXlzd2l2dmR0cGdwbnhycHpsIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1ODg2ODY3NCwiZXhwIjoyMDc0NDQ0Njc0fQ.O1K3gUEr5Hjxy1Wwdt7oSU2-qQ6vYkmS1i70X51OvxY';

const supabase = createClient(supabaseUrl, serviceRoleKey);

async function testConnection() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ telegram_messages_index
    console.log('\nüìä 1. –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ telegram_messages_index...');
    const { count: indexCount, error: indexError } = await supabase
      .from('telegram_messages_index')
      .select('*', { count: 'exact', head: true });

    if (indexError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ telegram_messages_index:', indexError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${indexCount} –∑–∞–ø–∏—Å–µ–π –≤ telegram_messages_index`);
    }

    // –¢–µ—Å—Ç 2: –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ books —Å telegram_post_id
    console.log('\nüìä 2. –ü–æ–¥—Å—á–µ—Ç –∫–Ω–∏–≥ —Å telegram_post_id...');
    const { count: booksCount, error: booksError } = await supabase
      .from('books')
      .select('*', { count: 'exact', head: true })
      .not('telegram_post_id', 'is', null);

    if (booksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ books:', booksError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${booksCount} –∫–Ω–∏–≥ —Å telegram_post_id`);
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–µ–π –∏–∑ telegram_messages_index
    console.log('\nüìä 3. –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–µ–π –∏–∑ telegram_messages_index...');
    const { data: sampleIndex, error: sampleIndexError } = await supabase
      .from('telegram_messages_index')
      .select('message_id, author, title')
      .limit(5);

    if (sampleIndexError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑ telegram_messages_index:', sampleIndexError);
    } else {
      console.log('‚úÖ –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:');
      sampleIndex?.forEach((record: any, index: number) => {
        console.log(`  ${index + 1}. ID: ${record.message_id}, –ê–≤—Ç–æ—Ä: ${record.author || '–Ω–µ —É–∫–∞–∑–∞–Ω'}, –ù–∞–∑–≤–∞–Ω–∏–µ: ${record.title || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      });
    }

    // –¢–µ—Å—Ç 4: –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–µ–π –∏–∑ books
    console.log('\nüìä 4. –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–µ–π –∏–∑ books...');
    const { data: sampleBooks, error: sampleBooksError } = await supabase
      .from('books')
      .select('telegram_post_id, author, title')
      .not('telegram_post_id', 'is', null)
      .limit(5);

    if (sampleBooksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑ books:', sampleBooksError);
    } else {
      console.log('‚úÖ –ü—Ä–∏–º–µ—Ä—ã –∫–Ω–∏–≥:');
      sampleBooks?.forEach((record: any, index: number) => {
        console.log(`  ${index + 1}. Post ID: ${record.telegram_post_id}, –ê–≤—Ç–æ—Ä: ${record.author || '–Ω–µ —É–∫–∞–∑–∞–Ω'}, –ù–∞–∑–≤–∞–Ω–∏–µ: ${record.title || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      });
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

testConnection();