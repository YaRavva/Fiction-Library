#!/usr/bin/env tsx

/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏ –∫–Ω–∏–≥
 */

import { TelegramFileService } from '../lib/telegram/file-service';

async function testImprovedFileMatching() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤...\n');

    try {
        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–±–ª–µ–º–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
        const testCases = [
            {
                filename: '–°–µ—Ä–≥–µ–π_–¢–∞—Ä–º–∞—à–µ–≤_-_–î—Ä–µ–≤–Ω–∏–π.zip',
                expectedAuthor: '–°–µ—Ä–≥–µ–π –¢–∞—Ä–º–∞—à–µ–≤',
                expectedTitle: '–î—Ä–µ–≤–Ω–∏–π'
            },
            {
                filename: '–°–µ—Ä–≥–µ–∏ÃÜ_–¢–∞—Ä–º–∞—à–µ–≤_-_–î—Ä–µ–≤–Ω–∏–∏ÃÜ.zip', // NFD —Ñ–æ—Ä–º–∞
                expectedAuthor: '–°–µ—Ä–≥–µ–π –¢–∞—Ä–º–∞—à–µ–≤',
                expectedTitle: '–î—Ä–µ–≤–Ω–∏–π'
            },
            {
                filename: '–ê—Ä–≤–µ–Ω–¥–µ–∏ÃÜ–ª_–ê–≤—Ç–æ—Ä.zip',
                expectedAuthor: '–ê–≤—Ç–æ—Ä',
                expectedTitle: '–ê—Ä–≤–µ–Ω–¥–µ–π–ª'
            }
        ];

        console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏:');
        testCases.forEach((testCase, index) => {
            console.log(`${index + 1}. –§–∞–π–ª: "${testCase.filename}"`);
            console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π –∞–≤—Ç–æ—Ä: "${testCase.expectedAuthor}"`);
            console.log(`   –û–∂–∏–¥–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: "${testCase.expectedTitle}"`);
            console.log(`   –î–ª–∏–Ω–∞: ${testCase.filename.length}`);
        });

        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π
        console.log('\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π:');

        for (const testCase of testCases) {
            console.log(`\n–§–∞–π–ª: "${testCase.filename}"`);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
            const normalized = testCase.filename.normalize('NFC');
            console.log(`–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: "${testCase.filename}" ‚Üí "${normalized}"`);

            // –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏
            const metadata = TelegramFileService.extractMetadataFromFilename(normalized);

            console.log(`–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:`);
            console.log(`  –ê–≤—Ç–æ—Ä: "${metadata.author}"`);
            console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: "${metadata.title}"`);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
            const authorMatch = metadata.author.toLowerCase().includes(testCase.expectedAuthor.toLowerCase()) ||
                               testCase.expectedAuthor.toLowerCase().includes(metadata.author.toLowerCase());
            const titleMatch = metadata.title.toLowerCase().includes(testCase.expectedTitle.toLowerCase()) ||
                              testCase.expectedTitle.toLowerCase().includes(metadata.title.toLowerCase());

            console.log(`–¢–æ—á–Ω–æ—Å—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:`);
            console.log(`  –ê–≤—Ç–æ—Ä: ${authorMatch ? '‚úÖ' : '‚ùå'}`);
            console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${titleMatch ? '‚úÖ' : '‚ùå'}`);
        }

        console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testImprovedFileMatching().catch((error) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});