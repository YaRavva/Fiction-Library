#!/usr/bin/env tsx

import 'dotenv/config';
import { createClient } from '@supabase/supabase-js';
import * as fs from 'fs';

async function bindFileToBook() {
  console.log('=== –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ–∞–π–ª–∞ 1039.zip –∫ –∫–Ω–∏–≥–µ ===');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Supabase
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  
  if (!supabaseUrl || !supabaseAnonKey) {
    console.error('‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    return;
  }
  
  const supabase = createClient(supabaseUrl, supabaseAnonKey);
  
  try {
    const bookId = '1039';
    const fileName = '1039.zip';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ (–º—ã –µ–≥–æ —Å–∫–∞—á–∞–ª–∏ —Ä–∞–Ω–µ–µ)
    const localFilePath = `./${fileName}`;
    if (!fs.existsSync(localFilePath)) {
      console.error(`‚ùå –û–®–ò–ë–ö–ê: –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª ${fileName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    const fileStats = fs.statSync(localFilePath);
    const fileSize = fileStats.size;
    console.log(`–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSize} –±–∞–π—Ç`);
    
    console.log(`\n1. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ —Å telegram_file_id ${bookId}...`);
    let { data: book, error: searchError } = await supabase
      .from('books')
      .select('*')
      .eq('telegram_file_id', bookId)
      .single();
    
    if (!book || searchError) {
      console.error('‚ùå –û–®–ò–ë–ö–ê: –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      if (searchError) console.error(searchError.message);
      return;
    }
    
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞:');
    console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
    console.log(`  –ê–≤—Ç–æ—Ä: ${book.author}`);
    console.log(`  ID: ${book.id}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –∫–Ω–∏–≥–∏
    console.log('\n2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ –∫–Ω–∏–≥–∏...');
    
    const updateData = {
      file_url: `https://s3.cloud.ru/books/${fileName}`,
      file_size: fileSize,
      file_format: 'zip',
      storage_path: `books/${fileName}`
    };
    
    const { data: updatedBook, error: updateError } = await supabase
      .from('books')
      .update(updateData)
      .eq('id', book.id)
      .select()
      .single();
    
    if (updateError) {
      console.error('‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ:');
      console.error(updateError.message);
      return;
    }
    
    console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:');
    console.log(`  File URL: ${updatedBook.file_url}`);
    console.log(`  File Size: ${updatedBook.file_size}`);
    console.log(`  File Format: ${updatedBook.file_format}`);
    console.log(`  Storage Path: ${updatedBook.storage_path}`);
    
    console.log('\nüéâ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–Ω–∏–≥–µ!');
    
  } catch (error: any) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.error('\n–ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏:');
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–≤—è–∑–∫–∏
if (require.main === module) {
  bindFileToBook()
    .then(() => {
      console.log('\n‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    })
    .catch((error) => {
      console.error('\n‚ùå –ü—Ä–∏–≤—è–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

export { bindFileToBook };