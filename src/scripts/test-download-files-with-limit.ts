import { config } from 'dotenv';
import { TelegramSyncService } from '@/lib/telegram/sync';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: '.env' });

/**
 * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–¥—ã –ø—Ä–∏—á–∏–Ω –ø—Ä–æ–ø—É—Å–∫–∞ –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 * @param reason –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–¥ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
 * @returns –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 */
function translateSkipReason(reason: string): string {
  switch (reason) {
    case 'book_not_found':
      return '–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
    case 'book_not_imported':
      return '–ö–Ω–∏–≥–∞ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞';
    case 'already_processed':
      return '–§–∞–π–ª —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω —Ä–∞–Ω–µ–µ';
    case 'book_already_has_file':
      return '–£ –∫–Ω–∏–≥–∏ —É–∂–µ –µ—Å—Ç—å —Ñ–∞–π–ª';
    case 'book_already_has_file_in_books_table':
      return '–£ –∫–Ω–∏–≥–∏ —É–∂–µ –µ—Å—Ç—å —Ñ–∞–π–ª (–≤ —Ç–∞–±–ª–∏—Ü–µ books)';
    default:
      return reason || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞';
  }
}

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –ª–∏–º–∏—Ç–æ–º
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * npx tsx src/scripts/test-download-files-with-limit.ts [limit]
 * 
 * –ü—Ä–∏–º–µ—Ä:
 * npx tsx src/scripts/test-download-files-with-limit.ts 5
 */

async function testDownloadFilesWithLimit() {
  const args = process.argv.slice(2);
  const limit = args[0] ? parseInt(args[0]) : 5;

  console.log(`üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –ª–∏–º–∏—Ç–æ–º: ${limit}\n`);

  try {
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const syncService = await TelegramSyncService.getInstance();
    
    console.log(`üì• –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤...`);
    const results = await syncService.downloadAndProcessFilesDirectly(limit);
    
    console.log(`\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
    console.log(`–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${results.length}`);
    
    const successCount = results.filter((r: any) => r.success !== false && !r.skipped).length;
    const skippedCount = results.filter((r: any) => r.skipped).length;
    const failedCount = results.filter((r: any) => r.success === false).length;
    
    console.log(`–£—Å–ø–µ—à–Ω–æ: ${successCount}`);
    console.log(`–ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount}`);
    console.log(`–° –æ—à–∏–±–∫–∞–º–∏: ${failedCount}`);
    
    if (results.length > 0) {
      console.log(`\n–î–µ—Ç–∞–ª–∏:`);
      
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏
      const successfulResults = results.filter((r: any) => r.success !== false && !r.skipped);
      if (successfulResults.length > 0) {
        console.log(`\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (${successfulResults.length}):`);
        successfulResults.forEach((result: any, index: number) => {
          console.log(`${index + 1}. üìÑ ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})`);
          
          if (result.bookTitle && result.bookAuthor) {
            console.log(`   üìö ${result.bookAuthor} - ${result.bookTitle}`);
          } else if (result.bookTitle) {
            console.log(`   üìö ${result.bookTitle}`);
          } else if (result.bookAuthor) {
            console.log(`   üìö ${result.bookAuthor}`);
          }
          
          if (result.fileSize) {
            const sizeInKB = Math.round((result.fileSize as number) / 1024);
            console.log(`   üì¶ –†–∞–∑–º–µ—Ä: ${sizeInKB} KB`);
          }
        });
      }
      
      // –ó–∞—Ç–µ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
      const skippedResults = results.filter((r: any) => r.skipped);
      if (skippedResults.length > 0) {
        console.log(`\n‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ (${skippedResults.length}):`);
        skippedResults.forEach((result: any, index: number) => {
          console.log(`${index + 1}. üìÑ ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})`);
          
          if (result.bookTitle && result.bookAuthor) {
            console.log(`   üìö ${result.bookAuthor} - ${result.bookTitle}`);
          } else if (result.bookTitle) {
            console.log(`   üìö ${result.bookTitle}`);
          } else if (result.bookAuthor) {
            console.log(`   üìö ${result.bookAuthor}`);
          }
          
          if (result.reason) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
            const reasonText = translateSkipReason(result.reason as string);
            console.log(`   ‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: ${reasonText}`);
          }
          
          if (result.searchTerms && result.searchTerms.length > 0) {
            console.log(`   üîç –ü–æ–∏—Å–∫–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: ${result.searchTerms.join(', ')}`);
          }
        });
      }
      
      // –ù–∞–∫–æ–Ω–µ—Ü –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã —Å –æ—à–∏–±–∫–∞–º–∏
      const failedResults = results.filter((r: any) => r.success === false);
      if (failedResults.length > 0) {
        console.log(`\n‚ùå –° –æ—à–∏–±–∫–∞–º–∏ (${failedResults.length}):`);
        failedResults.forEach((result: any, index: number) => {
          console.log(`${index + 1}. üìÑ ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})`);
          if (result.error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
          }
        });
      }
    }
    
    console.log(`\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–∏—Å–∞
    await syncService.shutdown();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:', error);
    process.exit(1);
  }
}

// –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç
testDownloadFilesWithLimit();