/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–≤—è–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤ –∫ –∫–Ω–∏–≥–∞–º
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';
import { TelegramSyncService } from '../lib/telegram/sync';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.resolve(process.cwd(), '.env') });

async function diagnoseBookLinking() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–≤—è–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤ –∫ –∫–Ω–∏–≥–∞–º\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages...');
    const { data: processedMessages, error: processedMessagesError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .order('processed_at', { ascending: false })
      .limit(5);
      
    if (processedMessagesError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:', processedMessagesError.message);
      return;
    }
    
    if (!processedMessages || processedMessages.length === 0) {
      console.log('‚ÑπÔ∏è  –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${processedMessages.length} –∑–∞–ø–∏—Å–µ–π:`);
    for (const msg of processedMessages) {
      console.log(`  - Message ID: ${msg.message_id}`);
      console.log(`    Book ID: ${msg.book_id}`);
      console.log(`    Telegram File ID: ${msg.telegram_file_id}`);
      console.log(`    Processed At: ${msg.processed_at}`);
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
      if (msg.book_id) {
        const { data: book, error: bookError } = await supabase
          .from('books')
          .select('title, author, file_url, telegram_file_id')
          .eq('id', msg.book_id)
          .single();
          
        if (bookError) {
          console.log(`    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ: ${bookError.message}`);
        } else if (book) {
          console.log(`    üìö –ö–Ω–∏–≥–∞: "${book.title}" –∞–≤—Ç–æ—Ä–∞ ${book.author}`);
          console.log(`    üìé File URL: ${book.file_url || '–ù–µ—Ç'}`);
          console.log(`    üì± Telegram File ID: ${book.telegram_file_id || '–ù–µ—Ç'}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ telegram_file_id
          if (book.telegram_file_id && book.telegram_file_id === msg.telegram_file_id) {
            console.log(`    ‚úÖ Telegram File ID —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç`);
          } else if (book.telegram_file_id && book.telegram_file_id !== msg.telegram_file_id) {
            console.log(`    ‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ Telegram File ID`);
          } else {
            console.log(`    ‚ÑπÔ∏è  –ù–µ—Ç Telegram File ID –≤ –∑–∞–ø–∏—Å–∏ –∫–Ω–∏–≥–∏`);
          }
        }
      }
      console.log('');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ–∞–π–ª—ã –≤ Storage, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å –∫–Ω–∏–≥–∞–º–∏
    console.log('üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ Storage, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å –∫–Ω–∏–≥–∞–º–∏...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ Storage
    const { data: storageFiles, error: storageError } = await supabase
      .storage
      .from('books')
      .list('', { limit: 10 });
      
    if (storageError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', storageError.message);
      return;
    }
    
    if (!storageFiles || storageFiles.length === 0) {
      console.log('‚ÑπÔ∏è  –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ Storage');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${storageFiles.length} —Ñ–∞–π–ª–æ–≤ –≤ Storage:`);
    for (const file of storageFiles) {
      console.log(`  - ${file.name} (${file.id})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º telegram_file_id
      const { data: books, error: booksError } = await supabase
        .from('books')
        .select('id, title, author')
        .eq('telegram_file_id', file.name.replace(/\.[^/.]+$/, "")); // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        
      if (booksError) {
        console.log(`    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏: ${booksError.message}`);
      } else if (books && books.length > 0) {
        console.log(`    ‚úÖ –°–≤—è–∑–∞–Ω–∞ —Å –∫–Ω–∏–≥–æ–π: "${books[0].title}" –∞–≤—Ç–æ—Ä–∞ ${books[0].author}`);
      } else {
        console.log(`    ‚ö†Ô∏è  –ù–µ —Å–≤—è–∑–∞–Ω–∞ —Å –∫–Ω–∏–≥–æ–π`);
      }
      console.log('');
    }
    
    console.log('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
diagnoseBookLinking().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});