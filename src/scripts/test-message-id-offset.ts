// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
import { config } from 'dotenv';
import { join } from 'path';
import { TelegramService } from '../lib/telegram/client';
import { MetadataParser } from '../lib/telegram/parser';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
const envPath = join(process.cwd(), '.env');
config({ path: envPath });

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.error('  NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl || '–Ω–µ –∑–∞–¥–∞–Ω');
  console.error('  SUPABASE_SERVICE_ROLE_KEY:', supabaseKey || '–Ω–µ –∑–∞–¥–∞–Ω');
  console.error('\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testMessageIdOffset() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ —É–≤–µ–ª–∏—á–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ 1 –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω—É–∂–Ω–æ–π –∫–Ω–∏–≥–∏');
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥ —Å telegram_post_id –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const { data: books, error: booksError } = await supabase
      .from('books')
      .select('id, title, author, telegram_post_id')
      .not('telegram_post_id', 'is', null)
      .limit(10); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 10 –∫–Ω–∏–≥–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    if (booksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥:', booksError);
      return;
    }
    
    if (!books || books.length === 0) {
      console.log('‚ùå –ö–Ω–∏–≥–∏ —Å telegram_post_id –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    console.log(`üìö –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${books.length}`);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram –∫–ª–∏–µ–Ω—Ç
    const telegramClient = await TelegramService.getInstance();
    
    let successCount = 0;
    let totalCount = 0;
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∫–Ω–∏–≥—É
    for (const book of books) {
      try {
        totalCount++;
        const storedMessageId = parseInt(book.telegram_post_id);
        const targetMessageId = storedMessageId + 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º ID –Ω–∞ 1
        
        console.log(`\nüìù –¢–µ—Å—Ç ${totalCount}/${books.length}:`);
        console.log(`  –ö–Ω–∏–≥–∞: ${book.author} - ${book.title}`);
        console.log(`  –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID: ${storedMessageId}`);
        console.log(`  –¶–µ–ª–µ–≤–æ–π ID: ${targetMessageId}`);
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
        const channel = await telegramClient.getMetadataChannel();
        const channelId = typeof channel.id === 'object' && channel.id !== null ? 
          (channel.id as { toString: () => string }).toString() : 
          String(channel.id);
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º ID
        const messages = await telegramClient.getMessages(channelId, 5, targetMessageId) as unknown as { id?: number; text?: string }[];
        
        if (!messages || messages.length === 0) {
          console.log(`  ‚ÑπÔ∏è  –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
          continue;
        }
        
        // –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ ID
        const targetMessage = messages.find(msg => msg.id === targetMessageId);
        if (!targetMessage) {
          console.log(`  ‚ÑπÔ∏è  –¢–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–ø–æ–ª—É—á–µ–Ω—ã —Å–æ—Å–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è)`);
          continue;
        }
        
        if (!targetMessage.text) {
          console.log(`  ‚ÑπÔ∏è  –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞`);
          continue;
        }
        
        // –ü–∞—Ä—Å–∏–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        const metadata = MetadataParser.parseMessage(targetMessage.text);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è
        if (metadata.author === book.author && metadata.title === book.title) {
          console.log(`  ‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ!`);
          console.log(`    –ê–≤—Ç–æ—Ä: "${metadata.author}"`);
          console.log(`    –ù–∞–∑–≤–∞–Ω–∏–µ: "${metadata.title}"`);
          successCount++;
        } else {
          console.log(`  ‚ùå –ù–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ:`);
          console.log(`    –ê–≤—Ç–æ—Ä –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è: "${metadata.author}"`);
          console.log(`    –ê–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏: "${book.author}"`);
          console.log(`    –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è: "${metadata.title}"`);
          console.log(`    –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: "${book.title}"`);
        }
      } catch (error) {
        console.error(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏ ${book.id}:`, error);
      }
    }
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É Telegram –∫–ª–∏–µ–Ω—Ç–∞
    if (typeof (telegramClient as unknown as { disconnect?: () => Promise<void> }).disconnect === 'function') {
      await (telegramClient as unknown as { disconnect: () => Promise<void> }).disconnect!();
    }
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`);
    console.log(`  –í—Å–µ–≥–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${totalCount}`);
    console.log(`  –£—Å–ø–µ—à–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: ${successCount}`);
    console.log(`  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${totalCount > 0 ? Math.round((successCount / totalCount) * 100) : 0}%`);
    
    if (totalCount > 0 && successCount > 0) {
      console.log(`\n‚úÖ –ú–µ—Ç–æ–¥ —É–≤–µ–ª–∏—á–µ–Ω–∏—è ID –Ω–∞ 1 —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ ${Math.round((successCount / totalCount) * 100)}% —Å–ª—É—á–∞–µ–≤`);
    } else {
      console.log(`\n‚ùå –ú–µ—Ç–æ–¥ —É–≤–µ–ª–∏—á–µ–Ω–∏—è ID –Ω–∞ 1 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
testMessageIdOffset();