import { TelegramService } from '../lib/telegram/client';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function getTelegramMessage(messageId: number) {
  try {
    console.log(`üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram —Å ID: ${messageId}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –∫–ª–∏–µ–Ω—Ç–∞
    const telegramClient = await TelegramService.getInstance();
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
    console.log('üì• –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏...');
    const channel = await telegramClient.getMetadataChannel();
    
    // Convert BigInteger to string for compatibility
    const channelId = typeof channel.id === 'object' && channel.id !== null ? 
        (channel.id as { toString: () => string }).toString() : 
        String(channel.id);
    
    console.log(`üì° –ö–∞–Ω–∞–ª ID: ${channelId}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ ID
    console.log(`üì• –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID: ${messageId}...`);
    const messages = await telegramClient.getMessages(channelId, 1, messageId) as any;
    
    if (!messages || messages.length === 0) {
      console.log('‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return;
    }
    
    const message = messages[0];
    console.log('üì® –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ:');
    console.log(`  ID: ${message.id}`);
    console.log(`  –¢–µ–∫—Å—Ç: ${message.text ? message.text.substring(0, 200) + '...' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    
    if (message.text) {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
      const descriptionMatch = message.text.match(/–†–µ–π—Ç–∏–Ω–≥:[\s\S]*?\n([\s\S]*?)(?:\n\s*\n|–°–æ—Å—Ç–∞–≤:|$)/i);
      if (descriptionMatch) {
        const description = descriptionMatch[1].trim();
        console.log(`\nüìñ –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è:`);
        console.log(description);
      } else {
        console.log('\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è');
        console.log('–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:');
        console.log(message.text);
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç Telegram
    const telegramClient = await TelegramService.getInstance();
    if (telegramClient) {
      await telegramClient.disconnect();
    }
  }
}

// –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const messageIdStr = process.argv[2];
if (!messageIdStr) {
  console.error('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è');
  process.exit(1);
}

const messageId = parseInt(messageIdStr, 10);
if (isNaN(messageId)) {
  console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è');
  process.exit(1);
}

getTelegramMessage(messageId);