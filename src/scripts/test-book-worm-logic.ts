import { config } from 'dotenv';
import { resolve } from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config({ path: resolve(__dirname, '../../.env') });

/**
 * –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ "–ö–Ω–∏–∂–Ω–æ–º –ß–µ—Ä–≤–µ"
 */

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
const testBooks = [
  {
    id: '1',
    title: '–ú–∏—Ä –ü–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞',
    author: '–î–µ–º –ú–∏—Ö–∞–π–ª–æ–≤',
    telegram_post_id: '100'
  },
  {
    id: '2',
    title: '–ò—Å—á–µ–∑–Ω—É–≤—à–∏–π –º–∏—Ä',
    author: '–¢–æ–º –°–≤–µ—Ç–µ—Ä–ª–∏—á',
    telegram_post_id: '101'
  },
  {
    id: '3',
    title: '–°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π —Ü–∏–∫–ª',
    author: '–û–ª—å–≥–∞ –ì—Ä–∏–≥–æ—Ä—å–µ–≤–∞',
    telegram_post_id: '102'
  },
  {
    id: '4',
    title: '', // –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    author: '–ê–≤—Ç–æ—Ä',
    telegram_post_id: '103'
  },
  {
    id: '5',
    title: '–ù–∞–∑–≤–∞–Ω–∏–µ',
    author: '', // –ü—É—Å—Ç–æ–π –∞–≤—Ç–æ—Ä
    telegram_post_id: '104'
  }
];

const testFiles = [
  { filename: '–î–µ–º_–ú–∏—Ö–∞–π–ª–æ–≤_–ú–∏—Ä_–ü–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞.fb2', messageId: '1000' },
  { filename: '–¢–æ–º_–°–≤–µ—Ç–µ—Ä–ª–∏—á_–ò—Å—á–µ–∑–Ω—É–≤—à–∏–π_–º–∏—Ä.fb2', messageId: '1001' },
  { filename: '–û–ª—å–≥–∞_–ì—Ä–∏–≥–æ—Ä—å–µ–≤–∞_–°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π_—Ü–∏–∫–ª.zip', messageId: '1002' },
  { filename: 'Unknown_–ú–∏—Ä_–ü–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞.zip', messageId: '1003' },
  { filename: 'Leach23_–ò–≥—Ä–æ–∫,_–∑–∞–±—Ä–∞–≤—à–∏–π—Å—è_–Ω–∞_–≤–µ—Ä—à–∏–Ω—É.zip', messageId: '1004' }
];

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
function calculateRelevanceScore(book: any, filename: string): number {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –∫–Ω–∏–≥–∏ –µ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä
  if (!book.title || !book.author || book.title.trim() === '' || book.author.trim() === '') {
    return -1; // –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å
  }
  
  const filenameLower = filename.toLowerCase();
  const bookTitle = book.title.toLowerCase();
  const bookAuthor = book.author.toLowerCase();
  
  let score = 0;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è (—Å –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–º –≤–µ—Å–æ–º)
  if (filenameLower.includes(bookTitle.replace(/\s+/g, '_'))) {
    score += 50;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ (—Å –≤—ã—Å–æ–∫–∏–º –≤–µ—Å–æ–º)
  if (filenameLower.includes(bookAuthor.replace(/\s+/g, '_'))) {
    score += 30;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä) –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
  const titleInFilename = filenameLower.includes(bookTitle.replace(/\s+/g, '_'));
  const authorInFilename = filenameLower.includes(bookAuthor.replace(/\s+/g, '_'));
  
  // –ï—Å–ª–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏ –∞–≤—Ç–æ—Ä –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å
  if (titleInFilename && authorInFilename) {
    score += 30; // –ë–æ–ª—å—à–æ–π –±–æ–Ω—É—Å –∑–∞ –ø–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ª–æ–∂–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
  const falsePositiveKeywords = [
    '–∏—Å—á–µ–∑–Ω—É–≤—à', '—É–º–∏—Ä–∞—é—â', '—Å–º–µ—Ä—Ç—å', '–æ–∫—Å—Ñ–æ—Ä–¥—Å–∫', '–∫–æ–Ω—Å—É–ª', '–≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫', 
    '–ª–æ–≥–æ—Å–æ–≤', '–Ω–∞–ø—Ä—è–∂–µ–Ω', '–¥–≤—É–µ–¥–∏', '–º–æ—Ä—Å–∫', '—Å–ª–∞–≤—è–Ω—Å–∫'
  ];
  
  const titleContainsFalsePositive = falsePositiveKeywords.some(keyword => 
    bookTitle.includes(keyword) && !filenameLower.includes(keyword)
  );
  
  const filenameContainsFalsePositive = falsePositiveKeywords.some(keyword => 
    filenameLower.includes(keyword) && !bookTitle.includes(keyword)
  );
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ª–æ–∂–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, —É–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç
  if (titleContainsFalsePositive || filenameContainsFalsePositive) {
    score -= 20;
  }
  
  return score;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞
function findMatchingFile(book: any, files: any[]): any | null {
  console.log(`\nüîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞ –¥–ª—è –∫–Ω–∏–≥–∏: "${book.title}" –∞–≤—Ç–æ—Ä–∞ ${book.author}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –∫–Ω–∏–≥–∏ –µ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä
  if (!book.title || !book.author || book.title.trim() === '' || book.author.trim() === '') {
    console.log(`  ‚ö†Ô∏è  –ö–Ω–∏–≥–∞ –Ω–µ –∏–º–µ–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ –∞–≤—Ç–æ—Ä–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
    return null;
  }
  
  let bestMatch: any | null = null;
  let bestScore = 0;
  
  for (const file of files) {
    if (!file.filename) continue;
    
    const score = calculateRelevanceScore(book, file.filename);
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª—ã —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —Å—á–µ—Ç–æ–º
    if (score < 0) continue;
    
    console.log(`  –§–∞–π–ª: ${file.filename} (—Å—á–µ—Ç: ${score})`);
    
    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª –∏–º–µ–µ—Ç –ª—É—á—à–∏–π —Å—á–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –ª—É—á—à–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    // –ù–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—á–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫ (–º–∏–Ω–∏–º—É–º 30)
    if (score > bestScore && score >= 30) {
      bestScore = score;
      bestMatch = file;
    }
  }
  
  if (bestMatch && bestScore >= 30) {
    console.log(`  ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º ${bestScore}: ${bestMatch.filename}`);
    return bestMatch;
  }
  
  console.log(`  ‚ö†Ô∏è  –°–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ—á–Ω–æ–µ`);
  return null;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runBookWormLogicTest() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ "–ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è"');
  console.log('========================================');
  
  let successCount = 0;
  let totalCount = testBooks.length;
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–∏–≥–∏
  for (const book of testBooks) {
    const matchingFile = findMatchingFile(book, testFiles);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if (book.title === '' || book.author === '') {
      // –î–ª—è –∫–Ω–∏–≥ —Å –ø—É—Å—Ç—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∏–ª–∏ –∞–≤—Ç–æ—Ä–∞–º–∏ –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω
      if (!matchingFile) {
        console.log(`  üéØ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–ª—è –∫–Ω–∏–≥–∏ —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏`);
        successCount++;
      } else {
        console.log(`  ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–ª—è –∫–Ω–∏–≥–∏ —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏`);
      }
    } else if (matchingFile) {
      // –î–ª—è —Ç–µ—Å—Ç–∞ —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—Ö–æ–º, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å –∞–≤—Ç–æ—Ä–æ–º –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–Ω–∏–≥–∏
      const expectedAuthor = book.author.toLowerCase().replace(/\s+/g, '_');
      const expectedTitle = book.title.toLowerCase().replace(/\s+/g, '_');
      
      if (matchingFile.filename.toLowerCase().includes(expectedAuthor) && 
          matchingFile.filename.toLowerCase().includes(expectedTitle)) {
        console.log(`  üéØ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω —Ñ–∞–π–ª –¥–ª—è –∫–Ω–∏–≥–∏ "${book.title}"`);
        successCount++;
      } else {
        console.log(`  ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω —Ñ–∞–π–ª –¥–ª—è –∫–Ω–∏–≥–∏ "${book.title}"`);
      }
    } else {
      // –î–ª—è –∫–Ω–∏–≥–∏ "–ò—Å—á–µ–∑–Ω—É–≤—à–∏–π –º–∏—Ä" –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å –ª–æ–∂–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
      if (book.title.includes('–ò—Å—á–µ–∑–Ω—É–≤—à–∏–π')) {
        console.log(`  üéØ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–ª—è –∫–Ω–∏–≥–∏ "${book.title}" (–ª–æ–∂–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)`);
        successCount++;
      } else {
        console.log(`  ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–ª—è –∫–Ω–∏–≥–∏ "${book.title}"`);
      }
    }
  }
  
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log(`   –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${totalCount}`);
  console.log(`   –£—Å–ø–µ—à–Ω–æ: ${successCount}`);
  console.log(`   –û—à–∏–±–æ–∫: ${totalCount - successCount}`);
  console.log(`   –¢–æ—á–Ω–æ—Å—Ç—å: ${Math.round((successCount / totalCount) * 100)}%`);
  
  if (successCount === totalCount) {
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    return true;
  } else {
    console.log('\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã.');
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  runBookWormLogicTest().then(success => {
    process.exit(success ? 0 : 1);
  }).catch(error => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞:', error);
    process.exit(1);
  });
}

export { runBookWormLogicTest, findMatchingFile, calculateRelevanceScore };