import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

async function linkBookToFile() {
  console.log('üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ —Å —Ñ–∞–π–ª–æ–º');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
    
    if (!supabaseUrl || !supabaseKey) {
      console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      process.exit(1);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabase = createClient(supabaseUrl, supabaseKey);
    
    // ID —Å–æ–æ–±—â–µ–Ω–∏–π
    const metadataMessageId = '4866'; // ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—É–±–ª–∏—á–Ω–æ–º –∫–∞–Ω–∞–ª–µ (–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ)
    const fileMessageId = '4378';     // ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –∫–∞–Ω–∞–ª–µ (—Ñ–∞–π–ª)
    
    console.log(`üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ message_id=${metadataMessageId} —Å —Ñ–∞–π–ª–æ–º message_id=${fileMessageId}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages...');
    const { data: existingRecord, error: selectError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .eq('message_id', metadataMessageId)
      .single();
    
    if (selectError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø–∏—Å–∏:', selectError);
      process.exit(1);
    }
    
    if (!existingRecord) {
      console.error(`‚ùå –ó–∞–ø–∏—Å—å —Å message_id=${metadataMessageId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      process.exit(1);
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å:`);
    console.log(`  Message ID: ${existingRecord.message_id}`);
    console.log(`  Book ID: ${existingRecord.book_id}`);
    console.log(`  Telegram file ID: ${existingRecord.telegram_file_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å, –¥–æ–±–∞–≤–ª—è—è telegram_file_id
    console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Å telegram_file_id=${fileMessageId}...`);
    const { data: updatedRecord, error: updateError } = await supabase
      .from('telegram_processed_messages')
      .update({ 
        telegram_file_id: fileMessageId,
        processed_at: new Date().toISOString()
      })
      .eq('message_id', metadataMessageId)
      .select()
      .single();
    
    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:', updateError);
      process.exit(1);
    }
    
    console.log(`‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:`);
    console.log(`  Message ID: ${updatedRecord.message_id}`);
    console.log(`  Book ID: ${updatedRecord.book_id}`);
    console.log(`  Telegram file ID: ${updatedRecord.telegram_file_id}`);
    console.log(`  Processed at: ${updatedRecord.processed_at}`);
    
    // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å–Ω–æ–≤–∞
    console.log('\nüì• –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞...');
    console.log('–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
    console.log('npx tsx src/scripts/test-improved-download.ts');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏ —Å —Ñ–∞–π–ª–æ–º:', error);
    process.exit(1);
  }
}

linkBookToFile();