/**
 * Debug script to understand data linking between telegram_messages_index and books
 */

import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://ygqyswivvdtpgpnxrpzl.supabase.co';
const serviceRoleKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlncXlzd2l2dmR0cGdwbnhycHpsIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1ODg2ODY3NCwiZXhwIjoyMDc0NDQ0Njc0fQ.O1K3gUEr5Hjxy1Wwdt7oSU2-qQ6vYkmS1i70X51OvxY';

const supabase = createClient(supabaseUrl, serviceRoleKey);

async function debugDataLinking() {
  console.log('üîç –û—Ç–ª–∞–¥–∫–∞ —Å–≤—è–∑–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏...');
  console.log('========================================');

  try {
    // 1. –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –∏–Ω–¥–µ–∫—Å–∞
    console.log('\nüìä 1. –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –∏–∑ telegram_messages_index...');
    const { data: indexExamples, error: indexExamplesError } = await supabase
      .from('telegram_messages_index')
      .select('message_id, author, title')
      .not('author', 'is', null)
      .not('title', 'is', null)
      .limit(5);

    if (indexExamplesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑ –∏–Ω–¥–µ–∫—Å–∞:', indexExamplesError);
      return;
    }

    console.log('–ü—Ä–∏–º–µ—Ä—ã –∏–∑ –∏–Ω–¥–µ–∫—Å–∞:');
    indexExamples?.forEach((record: any, index: number) => {
      console.log(`  ${index + 1}. Message ID: ${record.message_id}`);
      console.log(`     –ê–≤—Ç–æ—Ä: "${record.author}"`);
      console.log(`     –ù–∞–∑–≤–∞–Ω–∏–µ: "${record.title}"`);
    });

    // 2. –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ books
    console.log('\nüìä 2. –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –∏–∑ books...');
    const { data: bookExamples, error: bookExamplesError } = await supabase
      .from('books')
      .select('telegram_post_id, author, title')
      .not('telegram_post_id', 'is', null)
      .limit(5);

    if (bookExamplesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑ books:', bookExamplesError);
      return;
    }

    console.log('–ü—Ä–∏–º–µ—Ä—ã –∏–∑ books:');
    bookExamples?.forEach((record: any, index: number) => {
      console.log(`  ${index + 1}. Telegram Post ID: ${record.telegram_post_id}`);
      console.log(`     –ê–≤—Ç–æ—Ä: "${record.author}"`);
      console.log(`     –ù–∞–∑–≤–∞–Ω–∏–µ: "${record.title}"`);
    });

    // 3. –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –ø–æ ID
    console.log('\nüìä 3. –ü–æ–∏—Å–∫ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π –ø–æ ID...');

    if (indexExamples && bookExamples) {
      const indexIds = new Set(indexExamples.map((record: any) => record.message_id));
      const bookIds = new Set(bookExamples.map((record: any) => record.telegram_post_id));

      const commonIds = Array.from(indexIds).filter(id => bookIds.has(id));

      console.log(`Message ID –≤ –∏–Ω–¥–µ–∫—Å–µ: ${Array.from(indexIds).join(', ')}`);
      console.log(`Telegram Post ID –≤ books: ${Array.from(bookIds).join(', ')}`);
      console.log(`–û–±—â–∏–µ ID: ${commonIds.length > 0 ? commonIds.join(', ') : '–Ω–µ—Ç'}`);

      if (commonIds.length === 0) {
        console.log('\n‚ùå –ù–µ—Ç –æ–±—â–∏—Ö ID –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏!');
        console.log('–≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç, –ø–æ—á–µ–º—É –Ω–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.');
      }
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∏–∞–ø–∞–∑–æ–Ω—ã ID
    console.log('\nüìä 4. –î–∏–∞–ø–∞–∑–æ–Ω—ã ID...');

    const { data: maxIndexId, error: maxIndexError } = await supabase
      .from('telegram_messages_index')
      .select('message_id')
      .order('message_id', { ascending: false })
      .limit(1)
      .single();

    const { data: minIndexId, error: minIndexError } = await supabase
      .from('telegram_messages_index')
      .select('message_id')
      .order('message_id', { ascending: true })
      .limit(1)
      .single();

    const { data: maxBookId, error: maxBookError } = await supabase
      .from('books')
      .select('telegram_post_id')
      .not('telegram_post_id', 'is', null)
      .order('telegram_post_id', { ascending: false })
      .limit(1)
      .single();

    const { data: minBookId, error: minBookError } = await supabase
      .from('books')
      .select('telegram_post_id')
      .not('telegram_post_id', 'is', null)
      .order('telegram_post_id', { ascending: true })
      .limit(1)
      .single();

    if (!maxIndexError && !minIndexError) {
      console.log(`–î–∏–∞–ø–∞–∑–æ–Ω message_id –≤ –∏–Ω–¥–µ–∫—Å–µ: ${minIndexId?.message_id} - ${maxIndexId?.message_id}`);
    }

    if (!maxBookError && !minBookError) {
      console.log(`–î–∏–∞–ø–∞–∑–æ–Ω telegram_post_id –≤ books: ${minBookId?.telegram_post_id} - ${maxBookId?.telegram_post_id}`);
    }

    console.log('\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ:', error);
  }
}

debugDataLinking();