import { serverSupabase } from '../lib/serverSupabase';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function findSeriesWithComposition() {
  try {
    console.log('üîç –ü–æ–∏—Å–∫ —Å–µ—Ä–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Å—Ç–∞–≤–µ...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–∏–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Å—Ç–∞–≤–µ
    const { data: series, error } = await (serverSupabase as any)
      .from('series')
      .select('*')
      .not('series_composition', 'is', null)
      .limit(5);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–µ—Ä–∏–π:', error);
      return;
    }
    
    if (!series || series.length === 0) {
      console.log('‚ùå –°–µ—Ä–∏–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Å—Ç–∞–≤–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ —Å–µ—Ä–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Å—Ç–∞–≤–µ: ${series.length}`);
    
    for (const s of series) {
      console.log(`\n--- –°–µ—Ä–∏—è: ${s.title} (${s.author}) ---`);
      console.log(`ID: ${s.id}`);
      
      if (s.series_composition && s.series_composition.length > 0) {
        console.log('–°–æ—Å—Ç–∞–≤:');
        for (const [index, book] of s.series_composition.entries()) {
          console.log(`  ${index + 1}. ${book.title} (${book.year})`);
        }
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

findSeriesWithComposition();