#!/usr/bin/env tsx

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è ID –ø–æ—Å—Ç–æ–≤ –≤–æ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * 1. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ telegram_post_id –≤ —Ç–∞–±–ª–∏—Ü–µ books
 * 2. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ telegram_file_id –≤ —Ç–∞–±–ª–∏—Ü–µ telegram_processed_messages
 * 3. –°–≤—è–∑—å –º–µ–∂–¥—É –∫–Ω–∏–≥–∞–º–∏ –∏ —Ñ–∞–π–ª–∞–º–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
 */

import { config } from 'dotenv';
import { serverSupabase } from '../lib/serverSupabase';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

interface Book {
    id: string;
    title: string;
    author: string;
    telegram_post_id: number | null;
    telegram_file_id: string | null;
    file_url: string | null;
}

interface ProcessedMessage {
    id: string;
    message_id: string;
    telegram_file_id: string | null;
    book_id: string | null;
    processed_at: string;
}

async function checkPostIdConsistency() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è ID –ø–æ—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö...\n');

    try {
        // 1. –ü–æ–ª—É—á–∞–µ–º –û–ë–©–ï–ï –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ books
        console.log('üìö 1. –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã books...');
        const { count: totalBooksCount, error: totalCountError } = await serverSupabase
            .from('books')
            .select('*', { count: 'exact', head: true });

        if (totalCountError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥:', totalCountError);
            return;
        }

        console.log(`üìä –û–ë–©–ï–ï –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –≤ —Ç–∞–±–ª–∏—Ü–µ: ${totalBooksCount || 0}`);

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤)
        const { data: allBooks, error: allBooksError } = await serverSupabase
            .from('books')
            .select('id, title, author, telegram_post_id, telegram_file_id, file_url')
            .limit(2000) as { data: Book[] | null, error: any };

        if (allBooksError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ—Ö –∫–Ω–∏–≥:', allBooksError);
            return;
        }

        console.log(`üìã –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ${allBooks?.length || 0}`);

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–∏–≥–∏ —Å telegram_post_id
        const { data: books, error: booksError } = await serverSupabase
            .from('books')
            .select('id, title, author, telegram_post_id, telegram_file_id, file_url')
            .not('telegram_post_id', 'is', null) as { data: Book[] | null, error: any };

        if (booksError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–Ω–∏–≥ —Å telegram_post_id:', booksError);
            return;
        }

        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥ —Å telegram_post_id: ${books?.length || 0}`);
        console.log(`‚ö†Ô∏è –ö–Ω–∏–≥ –±–µ–∑ telegram_post_id: ${(totalBooksCount || 0) - (books?.length || 0)}`);

        // 4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ telegram_post_id
        const booksWithPostId = (books as Book[])?.filter(book => book.telegram_post_id !== null) || [];
        const booksWithoutPostId = (allBooks as Book[])?.filter(book => !book.telegram_post_id) || [];

        console.log(`\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:`);
        console.log(`   –ö–Ω–∏–≥ —Å telegram_post_id: ${booksWithPostId.length}`);
        console.log(`   –ö–Ω–∏–≥ –±–µ–∑ telegram_post_id: ${booksWithoutPostId.length}`);

        if (booksWithoutPostId.length > 0) {
            console.log(`\nüìñ –ü—Ä–∏–º–µ—Ä—ã –∫–Ω–∏–≥ –±–µ–∑ telegram_post_id:`);
            booksWithoutPostId.slice(0, 3).forEach((book, index) => {
                console.log(`   ${index + 1}. "${book.title}" - ${book.author}`);
            });
        }

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        console.log('\nüìù 2. –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã telegram_processed_messages...');
        const { data: processedMessages, error: processedError } = await serverSupabase
            .from('telegram_processed_messages')
            .select('id, message_id, telegram_file_id, book_id, processed_at')
            .not('telegram_file_id', 'is', null) as { data: ProcessedMessage[] | null, error: any };

        if (processedError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', processedError);
            return;
        }

        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${processedMessages?.length || 0}`);

        // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ ID
        console.log('\nüîó 3. –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è ID –ø–æ—Å—Ç–æ–≤...');

        const booksWithFileId = (allBooks as Book[])?.filter(book => book.telegram_file_id !== null) || [];
        const booksWithFiles = (allBooks as Book[])?.filter(book => book.file_url !== null) || [];

        console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
        console.log(`   –ö–Ω–∏–≥ —Å telegram_post_id: ${booksWithPostId.length}`);
        console.log(`   –ö–Ω–∏–≥ —Å telegram_file_id: ${booksWithFileId.length}`);
        console.log(`   –ö–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏: ${booksWithFiles.length}`);
        console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${processedMessages?.length || 0}`);

        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –∫–Ω–∏–≥–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        console.log('\nüîç 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏ –∫–Ω–∏–≥ –∏ —Ñ–∞–π–ª–æ–≤...');

        const linkedFiles = (processedMessages as ProcessedMessage[])?.filter(msg => msg.book_id !== null) || [];
        const unlinkedFiles = (processedMessages as ProcessedMessage[])?.filter(msg => msg.book_id === null) || [];

        console.log(`‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${linkedFiles.length}`);
        console.log(`‚ö†Ô∏è –ù–µ–ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${unlinkedFiles.length}`);

        // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        console.log('\nüîç 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...');

        const postIds = booksWithPostId.map(book => book.telegram_post_id);
        const uniquePostIds = new Set(postIds);
        const duplicatePostIds = postIds.length - uniquePostIds.size;

        const fileIds = booksWithFileId.map(book => book.telegram_file_id);
        const uniqueFileIds = new Set(fileIds);
        const duplicateFileIds = fileIds.length - uniqueFileIds.size;

        console.log(`üìã –î—É–±–ª–∏–∫–∞—Ç—ã telegram_post_id: ${duplicatePostIds}`);
        console.log(`üìã –î—É–±–ª–∏–∫–∞—Ç—ã telegram_file_id: ${duplicateFileIds}`);

        // 6. –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π
        console.log('\nüìñ 6. –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π...');

        if (allBooks && allBooks.length > 0) {
            console.log('\n–ü—Ä–∏–º–µ—Ä –∫–Ω–∏–≥–∏ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏:');
            const exampleBook = allBooks[0] as Book;
            console.log(`   ID: ${exampleBook.id}`);
            console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${exampleBook.title}`);
            console.log(`   –ê–≤—Ç–æ—Ä: ${exampleBook.author}`);
            console.log(`   Telegram Post ID: ${exampleBook.telegram_post_id}`);
            console.log(`   Telegram File ID: ${exampleBook.telegram_file_id}`);
            console.log(`   File URL: ${exampleBook.file_url ? '‚úÖ' : '‚ùå'}`);
        }

        if (processedMessages && processedMessages.length > 0) {
            console.log('\n–ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:');
            const exampleFile = processedMessages[0] as ProcessedMessage;
            console.log(`   ID: ${exampleFile.id}`);
            console.log(`   Message ID: ${exampleFile.message_id}`);
            console.log(`   Telegram File ID: ${exampleFile.telegram_file_id}`);
            console.log(`   Book ID: ${exampleFile.book_id || '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}`);
            console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω: ${exampleFile.processed_at}`);
        }

        // 7. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø ID –ü–û–°–¢–û–í:');
        console.log('========================================');
        console.log(`üìö –ö–Ω–∏–≥ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏: ${booksWithPostId.length}`);
        console.log(`üìÅ –ö–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏: ${booksWithFiles.length}`);
        console.log(`üîó –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${processedMessages?.length || 0}`);
        console.log(`‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${linkedFiles.length}`);
        console.log(`‚ö†Ô∏è –ù–µ–ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${unlinkedFiles.length}`);
        console.log(`üìã –î—É–±–ª–∏–∫–∞—Ç–æ–≤ Post ID: ${duplicatePostIds}`);
        console.log(`üìã –î—É–±–ª–∏–∫–∞—Ç–æ–≤ File ID: ${duplicateFileIds}`);

        // 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
        if (unlinkedFiles.length > 0) {
            console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ ${unlinkedFiles.length} –Ω–µ–ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤`);
            console.log('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ñ–∞–π–ª–æ–≤');
        }
        if (duplicatePostIds > 0) {
            console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ ${duplicatePostIds} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ telegram_post_id`);
            console.log('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ—á–∏—Å—Ç–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã');
        }
        if (linkedFiles.length === processedMessages?.length) {
            console.log('‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –∫–Ω–∏–≥–∞–º');
        }

        console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è ID:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkPostIdConsistency().catch((error) => {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});