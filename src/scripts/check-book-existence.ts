import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

async function checkBookExistence() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–Ω–∏–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
    
    if (!supabaseUrl || !supabaseKey) {
      console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      process.exit(1);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabase = createClient(supabaseUrl, supabaseKey);
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–≤—Ç–æ—Ä—É
    const title = '–•—Ä–æ–Ω–∏–∫–∏ –û–ø—É—Å—Ç–æ—à—ë–Ω–Ω—ã—Ö –∑–µ–º–µ–ª—å';
    const author = '–ê–Ω—Ç–æ–Ω –ö–∞—Ä–µ–ª–∏–Ω';
    
    console.log(`üîé –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏: "${title}" –∞–≤—Ç–æ—Ä–∞ ${author}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ books
    const { data: books, error } = await supabase
      .from('books')
      .select('*')
      .ilike('title', `%${title}%`)
      .ilike('author', `%${author}%`);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏:', error);
      process.exit(1);
    }
    
    if (books && books.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${books.length} –∫–Ω–∏–≥(–∞):`);
      books.forEach((book, index) => {
        console.log(`  ${index + 1}. "${book.title}" –∞–≤—Ç–æ—Ä–∞ ${book.author}`);
        console.log(`     ID: ${book.id}`);
        console.log(`     Telegram post ID: ${book.telegram_post_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log(`     File URL: ${book.file_url || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log(`     File format: ${book.file_format || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log('---');
      });
    } else {
      console.log('‚ùå –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –æ–±—â–∏–π –ø–æ–∏—Å–∫
      console.log('üîç –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –æ–±—â–∏–π –ø–æ–∏—Å–∫...');
      
      const { data: generalBooks, error: generalError } = await supabase
        .from('books')
        .select('*')
        .or(`title.ilike.%${title}%,author.ilike.%${author}%`);
      
      if (generalError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—â–µ–º –ø–æ–∏—Å–∫–µ:', generalError);
      } else if (generalBooks && generalBooks.length > 0) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${generalBooks.length} –∫–Ω–∏–≥(–∞) –ø–æ –æ–±—â–µ–º—É –ø–æ–∏—Å–∫—É:`);
        generalBooks.forEach((book, index) => {
          console.log(`  ${index + 1}. "${book.title}" –∞–≤—Ç–æ—Ä–∞ ${book.author}`);
          console.log(`     ID: ${book.id}`);
          console.log('---');
        });
      } else {
        console.log('‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–∂–µ –ø—Ä–∏ –æ–±—â–µ–º –ø–æ–∏—Å–∫–µ');
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ —Ç–∞–±–ª–∏—Ü—É telegram_processed_messages
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ telegram_processed_messages...');
    
    const { data: messages, error: messagesError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .eq('message_id', '4378');
    
    if (messagesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ telegram_processed_messages:', messagesError);
    } else if (messages && messages.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${messages.length} –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages:`);
      messages.forEach((message, index) => {
        console.log(`  ${index + 1}. Message ID: ${message.message_id}`);
        console.log(`     Channel: ${message.channel}`);
        console.log(`     Book ID: ${message.book_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log(`     Telegram file ID: ${message.telegram_file_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log(`     Processed at: ${message.processed_at}`);
        console.log('---');
      });
    } else {
      console.log('‚ùå –ó–∞–ø–∏—Å—å —Å message_id 4378 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ telegram_processed_messages');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞–ª–∏—á–∏—è –∫–Ω–∏–≥–∏:', error);
    process.exit(1);
  }
}

checkBookExistence();