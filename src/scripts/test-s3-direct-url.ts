import { putObject } from '../lib/s3-service';
import dotenv from 'dotenv';

dotenv.config();

async function testS3DirectUrl() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ S3...');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç–∏
    const testContent = `
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ S3
============================================

–≠—Ç–æ—Ç —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ S3 –±–∞–∫–µ—Ç
–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã.

–¢–µ—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
- –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toISOString()}
- –ò–º—è —Ñ–∞–π–ª–∞: test-file.txt
- –§–æ—Ä–º–∞—Ç: txt
    `.trim();
    
    const fileBuffer = Buffer.from(testContent, 'utf-8');
    const fileName = 'test-file.txt';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ S3 –±–∞–∫–µ—Ç
    const bucketName = process.env.S3_BUCKET_NAME;
    if (!bucketName) {
      throw new Error('S3_BUCKET_NAME environment variable is not set.');
    }
    
    console.log(`üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –≤ S3 –±–∞–∫–µ—Ç: ${bucketName}`);
    await putObject(fileName, fileBuffer, bucketName);
    console.log(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ S3: ${fileName}`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π URL —Ñ–∞–π–ª–∞
    const fileUrl = `https://${bucketName}.s3.cloud.ru/${fileName}`;
    console.log(`üîó –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª: ${fileUrl}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ...');
    const response = await fetch(fileUrl);
    
    if (response.ok) {
      console.log('‚úÖ –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ');
      const content = await response.text();
      console.log('üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:');
      console.log(content);
    } else {
      console.error(`‚ùå –§–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–∫—Ä–∏–ø—Ç–µ:', error);
  }
}

testS3DirectUrl();