import { TelegramSyncService } from '../lib/telegram/sync';

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param messageId ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–∞–π–ª–æ–º
 */
export async function processSingleFile(messageId: number) {
  try {
    console.log(`üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è ${messageId}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const syncService = await TelegramSyncService.getInstance();
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª
    const result = await syncService.processSingleFileById(messageId);
    
    const success = result.success !== false;
    
    console.log(`${success ? '‚úÖ' : '‚ùå'} –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    let report = `–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n`;
    report += `–§–∞–π–ª: ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})\n`;
    report += `–°—Ç–∞—Ç—É—Å: ${success ? '–£—Å–ø–µ—à–Ω–æ' : '–û—à–∏–±–∫–∞'}\n`;
    
    if (!success && result.error) {
      report += `–û—à–∏–±–∫–∞: ${result.error}\n`;
    }
    
    if (result.bookTitle && result.bookAuthor) {
      report += `–ö–Ω–∏–≥–∞: ${result.bookAuthor} - ${result.bookTitle}\n`;
    }
    
    if (result.fileSize) {
      report += `–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${result.fileSize} –±–∞–π—Ç\n`;
    }
    
    if (result.fileUrl) {
      report += `URL —Ñ–∞–π–ª–∞: ${result.fileUrl}\n`;
    }
    
    return {
      success,
      message: success ? `–§–∞–π–ª ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω` : `–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: ${result.error}`,
      result,
      report
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:', error);
    return {
      success: false,
      message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      result: null,
      report: `–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
    };
  }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  if (process.argv.length < 3) {
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx process-single-file.ts <messageId>');
    process.exit(1);
  }
  
  const messageId = parseInt(process.argv[2], 10);
  if (isNaN(messageId)) {
    console.log('–û—à–∏–±–∫–∞: messageId –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º');
    process.exit(1);
  }
  
  (async () => {
    const result = await processSingleFile(messageId);
    console.log(result.report);
  })();
}