/**
 * –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∫–Ω–∏–≥–∞–º–∏ –∏ –∑–∞–ø–∏—Å—è–º–∏ –≤ telegram_processed_messages
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.resolve(process.cwd(), '.env') });

async function quickAnalysis() {
  console.log('üîç –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∫–Ω–∏–≥–∞–º–∏ –∏ –∑–∞–ø–∏—Å—è–º–∏\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –≤ –±–∞–∑–µ
    console.log('üìö –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥...');
    const { count: booksCount, error: booksCountError } = await supabase
      .from('books')
      .select('*', { count: 'exact', head: true });
      
    if (booksCountError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –∫–Ω–∏–≥:', booksCountError.message);
      return;
    }
    
    console.log(`‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –≤ –±–∞–∑–µ: ${booksCount || 0}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages
    console.log('\nüìù –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages...');
    const { count: recordsCount, error: recordsCountError } = await supabase
      .from('telegram_processed_messages')
      .select('*', { count: 'exact', head: true });
      
    if (recordsCountError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –∑–∞–ø–∏—Å–µ–π:', recordsCountError.message);
      return;
    }
    
    console.log(`‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages: ${recordsCount || 0}`);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ
    console.log('\nüìä –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è:');
    console.log(`   –ö–Ω–∏–≥: ${booksCount || 0}`);
    console.log(`   –ó–∞–ø–∏—Å–µ–π: ${recordsCount || 0}`);
    console.log(`   –†–∞–∑–Ω–∏—Ü–∞: ${(recordsCount || 0) - (booksCount || 0)}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –±–µ–∑ book_id
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –±–µ–∑ book_id (–ø–µ—Ä–≤—ã–µ 10)...');
    const { data: recordsWithoutBookId, error: recordsWithoutBookIdError } = await supabase
      .from('telegram_processed_messages')
      .select('id, message_id, telegram_file_id, book_id, processed_at')
      .is('book_id', null)
      .limit(10);
      
    if (recordsWithoutBookIdError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π –±–µ–∑ book_id:', recordsWithoutBookIdError.message);
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –±–µ–∑ book_id: ${recordsWithoutBookId?.length || 0}`);
    
    if (recordsWithoutBookId && recordsWithoutBookId.length > 0) {
      console.log('–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –±–µ–∑ book_id:');
      for (const record of recordsWithoutBookId) {
        console.log(`  - ID: ${record.id}`);
        console.log(`    Message ID: ${record.message_id}`);
        console.log(`    Telegram File ID: ${record.telegram_file_id || '–ù–µ—Ç'}`);
        console.log(`    Processed At: ${record.processed_at}`);
        console.log('');
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π —Å book_id
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å book_id (–ø–µ—Ä–≤—ã–µ 10)...');
    const { data: recordsWithBookId, error: recordsWithBookIdError } = await supabase
      .from('telegram_processed_messages')
      .select('id, message_id, telegram_file_id, book_id, processed_at')
      .not('book_id', 'is', null)
      .limit(10);
      
    if (recordsWithBookIdError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π —Å book_id:', recordsWithBookIdError.message);
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å book_id: ${recordsWithBookId?.length || 0}`);
    
    if (recordsWithBookId && recordsWithBookId.length > 0) {
      console.log('–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π —Å book_id:');
      for (const record of recordsWithBookId) {
        console.log(`  - ID: ${record.id}`);
        console.log(`    Message ID: ${record.message_id}`);
        console.log(`    Telegram File ID: ${record.telegram_file_id || '–ù–µ—Ç'}`);
        console.log(`    Book ID: ${record.book_id}`);
        console.log(`    Processed At: ${record.processed_at}`);
        console.log('');
      }
    }
    
    console.log('‚úÖ –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
quickAnalysis().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});