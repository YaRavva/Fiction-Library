import JSZip from 'jszip';
import dotenv from 'dotenv';

dotenv.config();

async function testFileContentDisplay() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞...');
    
    // URL —Ñ–∞–π–ª–∞ –≤ S3
    const fileUrl = 'https://fiction-library-1760461283197.s3.cloud.ru/4379.zip';
    
    console.log(`üì• –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª: ${fileUrl}`);
    
    const response = await fetch(fileUrl);
    if (!response.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${response.status} ${response.statusText}`);
      return;
    }
    
    const arrayBuffer = await response.arrayBuffer();
    const zip = new JSZip();
    const zipContent = await zip.loadAsync(arrayBuffer);
    
    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∞
    let firstFileContent: string | null = null;
    const filePromises: Promise<void>[] = [];
    
    zipContent.forEach((relativePath: string, zipEntry: JSZip.JSZipObject) => {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã macOS (–∫–∞–∫ –≤ —á–∏—Ç–∞–ª–∫–µ)
      if (!zipEntry.dir && 
          (relativePath.endsWith('.fb2') || relativePath.endsWith('.txt')) &&
          !relativePath.includes('__MACOSX/') &&
          !relativePath.includes('/._') &&
          !firstFileContent) {
        filePromises.push(
          zipEntry.async('text').then((content: string) => {
            firstFileContent = content;
            console.log(`  ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: ${relativePath} (${content.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
          })
        );
      }
    });
    
    await Promise.all(filePromises);
    
    if (!firstFileContent) {
      console.log('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —á–∏—Ç–∞–ª–∫–µ
    console.log('\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:');
    
    // –í —á–∏—Ç–∞–ª–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è dangerouslySetInnerHTML
    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
    const content = firstFileContent as string;
    
    console.log(`  –î–ª–∏–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: ${content.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    const startContent = content.substring(0, 200);
    console.log(`  –ù–∞—á–∞–ª–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:`);
    console.log(`  ${startContent.replace(/\n/g, '\\n').replace(/\t/g, '\\t')}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º XML
    if (content.trim().startsWith('<?xml') || content.trim().startsWith('<FictionBook')) {
      console.log(`  ‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º FB2/XML`);
    } else {
      console.log(`  ‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º FB2/XML`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏
    if (content.includes('</FictionBook>')) {
      console.log(`  ‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ </FictionBook>`);
    } else {
      console.log(`  ‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ </FictionBook>`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    if (content.includes('<script') || content.includes('javascript:')) {
      console.log(`  ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
    if (content.includes('encoding="UTF-8"')) {
      console.log(`  ‚úÖ –ö–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8`);
    } else {
      console.log(`  ‚ö†Ô∏è  –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ:', error);
  }
}

testFileContentDisplay();