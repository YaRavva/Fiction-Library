import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

async function analyzeProcessedMessages() {
  console.log('üîç –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã telegram_processed_messages...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
    
    if (!supabaseUrl || !supabaseKey) {
      console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      process.exit(1);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabase = createClient(supabaseUrl, supabaseKey);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    const { count, error: countError } = await supabase
      .from('telegram_processed_messages')
      .select('*', { count: 'exact', head: true });
    
    if (countError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –∑–∞–ø–∏—Å–µ–π:', countError);
    } else {
      console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages: ${count}`);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
    console.log('\nüìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π:');
    const { data: recentMessages, error: recentError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .order('processed_at', { ascending: false })
      .limit(10);
    
    if (recentError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π:', recentError);
    } else if (recentMessages && recentMessages.length > 0) {
      recentMessages.forEach((message, index) => {
        console.log(`  ${index + 1}. Message ID: ${message.message_id}`);
        console.log(`     Channel: ${message.channel}`);
        console.log(`     Book ID: ${message.book_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log(`     Telegram file ID: ${message.telegram_file_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log(`     Processed at: ${message.processed_at}`);
        console.log('---');
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å–∏ —Å book_id, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º –∫–Ω–∏–≥–∞–º
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥...');
    
    // ID –∫–Ω–∏–≥, –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ
    const bookIds = [
      '352391c7-0d07-494c-a0ad-2c286320b146', // "—Ü–∏–∫–ª –û–¥–∏—Å—Å–µ–π –§–æ–∫—Å"
      '1eac5ef4-0bfa-4ab7-9375-084cdec175f7'  // "—Ü–∏–∫–ª –•—Ä–æ–Ω–∏–∫–∏ –û–ø—É—Å—Ç–æ—à–µ–Ω–Ω—ã—Ö –∑–µ–º–µ–ª—å"
    ];
    
    for (const bookId of bookIds) {
      const { data: bookMessages, error: bookError } = await supabase
        .from('telegram_processed_messages')
        .select('*')
        .eq('book_id', bookId);
      
      if (bookError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∫–Ω–∏–≥–∏ ${bookId}:`, bookError);
      } else if (bookMessages && bookMessages.length > 0) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${bookMessages.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∫–Ω–∏–≥–∏ ${bookId}:`);
        bookMessages.forEach((message, index) => {
          console.log(`  ${index + 1}. Message ID: ${message.message_id}`);
          console.log(`     Channel: ${message.channel}`);
          console.log(`     Telegram file ID: ${message.telegram_file_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
          console.log(`     Processed at: ${message.processed_at}`);
          console.log('---');
        });
      } else {
        console.log(`‚ùå –ó–∞–ø–∏—Å–∏ –¥–ª—è –∫–Ω–∏–≥–∏ ${bookId} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–ø–∏—Å–∏ —Å telegram_file_id
    console.log('\nüìÅ –ó–∞–ø–∏—Å–∏ —Å telegram_file_id:');
    const { data: fileMessages, error: fileError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .not('telegram_file_id', 'is', null)
      .order('processed_at', { ascending: false })
      .limit(5);
    
    if (fileError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø–∏—Å–µ–π —Å telegram_file_id:', fileError);
    } else if (fileMessages && fileMessages.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${fileMessages.length} –∑–∞–ø–∏—Å–µ–π —Å telegram_file_id:`);
      fileMessages.forEach((message, index) => {
        console.log(`  ${index + 1}. Message ID: ${message.message_id}`);
        console.log(`     Book ID: ${message.book_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
        console.log(`     Telegram file ID: ${message.telegram_file_id}`);
        console.log(`     Processed at: ${message.processed_at}`);
        console.log('---');
      });
    } else {
      console.log('‚ùå –ó–∞–ø–∏—Å–∏ —Å telegram_file_id –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ç–∞–±–ª–∏—Ü—ã telegram_processed_messages:', error);
    process.exit(1);
  }
}

analyzeProcessedMessages();