import { config } from 'dotenv';
import { join } from 'path';
import { TelegramSyncService } from '../lib/telegram/sync';

// Load environment variables from .env file
const envPath = join(process.cwd(), '.env');
config({ path: envPath });

async function testSyncBooksReport() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –æ—Ç—á–µ—Ç–æ–º\n');
    
    // Initialize Telegram sync service
    console.log('üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Telegram...');
    const syncService = await TelegramSyncService.getInstance();
    console.log('‚úÖ –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // Test sync with a small limit
    console.log('\nüöÄ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥ (–ª–∏–º–∏—Ç: 5)...');
    const result = await syncService.syncBooks(5);
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:');
    console.log(`   ========================================`);
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.processed}`);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ: ${result.added}`);
    console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${result.updated}`);
    console.log(`   –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${result.skipped}`);
    console.log(`   –û—à–∏–±–æ–∫: ${result.errors}`);
    
    if (result.details && result.details.length > 0) {
      console.log('\nüìã –î–ï–¢–ê–õ–ò:');
      result.details.forEach((detail: any, index: number) => {
        let status = '‚úÖ';
        if (detail.status === 'error') {
          status = '‚ùå';
        } else if (detail.status === 'skipped') {
          status = '‚ÑπÔ∏è';
        } else if (detail.status === 'updated') {
          status = 'üîÑ';
        } else if (detail.status === 'added') {
          status = 'üÜï';
        }
        
        console.log(`${index + 1}. ${status} –°–æ–æ–±—â–µ–Ω–∏–µ ${detail.msgId || '–ë–µ–∑ ID'}`);
        if (detail.bookTitle && detail.bookAuthor) {
          console.log(`   –ö–Ω–∏–≥–∞: "${detail.bookTitle}" –∞–≤—Ç–æ—Ä–∞ ${detail.bookAuthor}`);
        }
        if (detail.reason) {
          console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${detail.reason}`);
        }
        if (detail.error) {
          console.log(`   –û—à–∏–±–∫–∞: ${detail.error}`);
        }
        console.log('---');
      });
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
}

testSyncBooksReport();