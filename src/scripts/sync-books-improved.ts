import { TelegramSyncService } from '../lib/telegram/sync';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

/**
 * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∫–Ω–∏–≥–∏ –∏–∑ Telegram –∫–∞–Ω–∞–ª–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø–∞—Ä—Å–µ—Ä–æ–º
 * @param limit –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 */
export async function syncBooksImproved(limit: number = 10) {
  try {
    console.log(`üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥ –∏–∑ Telegram (–ª–∏–º–∏—Ç: ${limit})`);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const syncService = await TelegramSyncService.getInstance();
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–Ω–∏–≥–∏ —Å —É—á–µ—Ç–æ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    const results = await syncService.syncBooks(limit);
    
    const { processed, added, updated, skipped, errors, details } = results;
    
    console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${processed} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, ${added} –¥–æ–±–∞–≤–ª–µ–Ω–æ, ${updated} –æ–±–Ω–æ–≤–ª–µ–Ω–æ, ${skipped} –ø—Ä–æ–ø—É—â–µ–Ω–æ, ${errors} –æ—à–∏–±–æ–∫`);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∞–≤—Ç–æ—Ä–æ–º –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤–º–µ—Å—Ç–æ bookID
    const formattedDetails = details.map((detail: any) => {
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ –∏–∑ –¥–µ—Ç–∞–ª–µ–π
      const bookInfo = detail.bookTitle && detail.bookAuthor 
        ? `${detail.bookAuthor} - ${detail.bookTitle}`
        : detail.bookId || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–∏–≥–∞';
      
      switch (detail.status) {
        case 'added':
          return `+ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: ${bookInfo} (—Å–æ–æ–±—â–µ–Ω–∏–µ ${detail.msgId})`;
        case 'updated':
          return `~ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: ${bookInfo} (—Å–æ–æ–±—â–µ–Ω–∏–µ ${detail.msgId})`;
        case 'skipped':
          const reason = detail.reason || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞';
          return `‚Üí –ü—Ä–æ–ø—É—â–µ–Ω–æ: —Å–æ–æ–±—â–µ–Ω–∏–µ ${detail.msgId} (${reason})`;
        case 'error':
          const error = detail.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
          return `‚ùå –û—à–∏–±–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ ${detail.msgId} (${error})`;
        default:
          return `? –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${JSON.stringify(detail)}`;
      }
    });
    
    return {
      success: true,
      message: `–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${processed} –∏–∑ ${limit} —Å–æ–æ–±—â–µ–Ω–∏–π`,
      results,
      actions: [
        `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${processed}`,
        `–î–æ–±–∞–≤–ª–µ–Ω–æ –∫–Ω–∏–≥: ${added}`,
        `–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–Ω–∏–≥: ${updated}`,
        `–ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipped}`,
        `–û—à–∏–±–æ–∫: ${errors}`,
        ...formattedDetails
      ]
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥:', error);
    return {
      success: false,
      message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏',
      results: {
        processed: 0,
        added: 0,
        updated: 0,
        skipped: 0,
        errors: 1,
        details: []
      },
      actions: []
    };
  }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
if (require.main === module) {
  const limit = process.argv[2] ? parseInt(process.argv[2], 10) : 10;
  syncBooksImproved(limit)
    .then((result) => {
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', result);
      // –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ CLI —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
      process.exit(0);
    })
    .catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
      // –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ CLI —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
      process.exit(1);
    });
}