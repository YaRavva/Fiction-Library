// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ

async function testRealDownload() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...\n');
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏
  const book = {
    title: "—Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π",
    author: "–í–∏–ª–º–∞ –ö–∞–¥–ª–µ—á–∫–æ–≤–∞",
    file_format: "zip",
    file_url: "https://fiction-library-1760461283197.s3.cloud.ru/4379.zip"
  };
  
  console.log('üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ:');
  console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
  console.log(`  –ê–≤—Ç–æ—Ä: ${book.author}`);
  console.log(`  –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${book.file_format}`);
  console.log(`  URL —Ñ–∞–π–ª–∞: ${book.file_url}\n`);
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
  const sanitizedTitle = book.title.replace(/[<>:"/\\|?*\x00-\x1F]/g, '_');
  const sanitizedAuthor = book.author.replace(/[<>:"/\\|?*\x00-\x1F]/g, '_');
  const fileExtension = book.file_format && book.file_format !== '' ? 
    book.file_format : 'zip';
  const filename = `${sanitizedAuthor} - ${sanitizedTitle}.${fileExtension}`;
  
  console.log(`üìù –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞: ${filename}\n`);
  
  // –ò–º–∏—Ç–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–∞–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  console.log('üì• –ò–º–∏—Ç–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:');
  
  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç, –∏–º–∏—Ç–∏—Ä—É—é—â–∏–π document
  const mockDocument = {
    body: {
      appendChild: (element: any) => {
        console.log(`  –î–æ–±–∞–≤–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: <${element.tagName}>`);
        if (element.tagName === 'A') {
          console.log(`    href: ${element.href}`);
          console.log(`    download: ${element.download}`);
          console.log(`    target: ${element.target}`);
        }
      },
      removeChild: (element: any) => {
        console.log(`  –£–¥–∞–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: <${element.tagName}>`);
      }
    },
    createElement: (tag: string) => {
      return {
        tagName: tag.toUpperCase(),
        href: '',
        download: '',
        target: '',
        click: () => {
          console.log('  ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω –∫–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ');
          console.log(`     –§–∞–π–ª –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω –∫–∞–∫: ${filename}`);
        }
      };
    }
  };
  
  // –ò–º–∏—Ç–∞—Ü–∏—è window.URL
  const mockWindowURL = {
    createObjectURL: (blob: any) => {
      console.log('  –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç URL –¥–ª—è Blob');
      return 'blob:test-url';
    },
    revokeObjectURL: (url: string) => {
      console.log('  –û—Å–≤–æ–±–æ–∂–¥–µ–Ω –æ–±—ä–µ–∫—Ç URL');
    }
  };
  
  // –ò–º–∏—Ç–∞—Ü–∏—è fetch
  const mockFetch = async (url: string) => {
    console.log(`  –ó–∞–ø—Ä–æ—Å –∫: ${url}`);
    // –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    return {
      ok: true,
      blob: async () => {
        console.log('  –ü–æ–ª—É—á–µ–Ω Blob –∏–∑ –æ—Ç–≤–µ—Ç–∞');
        return 'mock-blob';
      }
    };
  };
  
  console.log('\nüîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:');
  
  try {
    // –û—Å–Ω–æ–≤–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è (—á–µ—Ä–µ–∑ fetch)
    console.log('  –í—ã–∑–æ–≤ fetch...');
    const response = await mockFetch(book.file_url);
    
    if (!response.ok) {
      throw new Error('HTTP error!');
    }
    
    console.log('  –ü–æ–ª—É—á–µ–Ω–∏–µ blob...');
    const blob = await response.blob();
    
    console.log('  –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ URL...');
    const url = mockWindowURL.createObjectURL(blob);
    
    console.log('  –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ <a>...');
    const a = mockDocument.createElement('a');
    a.href = url;
    a.download = filename;
    
    console.log('  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM...');
    mockDocument.body.appendChild(a);
    
    console.log('  –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ...');
    a.click();
    
    console.log('  –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ DOM...');
    mockDocument.body.removeChild(a);
    
    console.log('  –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ URL...');
    mockWindowURL.revokeObjectURL(url);
    
    console.log('\n‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω —á–µ—Ä–µ–∑ fetch —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ fetch:', error);
    
    console.log('\nüîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ fallback —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:');
    
    // Fallback —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
    console.log('  –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ <a>...');
    const a = mockDocument.createElement('a');
    a.href = book.file_url;
    a.download = filename;
    a.target = '_blank';
    
    console.log('  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM...');
    mockDocument.body.appendChild(a);
    
    console.log('  –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ...');
    a.click();
    
    console.log('  –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ DOM...');
    mockDocument.body.removeChild(a);
    
    console.log('\n‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω —á–µ—Ä–µ–∑ fallback —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º!');
  }
  
  console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  console.log(`   –§–∞–π–ª –±—É–¥–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å—Å—è —Å –∏–º–µ–Ω–µ–º: ${filename}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testRealDownload();