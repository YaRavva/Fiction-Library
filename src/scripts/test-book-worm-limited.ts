import { BookWormService } from '../lib/telegram/book-worm-service';
import dotenv from 'dotenv';

dotenv.config();

async function testBookWormLimited() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è –Ω–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º –Ω–∞–±–æ—Ä–µ —Ñ–∞–π–ª–æ–≤...');
    
    const bookWorm = new BookWormService();
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ 10 —Ñ–∞–π–ª–æ–≤
    console.log('\nüîÑ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ 10 —Ñ–∞–π–ª–∞–º–∏)...');
    
    // –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
    const startTime = Date.now();
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    const result = await bookWorm.run('update');
    
    // –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
    const endTime = Date.now();
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('========================');
    console.log(`üìö –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:`);
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.metadata.processed}`);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ: ${result.metadata.added}`);
    console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${result.metadata.updated}`);
    console.log(`   –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${result.metadata.skipped}`);
    console.log(`   –û—à–∏–±–æ–∫: ${result.metadata.errors}`);
    console.log(`üìÅ –§–∞–π–ª—ã:`);
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.files.processed}`);
    console.log(`   –ü—Ä–∏–≤—è–∑–∞–Ω–æ: ${result.files.linked}`);
    console.log(`   –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${result.files.skipped}`);
    console.log(`   –û—à–∏–±–æ–∫: ${result.files.errors}`);
    console.log(`‚è±  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${((endTime - startTime) / 1000).toFixed(2)} —Å–µ–∫—É–Ω–¥`);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    const totalProcessed = result.files.processed;
    const totalLinked = result.files.linked;
    const totalSkipped = result.files.skipped;
    const totalErrors = result.files.errors;
    
    console.log('\nüìà –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:');
    console.log('=====================');
    
    if (totalProcessed > 0) {
      const successRate = ((totalLinked + totalSkipped) / totalProcessed) * 100;
      console.log(`–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${successRate.toFixed(2)}%`);
    }
    
    if (totalLinked > 0) {
      console.log(`–£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${totalLinked}`);
    }
    
    if (totalSkipped > 0) {
      console.log(`–ü—Ä–æ–ø—É—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç): ${totalSkipped}`);
    }
    
    if (totalErrors > 0) {
      console.log(`–û—à–∏–±–æ–∫: ${totalErrors}`);
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è:', error);
    process.exit(1);
  }
}

testBookWormLimited();