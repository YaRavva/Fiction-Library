import { MetadataParser } from '../lib/telegram/parser';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
const testCases = [
  {
    name: "–¶–∏–∫–ª –ü–æ—Å–æ–±–∏–µ –¥–ª—è –¢—ë–º–Ω–æ–≥–æ –∫–Ω—è–∑—è",
    text: `–ê–≤—Ç–æ—Ä: –û–ª—å–≥–∞ –ë–æ–ª–¥—ã—Ä–µ–≤–∞

–ù–∞–∑–≤–∞–Ω–∏–µ: —Ü–∏–∫–ª –ü–æ—Å–æ–±–∏–µ –¥–ª—è –¢—ë–º–Ω–æ–≥–æ –∫–Ω—è–∑—è

–ñ–∞–Ω—Ä: 
#—Ñ—ç–Ω—Ç–µ–∑–∏
#–≥–µ—Ä–æ–∏—á–µ—Å–∫–æ–µ—Ñ—ç–Ω—Ç–µ–∑–∏
#–ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–æ–µ
#–∑–∞–∫–æ–Ω—á–µ–Ω

–†–µ–π—Ç–∏–Ω–≥: 7.05 #–≤—ã—à–µ7

–ï—Å–ª–∏ –¢–µ–º–Ω—ã–π –í–ª–∞—Å—Ç–µ–ª–∏–Ω —Å—Ç—Ä–∞–¥–∞–µ—Ç —Å–∫—É–∫–æ–π ‚Äî –ø–ª–æ—Ö–æ –≤—Å–µ–º –≤–æ–∫—Ä—É–≥. –û–¥–Ω–∞–∫–æ –≤–æ–∑—å–º–µ–º –æ–¥–Ω—É –∫–æ–º–∞–Ω–¥—É –≥–µ—Ä–æ–µ–≤, –∏–¥—É—â–∏—Ö –ø–æ –µ–≥–æ –≥–æ–ª–æ–≤—É ‚Äî –∏ –≤–æ—Ç —É–∂–µ —Ç–µ–±–µ –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, –∏ –≤—Ä–∞–≥–∏, –∏ –¥–∞–∂–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è. –ù–∞—Å—Ç–æ–ª—å–∫–æ, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –∏–≥—Ä–∞—Ç—å—Å—è —Å ¬´–Ω–æ–≤—ã–º–∏ –∏–≥—Ä—É—à–∫–∞–º–∏¬ª, –∏ —Å–µ—Ä—å–µ–∑–Ω–æ –≤–∑—è—Ç—å—Å—è –∑–∞ –±–µ—Å–ø–æ—Ä—è–¥–∫–∏, —Ç–≤–æ—Ä—è—â–∏–µ—Å—è –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–µ–º–ª—è—Ö. –¢—É—Ç –≥–ª–∞–≤–Ω–æ–µ –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞—Ä–∞—Ç—å—Å—è. –í–µ–¥—å —Ü–µ–Ω–∞ –æ—à–∏–±–∫–∏ ‚Äî –∂–∏–∑–Ω–∏ –¥–æ—Ä–æ–≥–∏—Ö —Ç–µ–±–µ —Å—É—â–µ—Å—Ç–≤.

–°–æ—Å—Ç–∞–≤:
–ö–∞–∫ —Ä–∞–∑–≤–µ—è—Ç—å —Å–∫—É–∫—É (2010)
–ö–∞–∫ —Ä–∞–∑–¥–∞—Ç—å –¥–æ–ª–≥–∏ (2013)`
  },
  {
    name: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç",
    text: `–ê–≤—Ç–æ—Ä: –°–µ—Ä–≥–µ–π –¢–∫–∞—á–µ–≤
–ù–∞–∑–≤–∞–Ω–∏–µ: —Ü–∏–∫–ª –î—Ä–∏–º–µ—Ä—ã
–ñ–∞–Ω—Ä: #—Ñ—ç–Ω—Ç–µ–∑–∏, #–±–æ–µ–≤–∏–∫, #–õ–∏—Ç–†–ü–ì, #–ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–æ–µ, #–∑–∞–∫–æ–Ω—á–µ–Ω
–†–µ–π—Ç–∏–Ω–≥: 4.5
–ß–µ—Ä–Ω–∞—è –ø–æ–ª–æ—Å–∞. –£ –∫–∞–∂–¥–æ–≥–æ –æ–Ω–∞ –±—ã–≤–∞–µ—Ç. –ù–æ –∏–Ω–æ–≥–¥–∞ —ç—Ç–æ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –Ω–∞—Å—Ç–æ–ª—å–∫–æ, —á—Ç–æ –∫–æ–Ω—Ü–∞ –∏ –∫—Ä–∞—è –µ–º—É –Ω–µ –≤–∏–¥–Ω–æ.

–°–æ—Å—Ç–∞–≤:
1. –ü–æ —Ç—É —Å—Ç–æ—Ä–æ–Ω—É —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ (2019)
2. –ù–∞—Å–ª–µ–¥–∏–µ –ø–∞–¥—à–∏—Ö (2019)
3. –°–æ–Ω –ø–∞–¥—à–∏—Ö (2019)
4. –î—Ä–æ–∂—å –≤—Ä–µ–º–µ–Ω–∏ (2019)
5. –í–ª–∞—Å—Ç—å (2020)`
  }
];

console.log('üîç –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö\n');

for (const testCase of testCases) {
  console.log(`--- –¢–µ—Å—Ç: ${testCase.name} ---`);
  const metadata = MetadataParser.parseMessage(testCase.text);
  
  console.log(`–ê–≤—Ç–æ—Ä: "${metadata.author}"`);
  console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: "${metadata.title}"`);
  console.log(`–†–µ–π—Ç–∏–Ω–≥: ${metadata.rating}`);
  console.log(`–ñ–∞–Ω—Ä—ã: [${metadata.genres.map(g => `"${g}"`).join(', ')}]`);
  console.log(`–¢–µ–≥–∏: [${metadata.tags.map(t => `"${t}"`).join(', ')}]`);
  console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: "${metadata.description.substring(0, 100)}${metadata.description.length > 100 ? '...' : ''}"`);
  console.log(`–ö–Ω–∏–≥–∏ –≤ —Å–µ—Ä–∏–∏: ${metadata.books.length}`);
  
  for (const book of metadata.books) {
    console.log(`  - ${book.title} (${book.year})`);
  }
  
  console.log('');
}