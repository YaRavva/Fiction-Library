/**
 * –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –ª–∏–º–∏—Ç–æ–º 10
 * –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram
 */
async function simulateDownload(limit: number = 10) {
  console.log(`üöÄ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ (–ª–∏–º–∏—Ç: ${limit})`);
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤
  const results = [];
  
  for (let i = 1; i <= Math.min(limit, 10); i++) {
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 500));
    
    const filename = `book_${Math.floor(Math.random() * 10000)}.zip`;
    const success = Math.random() > 0.2; // 80% —É—Å–ø–µ—Ö–∞
    
    results.push({
      messageId: 1000 + i,
      filename,
      success,
      ...(success ? {} : { error: 'Network timeout' })
    });
    
    console.log(`  ${success ? '‚úÖ' : '‚ùå'} ${filename} (ID: ${1000 + i}) ${success ? '–∑–∞–≥—Ä—É–∂–µ–Ω' : '–æ—à–∏–±–∫–∞'}`);
  }
  
  const successCount = results.filter(r => r.success).length;
  const failedCount = results.length - successCount;
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–∏:`);
  console.log(`   –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${results.length}`);
  console.log(`   –£—Å–ø–µ—à–Ω–æ: ${successCount}`);
  console.log(`   –û—à–∏–±–æ–∫: ${failedCount}`);
  
  return {
    success: true,
    message: `–°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${successCount} –∏–∑ ${results.length} —Ñ–∞–π–ª–æ–≤`,
    results,
    actions: [
      `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${results.length}`,
      `–£—Å–ø–µ—à–Ω–æ: ${successCount}`,
      `–° –æ—à–∏–±–∫–∞–º–∏: ${failedCount}`
    ]
  };
}

// –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ —Å –ª–∏–º–∏—Ç–æ–º 10
simulateDownload(10)
  .then(result => {
    console.log('\n‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏:', error);
    process.exit(1);
  });