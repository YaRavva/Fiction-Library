#!/usr/bin/env tsx

import 'dotenv/config';
import { createClient } from '@supabase/supabase-js';

async function checkBooksCount() {
  console.log('=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ===');
  
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  
  if (!supabaseUrl || !supabaseServiceKey) {
    console.error('‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    return;
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Supabase
  const supabase = createClient(supabaseUrl, supabaseServiceKey);
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥
    console.log('\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥...');
    const { count: totalCount, error: countError } = await supabase
      .from('books')
      .select('*', { count: 'exact', head: true });
    
    if (countError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥:', countError.message);
      return;
    }
    
    console.log(`‚úÖ –í—Å–µ–≥–æ –∫–Ω–∏–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${totalCount}`);
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏...');
    const { count: booksWithFilesCount, error: booksWithFilesCountError } = await supabase
      .from('books')
      .select('*', { count: 'exact', head: true })
      .not('file_url', 'is', null);
    
    if (booksWithFilesCountError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏:', booksWithFilesCountError.message);
      return;
    }
    
    console.log(`‚úÖ –ö–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏: ${booksWithFilesCount}`);
    
    // 3. –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤
    console.log('\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤...');
    const { count: booksWithoutFilesCount, error: booksWithoutFilesCountError } = await supabase
      .from('books')
      .select('*', { count: 'exact', head: true })
      .is('file_url', null);
    
    if (booksWithoutFilesCountError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤:', booksWithoutFilesCountError.message);
      return;
    }
    
    console.log(`‚úÖ –ö–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤: ${booksWithoutFilesCount}`);
    
    // 4. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏ (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è)
    console.log('\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏...');
    const { data: booksWithFiles, error: booksWithFilesError } = await supabase
      .from('books')
      .select('id, title, author, file_url, storage_path, file_format, file_size')
      .not('file_url', 'is', null)
      .order('created_at', { ascending: true });
    
    if (booksWithFilesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏:', booksWithFilesError.message);
      return;
    }
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${booksWithFiles.length} –∫–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏`);
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–∏–≥–∏, —É–∂–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–µ –≤ Cloud.ru S3
    const booksInCloudRu = booksWithFiles.filter(book => 
      book.file_url && book.file_url.includes('s3.cloud.ru')
    );
    
    console.log(`üì¶ –ö–Ω–∏–≥ —É–∂–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ Cloud.ru S3: ${booksInCloudRu.length}`);
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã
    const booksNotInCloudRu = booksWithFiles.filter(book => 
      !book.file_url || !book.file_url.includes('s3.cloud.ru')
    );
    
    console.log(`‚è≥ –ö–Ω–∏–≥, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–µ—Ä–µ–Ω–æ—Å–∞ –≤ Cloud.ru S3: ${booksNotInCloudRu.length}`);
    
    console.log('\nüìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`  üìö –í—Å–µ–≥–æ –∫–Ω–∏–≥: ${totalCount}`);
    console.log(`  üìÇ –ö–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏: ${booksWithFilesCount}`);
    console.log(`  üö´ –ö–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤: ${booksWithoutFilesCount}`);
    console.log(`  ‚òÅÔ∏è  –ö–Ω–∏–≥ —É–∂–µ –≤ Cloud.ru S3: ${booksInCloudRu.length}`);
    console.log(`  üîÑ –ö–Ω–∏–≥ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞: ${booksNotInCloudRu.length}`);
    
  } catch (error: any) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error('–ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏:');
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
if (require.main === module) {
  checkBooksCount()
    .then(() => {
      console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    })
    .catch((error) => {
      console.error('\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

export { checkBooksCount };