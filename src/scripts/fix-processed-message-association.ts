/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏ –º–µ–∂–¥—É –∑–∞–ø–∏—Å—å—é –≤ telegram_processed_messages –∏ –∫–Ω–∏–≥–æ–π
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ message_id 4379 —Å–≤—è–∑–∞–Ω —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–Ω–∏–≥–æ–π
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.resolve(process.cwd(), '.env') });

async function fixProcessedMessageAssociation() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –∑–∞–ø–∏—Å—å—é –≤ telegram_processed_messages –∏ –∫–Ω–∏–≥–æ–π\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É "—Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π" –∞–≤—Ç–æ—Ä–∞ –í–∏–ª–º–∞ –ö–∞–¥–ª–µ—á–∫–æ–≤–∞
    console.log('üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ "—Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π" –∞–≤—Ç–æ—Ä–∞ –í–∏–ª–º–∞ –ö–∞–¥–ª–µ—á–∫–æ–≤–∞...');
    const { data: correctBook, error: bookError } = await supabase
      .from('books')
      .select('id, title, author')
      .ilike('author', '%–í–∏–ª–º–∞ –ö–∞–¥–ª–µ—á–∫–æ–≤–∞%')
      .ilike('title', '%—Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π%')
      .single();
      
    if (bookError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏:', bookError.message);
      return;
    }
    
    if (!correctBook) {
      console.log('‚ùå –ö–Ω–∏–≥–∞ "—Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π" –∞–≤—Ç–æ—Ä–∞ –í–∏–ª–º–∞ –ö–∞–¥–ª–µ—á–∫–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: "${correctBook.title}" –∞–≤—Ç–æ—Ä–∞ ${correctBook.author}`);
    console.log(`   ID: ${correctBook.id}\n`);
    
    // –ò—â–µ–º –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages –¥–ª—è message_id 4379
    console.log('üîç –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages –¥–ª—è message_id = 4379...');
    const { data: processedMessage, error: processedMessageError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .eq('message_id', '4379')
      .single();
      
    if (processedMessageError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø–∏—Å–∏:', processedMessageError.message);
      return;
    }
    
    if (!processedMessage) {
      console.log('‚ùå –ó–∞–ø–∏—Å—å –¥–ª—è message_id = 4379 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å:`);
    console.log(`   ID –∑–∞–ø–∏—Å–∏: ${processedMessage.id}`);
    console.log(`   –¢–µ–∫—É—â–∏–π Book ID: ${processedMessage.book_id}`);
    console.log(`   Telegram File ID: ${processedMessage.telegram_file_id}`);
    console.log(`   Processed At: ${processedMessage.processed_at}\n`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Å–≤—è–∑–∞–Ω–∞ –∑–∞–ø–∏—Å—å
    if (processedMessage.book_id === correctBook.id) {
      console.log('‚úÖ –ó–∞–ø–∏—Å—å —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–≤—è–∑–∞–Ω–∞ —Å –∫–Ω–∏–≥–æ–π');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Å–≤—è–∑–∞–Ω–Ω–æ–π –∫–Ω–∏–≥–µ
    if (processedMessage.book_id) {
      const { data: currentBook, error: currentBookError } = await supabase
        .from('books')
        .select('title, author')
        .eq('id', processedMessage.book_id)
        .single();
        
      if (!currentBookError && currentBook) {
        console.log(`‚ö†Ô∏è  –¢–µ–∫—É—â–∞—è —Å–≤—è–∑–∞–Ω–Ω–∞—è –∫–Ω–∏–≥–∞: "${currentBook.title}" –∞–≤—Ç–æ—Ä–∞ ${currentBook.author}`);
      }
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤—è–∑—å
    console.log('\n‚úèÔ∏è  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–∏ –∑–∞–ø–∏—Å–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–Ω–∏–≥–æ–π...');
    const { error: updateError } = await supabase
      .from('telegram_processed_messages')
      .update({
        book_id: correctBook.id,
        processed_at: new Date().toISOString()
      })
      .eq('id', processedMessage.id);
      
    if (updateError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:', updateError.message);
      return;
    }
    
    console.log('‚úÖ –°–≤—è–∑—å —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    console.log(`   –ó–∞–ø–∏—Å—å —Ç–µ–ø–µ—Ä—å —Å–≤—è–∑–∞–Ω–∞ —Å –∫–Ω–∏–≥–æ–π: "${correctBook.title}" –∞–≤—Ç–æ—Ä–∞ ${correctBook.author}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
fixProcessedMessageAssociation().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});