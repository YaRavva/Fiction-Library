/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ –∑–∞–ø–∏—Å–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å –∫–Ω–∏–≥–∞–º–∏
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.resolve(process.cwd(), '.env') });

async function fullCleanup() {
  console.log('üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –∑–∞–ø–∏—Å–µ–π, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–Ω–∏–≥–∞–º–∏\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ Storage
    console.log('üìÇ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ Storage...');
    const { data: storageFiles, error: storageError } = await supabase
      .storage
      .from('books')
      .list('', { limit: 1000 }); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ 1000 —Ñ–∞–π–ª–æ–≤
      
    if (storageError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', storageError.message);
      return;
    }
    
    if (!storageFiles || storageFiles.length === 0) {
      console.log('‚úÖ –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ Storage');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${storageFiles.length} —Ñ–∞–π–ª–æ–≤ –≤ Storage`);
    
    let deletedFiles = 0;
    let deletedRecords = 0;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
    for (const file of storageFiles) {
      // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ñ–∞–π–ª–∞ (—É–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ)
      const fileId = file.name.replace(/\.[^/.]+$/, "");
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º telegram_file_id
      const { data: books, error: booksError } = await supabase
        .from('books')
        .select('id')
        .eq('telegram_file_id', fileId);
        
      if (booksError) {
        console.log(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏ –¥–ª—è —Ñ–∞–π–ª–∞ ${file.name}: ${booksError.message}`);
        continue;
      }
      
      // –ï—Å–ª–∏ –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages
      if (!books || books.length === 0) {
        console.log(`  üóëÔ∏è  –§–∞–π–ª ${file.name} –Ω–µ —Å–≤—è–∑–∞–Ω —Å –∫–Ω–∏–≥–æ–π, —É–¥–∞–ª—è–µ–º...`);
        
        // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–∑ Storage
        const { error: removeError } = await supabase
          .storage
          .from('books')
          .remove([file.name]);
          
        if (removeError) {
          console.log(`    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${file.name}: ${removeError.message}`);
        } else {
          console.log(`    ‚úÖ –§–∞–π–ª ${file.name} —É–¥–∞–ª–µ–Ω`);
          deletedFiles++;
          
          // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages
          console.log(`    üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages –¥–ª—è —Ñ–∞–π–ª–∞ ${fileId}...`);
          const { error: deleteRecordError } = await supabase
            .from('telegram_processed_messages')
            .delete()
            .eq('telegram_file_id', fileId);
            
          if (deleteRecordError) {
            console.log(`      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ñ–∞–π–ª–∞ ${fileId}: ${deleteRecordError.message}`);
          } else {
            console.log(`      ‚úÖ –ó–∞–ø–∏—Å—å –¥–ª—è —Ñ–∞–π–ª–∞ ${fileId} —É–¥–∞–ª–µ–Ω–∞`);
            deletedRecords++;
          }
        }
      } else {
        console.log(`  ‚úÖ –§–∞–π–ª ${file.name} —Å–≤—è–∑–∞–Ω —Å –∫–Ω–∏–≥–æ–π`);
      }
    }
    
    console.log(`\n‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
    console.log(`   –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${deletedFiles}`);
    console.log(`   –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${deletedRecords}`);
    
    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–º–µ—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages –±–µ–∑ —Ñ–∞–π–ª–æ–≤...');
    const { data: allRecords, error: allRecordsError } = await supabase
      .from('telegram_processed_messages')
      .select('*');
      
    if (allRecordsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:', allRecordsError.message);
      return;
    }
    
    if (!allRecords || allRecords.length === 0) {
      console.log('‚úÖ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${allRecords.length} –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages`);
    
    let orphanedRecords = 0;
    
    for (const record of allRecords) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª —Å —Ç–∞–∫–∏–º telegram_file_id
      if (record.telegram_file_id) {
        const { data: files, error: filesError } = await supabase
          .storage
          .from('books')
          .list('', { 
            search: `${record.telegram_file_id}.` // –ò—â–µ–º —Ñ–∞–π–ª—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å —ç—Ç–æ–≥–æ ID
          });
          
        if (filesError) {
          console.log(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ ${record.id}: ${filesError.message}`);
          continue;
        }
        
        // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
        if (!files || files.length === 0) {
          console.log(`  üóëÔ∏è  –ó–∞–ø–∏—Å—å ${record.id} –Ω–µ –∏–º–µ–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞, —É–¥–∞–ª—è–µ–º...`);
          const { error: deleteError } = await supabase
            .from('telegram_processed_messages')
            .delete()
            .eq('id', record.id);
            
          if (deleteError) {
            console.log(`    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ ${record.id}: ${deleteError.message}`);
          } else {
            console.log(`    ‚úÖ –ó–∞–ø–∏—Å—å ${record.id} —É–¥–∞–ª–µ–Ω–∞`);
            orphanedRecords++;
          }
        }
      }
    }
    
    console.log(`\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –±–µ–∑ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
    console.log(`   –£–¥–∞–ª–µ–Ω–æ orphaned –∑–∞–ø–∏—Å–µ–π: ${orphanedRecords}`);
    console.log(`\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${deletedFiles}`);
    console.log(`   –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages: ${deletedRecords + orphanedRecords}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
fullCleanup().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});