import { config } from 'dotenv';
import { join } from 'path';
import { TelegramFileService } from '../lib/telegram/file-service';

// Load environment variables from .env file
const envPath = join(process.cwd(), '.env');
config({ path: envPath });

async function testSingleFileProcessing() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑ Telegram\n');
    
    // Initialize Telegram file service
    console.log('üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ Telegram...');
    const fileService = await TelegramFileService.getInstance();
    console.log('‚úÖ –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // Test processing a specific file by ID
    const testMessageId = 4379; // –ü—Ä–∏–º–µ—Ä ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ª–æ–≥–æ–≤
    console.log(`\nüì• –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID: ${testMessageId}...`);
    
    const result = await fileService.processSingleFileById(testMessageId);
    
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:`);
    console.log(`   Message ID: ${result.messageId}`);
    console.log(`   Filename: ${result.filename}`);
    console.log(`   Success: ${result.success}`);
    console.log(`   Skipped: ${result.skipped}`);
    
    if (result.bookTitle && result.bookAuthor) {
      console.log(`   Book: "${result.bookTitle}" by ${result.bookAuthor}`);
    }
    
    if (result.reason) {
      console.log(`   Reason: ${result.reason}`);
    }
    
    if (result.error) {
      console.log(`   Error: ${result.error}`);
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:', error);
    process.exit(1);
  }
}

testSingleFileProcessing();