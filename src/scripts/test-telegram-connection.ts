/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram
 * –ù–µ —Ç—Ä–µ–±—É–µ—Ç Supabase, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * npx tsx src/scripts/test-telegram-connection.ts
 */

import dotenv from 'dotenv';
import path from 'path';
import { TelegramClient } from 'telegram';
import { StringSession } from 'telegram/sessions';

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
dotenv.config({ path: path.resolve(process.cwd(), '.env') });

async function testTelegramConnection() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...\n');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const apiId = process.env.TELEGRAM_API_ID;
  const apiHash = process.env.TELEGRAM_API_HASH;
  const sessionString = process.env.TELEGRAM_SESSION;
  const metadataChannel = process.env.TELEGRAM_METADATA_CHANNEL;

  if (!apiId || !apiHash) {
    console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_ID –∏ TELEGRAM_API_HASH –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env');
    process.exit(1);
  }

  if (!sessionString) {
    console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_SESSION –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ .env');
    console.error('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: npx tsx src/scripts/telegram-login.ts');
    process.exit(1);
  }

  if (!metadataChannel) {
    console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_METADATA_CHANNEL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env');
    process.exit(1);
  }

  console.log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
  console.log(`   API ID: ${apiId}`);
  console.log(`   –ö–∞–Ω–∞–ª –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: ${metadataChannel}\n`);

  try {
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    console.log('üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...');
    const session = new StringSession(sessionString);
    const client = new TelegramClient(session, parseInt(apiId), apiHash, {
      connectionRetries: 5,
    });

    await client.start({
      phoneNumber: async () => await Promise.reject('Interactive login not supported'),
      phoneCode: async () => await Promise.reject('Interactive login not supported'),
      password: async () => await Promise.reject('Interactive login not supported'),
      onError: (err) => console.error('Telegram client error:', err),
    });

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n');

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
    console.log('üìö –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö...');
    const username = metadataChannel.split('/').pop() || metadataChannel;
    const channel = await client.getEntity(username);
    
    console.log('‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω:');
    console.log(`   ID: ${(channel as any).id}`);
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${(channel as any).title || username}`);
    console.log('');

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    console.log('üìñ –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π...');
    const messages = await client.getMessages(channel, { limit: 5 });
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π\n`);

    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    messages.forEach((msg, index) => {
      console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ ${index + 1}:`);
      console.log(`   ID: ${msg.id}`);
      console.log(`   –î–∞—Ç–∞: ${msg.date}`);
      if (msg.message) {
        const preview = msg.message.substring(0, 100).replace(/\n/g, ' ');
        console.log(`   –¢–µ–∫—Å—Ç: ${preview}${msg.message.length > 100 ? '...' : ''}`);
      }
      if ((msg as any).media) {
        console.log(`   –ú–µ–¥–∏–∞: –î–∞`);
      }
      console.log('');
    });

    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å');
    console.log('   http://localhost:3001/admin');

    await client.disconnect();
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram:', error);
    
    if (error instanceof Error) {
      if (error.message.includes('AUTH_KEY_UNREGISTERED')) {
        console.error('\nüí° –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é:');
        console.error('   npx tsx src/scripts/telegram-login.ts');
      } else if (error.message.includes('CHANNEL_INVALID')) {
        console.error('\nüí° –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TELEGRAM_METADATA_CHANNEL –≤ .env');
      }
    }
    
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTelegramConnection();

