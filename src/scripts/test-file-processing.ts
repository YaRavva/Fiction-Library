/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å —É—á–µ—Ç–æ–º –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';
import { TelegramSyncService } from '../lib/telegram/sync';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.resolve(process.cwd(), '.env') });

async function testFileProcessing() {
  console.log('üîç –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å —É—á–µ—Ç–æ–º –∑–∞–ø–∏—Å–µ–π –≤ telegram_processed_messages\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    console.log('üîß –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    const syncService = await TelegramSyncService.getInstance();
    console.log('‚úÖ –°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω\n');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤ —Å –ª–∏–º–∏—Ç–æ–º 1
    console.log('üöÄ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ 1 —Ñ–∞–π–ª–∞...');
    const results = await syncService.downloadAndProcessFilesDirectly(1);
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:`);
    console.log(`   –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${results.length}`);
    
    for (const result of results) {
      console.log(`   - Message ID: ${result.messageId}`);
      console.log(`     –£—Å–ø–µ—à–Ω–æ: ${result.success ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`     –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${result.skipped ? '–î–∞' : '–ù–µ—Ç'}`);
      if (result.filename) console.log(`     –ò–º—è —Ñ–∞–π–ª–∞: ${result.filename}`);
      if (result.error) console.log(`     –û—à–∏–±–∫–∞: ${result.error}`);
      if (result.reason) console.log(`     –ü—Ä–∏—á–∏–Ω–∞: ${result.reason}`);
      console.log('');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (results.length > 0) {
      const lastResult = results[results.length - 1];
      if (lastResult.messageId) {
        console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages –¥–ª—è message_id = ${lastResult.messageId}...`);
        const { data: processedMessages, error: processedMessagesError } = await supabase
          .from('telegram_processed_messages')
          .select('*')
          .eq('message_id', String(lastResult.messageId));
          
        if (processedMessagesError) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø–∏—Å–µ–π:', processedMessagesError.message);
        } else if (processedMessages && processedMessages.length > 0) {
          console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è message_id = ${lastResult.messageId}:`);
          const msg = processedMessages[0];
          console.log(`   ID –∑–∞–ø–∏—Å–∏: ${msg.id}`);
          console.log(`   Book ID: ${msg.book_id}`);
          console.log(`   Telegram File ID: ${msg.telegram_file_id}`);
          console.log(`   Processed At: ${msg.processed_at}`);
        } else {
          console.log(`‚ùå –ó–∞–ø–∏—Å—å –¥–ª—è message_id = ${lastResult.messageId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        }
      }
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
testFileProcessing().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});