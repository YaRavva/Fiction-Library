import 'dotenv/config'
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!

const supabase = createClient(supabaseUrl, supabaseKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function fixBucket() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ bucket "covers"...\n')

  // –û–±–Ω–æ–≤–ª—è–µ–º bucket –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π
  const { data, error } = await supabase
    .storage
    .updateBucket('covers', {
      public: true
    })

  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è bucket:', error)
    return
  }

  console.log('‚úÖ Bucket "covers" –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π')
  console.log()

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º
  const { data: buckets } = await supabase
    .storage
    .listBuckets()

  const coversBucket = buckets?.find(b => b.id === 'covers')
  
  if (coversBucket) {
    console.log('üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')
    console.log(`   –ü—É–±–ª–∏—á–Ω—ã–π: ${coversBucket.public ? '–î–∞ ‚úÖ' : '–ù–µ—Ç ‚ùå'}`)
    console.log(`   ID: ${coversBucket.id}`)
    console.log(`   –ò–º—è: ${coversBucket.name}`)
  }
}

fixBucket().catch(console.error)

