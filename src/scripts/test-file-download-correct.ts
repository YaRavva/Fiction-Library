import { config } from 'dotenv';
import { TelegramSyncService } from '@/lib/telegram/sync';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: '.env' });

/**
 * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–¥—ã –ø—Ä–∏—á–∏–Ω –ø—Ä–æ–ø—É—Å–∫–∞ –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 * @param reason –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–¥ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
 * @returns –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 */
function translateSkipReason(reason: string): string {
  switch (reason) {
    case 'book_not_found':
      return '–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
    case 'book_not_imported':
      return '–ö–Ω–∏–≥–∞ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞';
    case 'already_processed':
      return '–£–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω';
    case 'book_already_has_file':
      return '–£ –∫–Ω–∏–≥–∏ —É–∂–µ –µ—Å—Ç—å —Ñ–∞–π–ª';
    case 'book_already_has_file_in_books_table':
      return '–£ –∫–Ω–∏–≥–∏ —É–∂–µ –µ—Å—Ç—å —Ñ–∞–π–ª (–≤ —Ç–∞–±–ª–∏—Ü–µ books)';
    default:
      return reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
  }
}

async function testFileDownload() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π (–ª–∏–º–∏—Ç 1)...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const syncService = await TelegramSyncService.getInstance();
    
    // –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 1 —Ñ–∞–π–ª
    console.log('üì• –ó–∞–≥—Ä—É–∂–∞–µ–º 1 —Ñ–∞–π–ª –∏–∑ Telegram...');
    const results = await syncService.downloadAndProcessFilesDirectly(1);
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏:');
    console.log(`–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${results.length}`);
    
    results.forEach((result: any, index: number) => {
      console.log(`\n–§–∞–π–ª ${index + 1}:`);
      console.log(`  ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${result.messageId}`);
      console.log(`  –ò–º—è —Ñ–∞–π–ª–∞: ${result.filename || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      
      if (result.skipped) {
        console.log(`  –°—Ç–∞—Ç—É—Å: ‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω`);
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
        const reasonText = translateSkipReason(result.reason as string);
        console.log(`  –ü—Ä–∏—á–∏–Ω–∞: ${reasonText}`);
      } else if (result.success === false) {
        console.log(`  –°—Ç–∞—Ç—É—Å: ‚ùå –û—à–∏–±–∫–∞`);
        console.log(`  –û—à–∏–±–∫–∞: ${result.error || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      } else {
        console.log(`  –°—Ç–∞—Ç—É—Å: ‚úÖ –£—Å–ø–µ—à–Ω–æ`);
        console.log(`  –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${result.fileSize || '–ù–µ —É–∫–∞–∑–∞–Ω'} –±–∞–π—Ç`);
        console.log(`  URL —Ñ–∞–π–ª–∞: ${result.fileUrl || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`  ID –∫–Ω–∏–≥–∏: ${result.bookId || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      }
    });
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–∏—Å–∞
    await syncService.shutdown();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:', error);
  }
}

// –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É
testFileDownload();