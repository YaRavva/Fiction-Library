/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–µ—Ä–∏–∏ "–û–¥–∞—Ä–µ–Ω–Ω—ã–µ"
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram
 */

import { MetadataParser } from '../lib/telegram/parser.js';

// –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram –¥–ª—è —Å–µ—Ä–∏–∏ "–û–¥–∞—Ä–µ–Ω–Ω—ã–µ"
const testMessage = `–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ –∏ —Ñ—ç–Ω—Ç–µ–∑–∏. –ü–æ–¥–±–æ—Ä–∫–∏
–ê–≤—Ç–æ—Ä: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä
–ù–∞–∑–≤–∞–Ω–∏–µ: —Ü–∏–∫–ª –û–¥–∞—Ä–µ–Ω–Ω—ã–µ
–ñ–∞–Ω—Ä: #—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ #–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
–†–µ–π—Ç–∏–Ω–≥: 8,20 #–≤—ã—à–µ8
–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–∏–∏ –∫–Ω–∏–≥ "–û–¥–∞—Ä–µ–Ω–Ω—ã–µ"...
–°–æ—Å—Ç–∞–≤:
1. –ö–Ω–∏–≥–∞ –ø–µ—Ä–≤–∞—è (2020)
2. –ö–Ω–∏–≥–∞ –≤—Ç–æ—Ä–∞—è (2021)
3. –ö–Ω–∏–≥–∞ —Ç—Ä–µ—Ç—å—è (2022)`;

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–ª—è "–û–¥–∞—Ä–µ–Ω–Ω—ã–µ"\n');
console.log('üìù –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:');
console.log('‚îÄ'.repeat(80));
console.log(testMessage);
console.log('‚îÄ'.repeat(80));
console.log('');

// –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
const metadata = MetadataParser.parseMessage(testMessage);

console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:\n');

console.log('üìñ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
console.log(`   –ê–≤—Ç–æ—Ä: ${metadata.author}`);
console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${metadata.title}`);
console.log(`   –°–µ—Ä–∏—è: ${metadata.series || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
console.log(`   –†–µ–π—Ç–∏–Ω–≥: ${metadata.rating}`);
console.log('');

console.log('üé≠ –ñ–∞–Ω—Ä—ã:');
if (metadata.genres.length > 0) {
  metadata.genres.forEach((genre, index) => {
    console.log(`   ${index + 1}. ${genre}`);
  });
} else {
  console.log('   ‚ùå –ñ–∞–Ω—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}
console.log('');

console.log('üè∑Ô∏è  –¢–µ–≥–∏:');
if (metadata.tags.length > 0) {
  metadata.tags.forEach((tag, index) => {
    console.log(`   ${index + 1}. #${tag}`);
  });
} else {
  console.log('   ‚ùå –¢–µ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}
console.log('');

console.log('üìù –û–ø–∏—Å–∞–Ω–∏–µ:');
if (metadata.description) {
  const preview = metadata.description.substring(0, 200);
  console.log(`   ${preview}${metadata.description.length > 200 ? '...' : ''}`);
  console.log(`   (–î–ª–∏–Ω–∞: ${metadata.description.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
} else {
  console.log('   ‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
}
console.log('');

console.log('üìö –°–æ—Å—Ç–∞–≤ —Å–µ—Ä–∏–∏:');
if (metadata.books.length > 0) {
  metadata.books.forEach((book, index) => {
    console.log(`   ${index + 1}. ${book.title} (${book.year})`);
  });
} else {
  console.log('   ‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}
console.log('');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏:');
const checks = [
  { name: '–ê–≤—Ç–æ—Ä –∏–∑–≤–ª–µ—á–µ–Ω', passed: metadata.author === '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä' },
  { name: '–ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–æ', passed: metadata.title === '–û–¥–∞—Ä–µ–Ω–Ω—ã–µ' },
  { name: '–°–µ—Ä–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞', passed: metadata.series === '–û–¥–∞—Ä–µ–Ω–Ω—ã–µ' },
  { name: '–†–µ–π—Ç–∏–Ω–≥ –∏–∑–≤–ª–µ—á–µ–Ω', passed: metadata.rating === 8.2 },
  { name: '–ñ–∞–Ω—Ä—ã –∏–∑–≤–ª–µ—á–µ–Ω—ã', passed: metadata.genres.length > 0 },
  { name: '–¢–µ–≥–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã', passed: metadata.tags.length > 0 },
  { name: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–æ', passed: metadata.description.length > 10 },
  { name: '–ö–Ω–∏–≥–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã', passed: metadata.books.length === 3 },
];

let passedCount = 0;
checks.forEach(check => {
  const icon = check.passed ? '‚úÖ' : '‚ùå';
  console.log(`   ${icon} ${check.name}`);
  if (check.passed) passedCount++;
});

console.log('');
console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${passedCount}/${checks.length} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ`);

if (passedCount === checks.length) {
  console.log('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  process.exit(0);
} else {
  console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞.');
  process.exit(1);
}