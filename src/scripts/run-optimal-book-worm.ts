#!/usr/bin/env tsx

/**
 * –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ "–ö–Ω–∏–∂–Ω—ã–π –ß–µ—Ä–≤—å"
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * - –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: npm run book-worm:full
 * - –†–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: npm run book-worm:update
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º: npm run book-worm:auto
 *
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏:
 * --mode=full    - –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
 * --mode=update  - —Ä–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 * --mode=auto    - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
 */

import { config } from 'dotenv';
import { BookWormService } from '../lib/telegram/book-worm-service';
import { serverSupabase } from '../lib/serverSupabase';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

async function main() {
    // –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    const args = process.argv.slice(2);
    let mode: 'full' | 'update' | 'auto' = 'auto';

    for (const arg of args) {
        if (arg.startsWith('--mode=')) {
            const modeValue = arg.split('=')[1] as 'full' | 'update' | 'auto';
            if (['full', 'update', 'auto'].includes(modeValue)) {
                mode = modeValue;
            }
        }
    }

    console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥ –∏ —Ñ–∞–π–ª–æ–≤');
    console.log(`üìã –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${mode}`);
    console.log(`üîß –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏: ${args.join(', ')}`);

    try {
        const bookWorm = new BookWormService();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–æ–≤
        console.log('\nüîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...');
        await bookWorm['initializeServices']();
        console.log('‚úÖ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram
        console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...');
        try {
            const telegramClient = await bookWorm['telegramClient'];
            if (telegramClient) {
                console.log('‚úÖ Telegram –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                console.log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            }
        } catch (error) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥ run —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã...');
        console.log(`‚úÖ –ú–µ—Ç–æ–¥ run('full') –¥–æ—Å—Ç—É–ø–µ–Ω: ${typeof bookWorm.run === 'function'}`);
        console.log(`‚úÖ –ú–µ—Ç–æ–¥ run('update') –¥–æ—Å—Ç—É–ø–µ–Ω: ${typeof bookWorm.run === 'function'}`);
        console.log(`‚úÖ –ú–µ—Ç–æ–¥ run('auto') –¥–æ—Å—Ç—É–ø–µ–Ω: ${typeof bookWorm.run === 'function'}`);

        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é Unicode –≤ file-service
        console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ Unicode –≤ file-service...');
        const { TelegramFileService } = await import('../lib/telegram/file-service');

        const testFiles = [
            '–ê—Ä–≤–µ–Ω–¥–µ–π–ª_–ê–≤—Ç–æ—Ä.zip',
            '–ê—Ä–≤–µ–Ω–¥–µ–∏ÃÜ–ª_–ê–≤—Ç–æ—Ä.zip', // NFD —Ñ–æ—Ä–º–∞
            '–ú–∏—Ü–µ–ª–∏–π_–ê—Ä–≤–µ–Ω–¥–µ–π–ª.zip'
        ];

        for (const filename of testFiles) {
            console.log(`\nüìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª: "${filename}"`);
            console.log(`   –î–ª–∏–Ω–∞: ${filename.length}`);

            const normalized = filename.normalize('NFC');
            console.log(`   –ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: "${normalized}" (–¥–ª–∏–Ω–∞: ${normalized.length})`);

            const metadata = TelegramFileService.extractMetadataFromFilename(filename);
            console.log(`   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:`);
            console.log(`   - –ê–≤—Ç–æ—Ä: "${metadata.author}"`);
            console.log(`   - –ù–∞–∑–≤–∞–Ω–∏–µ: "${metadata.title}"`);
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        console.log(`\nüöÄ –ó–∞–ø—É—Å–∫ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ —Ä–µ–∂–∏–º–µ ${mode.toUpperCase()}...`);
        const result = await bookWorm.run(mode);

        console.log('\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        console.log(`üìö –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.metadata.processed}`);
        console.log(`üìö –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${result.metadata.added}`);
        console.log(`üìö –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${result.metadata.updated}`);
        console.log(`üìÅ –§–∞–π–ª–æ–≤ –ø—Ä–∏–≤—è–∑–∞–Ω–æ: ${result.files.linked}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        const { count: newTotalBooks } = await serverSupabase
            .from('books')
            .select('*', { count: 'exact', head: true });

        const { data: booksWithPostId } = await serverSupabase
            .from('books')
            .select('id')
            .not('telegram_post_id', 'is', null) as { data: { id: string }[] | null, error: any };

        console.log(`üìä –ü–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:`);
        console.log(`   –í—Å–µ–≥–æ –∫–Ω–∏–≥: ${newTotalBooks || 0}`);
        console.log(`   –ö–Ω–∏–≥ —Å telegram_post_id: ${booksWithPostId?.length || 0}`);
        console.log(`   –ò–∑–º–µ–Ω–µ–Ω–∏–π: ${booksWithPostId ? (booksWithPostId.length - 1000) : 0}`);

        process.exit(0);
    } catch (error) {
        if (error instanceof Error && error.message.includes('TELEGRAM_API')) {
            console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!');
            console.log('üìã –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            console.log('üìã –¢—Ä–µ–±—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API');
            console.log('üìã –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —Å–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
            process.exit(0);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞:', error);
            process.exit(1);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
main().catch((error) => {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});