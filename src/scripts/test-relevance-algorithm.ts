import { MetadataExtractionService } from '../lib/telegram/metadata-extraction-service';

async function testRelevanceAlgorithm() {
  console.log('üîç Testing relevance algorithm...');
  
  // –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∏–∑ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  const testFileName = "–î–∂–µ–π–º—Å_–†–æ–ª–ª–∏–Ω—Å_–•—Ä–æ–Ω–∏–∫–∏_—É–±–∏–π—Ü—ã_–±–æ–≥–æ–≤.zip";
  const testAuthor = "–î–∂–µ–π–º—Å –†–æ–ª–ª–∏–Ω—Å";
  const testTitle = "–•—Ä–æ–Ω–∏–∫–∏ —É–±–∏–π—Ü—ã –±–æ–≥–æ–≤";
  
  console.log(`\n=== –¢–µ—Å—Ç 1 ===`);
  console.log(`üìÑ Test file name: ${testFileName}`);
  console.log(`‚úçÔ∏è  Extracted author: ${testAuthor}`);
  console.log(`üìò Extracted title: ${testTitle}`);
  
  // –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
  const mockMatches1 = [
    {
      title: "—Ü–∏–∫–ª –•—Ä–æ–Ω–∏–∫–∏ —É–±–∏–π—Ü—ã –±–æ–≥–æ–≤",
      author: "–î–∂–µ–π–º—Å –†–æ–ª–ª–∏–Ω—Å [–ø–æ–¥ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º –î–∂–µ–π–º—Å –ö–ª–µ–º–µ–Ω—Å]"
    },
    {
      title: "—Ü–∏–∫–ª –û—Ç—Ä—è–¥ –°–∏–≥–º–∞",
      author: "–î–∂–µ–π–º—Å –†–æ–ª–ª–∏–Ω—Å"
    },
    {
      title: "—Ü–∏–∫–ª –î–∂–µ–π–∫ –†—ç–Ω—Å–æ–º",
      author: "–î–∂–µ–π–º—Å –†–æ–ª–ª–∏–Ω—Å"
    }
  ];
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
  const searchTerms1 = MetadataExtractionService.extractSearchTerms(testFileName);
  console.log(`üîç Search terms: [${searchTerms1.join(', ')}]`);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è
  const bestMatch1 = MetadataExtractionService.selectBestMatch(
    mockMatches1,
    searchTerms1,
    testTitle,
    testAuthor
  );
  
  if (bestMatch1) {
    console.log(`‚úÖ Best match selected: "${(bestMatch1 as { title: string }).title}" by ${(bestMatch1 as { author: string }).author}`);
  } else {
    console.log('‚ö†Ô∏è  No suitable match found');
  }
  
  // –í—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä
  console.log(`\n=== –¢–µ—Å—Ç 2 ===`);
  const testFileName2 = "–ú—é—Ä—Ä–µ–π_–õ–µ–π–Ω—Å—Ç–µ—Ä_–ö–æ–ª–æ–Ω–∏–∞–ª—å–Ω–∞—è_—Å–ª—É–∂–±–∞_–°–±–æ—Ä–Ω–∏–∫.fb2";
  const testAuthor2 = "–ú—é—Ä—Ä–µ–π –õ–µ–π–Ω—Å—Ç–µ—Ä";
  const testTitle2 = "–ö–æ–ª–æ–Ω–∏–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –°–±–æ—Ä–Ω–∏–∫";
  
  console.log(`üìÑ Test file name: ${testFileName2}`);
  console.log(`‚úçÔ∏è  Extracted author: ${testAuthor2}`);
  console.log(`üìò Extracted title: ${testTitle2}`);
  
  // –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
  const mockMatches2 = [
    {
      title: "–ö–æ–ª–æ–Ω–∏–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ (1956)",
      author: "–ú—é—Ä—Ä–µ–π –õ–µ–π–Ω—Å—Ç–µ—Ä"
    },
    {
      title: "–ö–æ–ª–æ–Ω–∏–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞: –ö–æ–Ω—Ñ–ª–∏–∫—Ç –º–∏—Ä–æ–≤ (1960)",
      author: "–ú—é—Ä—Ä–µ–π –õ–µ–π–Ω—Å—Ç–µ—Ä"
    },
    {
      title: "–ü–æ—Å–µ–ª–µ–Ω—Ü—ã –ê–ª—å—Ñ–∞ (1963)",
      author: "–ú—é—Ä—Ä–µ–π –õ–µ–π–Ω—Å—Ç–µ—Ä"
    }
  ];
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
  const searchTerms2 = MetadataExtractionService.extractSearchTerms(testFileName2);
  console.log(`üîç Search terms: [${searchTerms2.join(', ')}]`);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è
  const bestMatch2 = MetadataExtractionService.selectBestMatch(
    mockMatches2,
    searchTerms2,
    testTitle2,
    testAuthor2
  );
  
  if (bestMatch2) {
    console.log(`‚úÖ Best match selected: "${(bestMatch2 as { title: string }).title}" by ${(bestMatch2 as { author: string }).author}`);
  } else {
    console.log('‚ö†Ô∏è  No suitable match found');
  }
}

// Run the test
testRelevanceAlgorithm().catch(console.error);