import { serverSupabase } from '../lib/serverSupabase';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function checkBookInfo(bookId: string) {
  try {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ —Å ID: ${bookId}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const { data, error } = await serverSupabase
      .from('books')
      .select('*')
      .eq('id', bookId)
      .single();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ:', error);
      return;
    }
    
    if (!data) {
      console.log('‚ùå –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    const book: any = data;
    
    console.log('üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ:');
    console.log(`  ID: ${book.id}`);
    console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
    console.log(`  –ê–≤—Ç–æ—Ä: ${book.author}`);
    console.log(`  –û–ø–∏—Å–∞–Ω–∏–µ: ${book.description || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`  Telegram post ID: ${book.telegram_post_id || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`  Telegram file ID: ${book.telegram_file_id || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`  Cover URL: ${book.cover_url || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ telegram_processed_messages
    if (book.telegram_post_id) {
      console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...`);
      const { data: processedData, error: processedError } = await serverSupabase
        .from('telegram_processed_messages')
        .select('*')
        .eq('message_id', book.telegram_post_id)
        .single();
      
      if (processedError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏:', processedError);
      } else if (processedData) {
        const processedMessage: any = processedData;
        console.log('üì® –°–≤—è–∑–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ:');
        console.log(`  Message ID: ${processedMessage.message_id}`);
        console.log(`  Channel: ${processedMessage.channel}`);
        console.log(`  Book ID: ${processedMessage.book_id}`);
        console.log(`  Processed at: ${processedMessage.processed_at}`);
      } else {
        console.log('‚ùå –°–≤—è–∑–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ü–æ–ª—É—á–∞–µ–º ID –∫–Ω–∏–≥–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const bookId = process.argv[2];
if (!bookId) {
  console.error('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∫–Ω–∏–≥–∏');
  process.exit(1);
}

checkBookInfo(bookId);