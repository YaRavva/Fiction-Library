import { TelegramFileService } from '../lib/telegram/file-service';
import dotenv from 'dotenv';

dotenv.config();

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
interface TestBook {
  id: string;
  title: string;
  author: string;
}

interface TestCase {
  book: {
    title: string;
    author: string;
  };
  filename: string;
  expectedMatch: boolean;
  description: string;
}

async function testBookMatching() {
  try {
    console.log('üîç –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥ –∏ —Ñ–∞–π–ª–æ–≤...');
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    const testCases: TestCase[] = [
      {
        book: {
          title: "–¶–∏–∫–ª –ß–µ—Ä–Ω–æ—è–∑—ã–∫–∏–π",
          author: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä –ë—å—é–ª–º–∞–Ω"
        },
        filename: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä_–°—Ç–∞—à–µ—Ñ—Ñ_–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–π_—Ü–∏–∫–ª.zip",
        expectedMatch: false,
        description: "–†–∞–∑–Ω—ã–µ –∞–≤—Ç–æ—Ä—ã - –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      },
      {
        book: {
          title: "–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–π —Ü–∏–∫–ª",
          author: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä –°—Ç–∞—à–µ—Ñ—Ñ"
        },
        filename: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä_–°—Ç–∞—à–µ—Ñ—Ñ_–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–π_—Ü–∏–∫–ª.zip",
        expectedMatch: true,
        description: "–¢–æ—Ç –∂–µ –∞–≤—Ç–æ—Ä –∏ —Ü–∏–∫–ª - –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      },
      {
        book: {
          title: "–¶–∏–∫–ª –í–µ–ª–∏–∫–∏–π –ì—Ä–∞–π–∞–Ω",
          author: "–°–µ—Ä–≥–µ–π –õ—É–∫—å—è–Ω–µ–Ω–∫–æ"
        },
        filename: "–õ—É–∫—å—è–Ω–µ–Ω–∫–æ_–°–µ—Ä–≥–µ–π_–ù–æ—á–Ω–æ–π_–î–æ–∑–æ—Ä.fb2.zip",
        expectedMatch: false,
        description: "–†–∞–∑–Ω—ã–µ —Ü–∏–∫–ª—ã –æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ - –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      },
      {
        book: {
          title: "–ù–æ—á–Ω–æ–π –î–æ–∑–æ—Ä",
          author: "–°–µ—Ä–≥–µ–π –õ—É–∫—å—è–Ω–µ–Ω–∫–æ"
        },
        filename: "–õ—É–∫—å—è–Ω–µ–Ω–∫–æ_–°–µ—Ä–≥–µ–π_–ù–æ—á–Ω–æ–π_–î–æ–∑–æ—Ä.fb2.zip",
        expectedMatch: true,
        description: "–¢–æ—Ç –∂–µ –∞–≤—Ç–æ—Ä –∏ –∫–Ω–∏–≥–∞ - –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      },
      {
        book: {
          title: "–î–Ω–µ–≤–Ω–æ–π –î–æ–∑–æ—Ä",
          author: "–°–µ—Ä–≥–µ–π –õ—É–∫—å—è–Ω–µ–Ω–∫–æ"
        },
        filename: "–õ—É–∫—å—è–Ω–µ–Ω–∫–æ_–°–µ—Ä–≥–µ–π_–ù–æ—á–Ω–æ–π_–î–æ–∑–æ—Ä.fb2.zip",
        expectedMatch: false,
        description: "–†–∞–∑–Ω—ã–µ –∫–Ω–∏–≥–∏ –æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ - –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      }
    ];
    
    let passedTests = 0;
    let totalTests = testCases.length;
    
    for (const testCase of testCases) {
      console.log(`\n${'='.repeat(50)}`);
      console.log(`üìö –¢–µ—Å—Ç: ${testCase.description}`);
      console.log(`${'='.repeat(50)}`);
      console.log(`–ö–Ω–∏–≥–∞: "${testCase.book.title}" –∞–≤—Ç–æ—Ä–∞ ${testCase.book.author}`);
      console.log(`–§–∞–π–ª: ${testCase.filename}`);
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
      const metadata = TelegramFileService.extractMetadataFromFilename(testCase.filename);
      console.log(`\nüìä –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:`);
      console.log(`   –ê–≤—Ç–æ—Ä: "${metadata.author}"`);
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: "${metadata.title}"`);
      
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–Ω–∏–≥–∏ –¥–ª—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –≤—ã–±–æ—Ä–∞
      const testBooks: TestBook[] = [
        {
          id: "test1",
          title: testCase.book.title,
          author: testCase.book.author
        }
      ];
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥—Ä—É–≥–∏—Ö –∫–Ω–∏–≥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è
      const otherBooks: TestBook[] = [
        {
          id: "other1",
          title: "–î—Ä—É–≥–∞—è –∫–Ω–∏–≥–∞",
          author: "–î—Ä—É–≥–æ–π –∞–≤—Ç–æ—Ä"
        },
        {
          id: "other2",
          title: "–ï—â–µ –æ–¥–Ω–∞ –∫–Ω–∏–≥–∞",
          author: testCase.book.author // –¢–æ—Ç –∂–µ –∞–≤—Ç–æ—Ä
        }
      ];
      
      const allBooks = [...testBooks, ...otherBooks];
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
      const searchTerms = metadata.title.toLowerCase().split(/[_\-\s]+/).filter((word: string) => word.length > 2);
      console.log(`\nüîç –ü–æ–∏—Å–∫–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: [${searchTerms.join(', ')}]`);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º –≤—ã–±–æ—Ä–∞ –ª—É—á—à–µ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
      // –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ private –º–µ—Ç–æ–¥—É selectBestMatch,
      // –º—ã —Å–æ–∑–¥–∞–¥–∏–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      
      console.log(`\nüéØ –û–∂–∏–¥–∞–µ–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${testCase.expectedMatch ? '–î–ê' : '–ù–ï–¢'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –∞–≤—Ç–æ—Ä—É
      const authorMatch = metadata.author.toLowerCase().includes(testCase.book.author.toLowerCase()) || 
                         testCase.book.author.toLowerCase().includes(metadata.author.toLowerCase());
      console.log(`üìù –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –∞–≤—Ç–æ—Ä—É: ${authorMatch ? '–î–ê' : '–ù–ï–¢'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—É–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
      const cleanMetadataTitle = metadata.title.toLowerCase().replace(/\.[^/.]+$/, "");
      const titleMatch = cleanMetadataTitle.includes(testCase.book.title.toLowerCase()) || 
                        testCase.book.title.toLowerCase().includes(cleanMetadataTitle);
      console.log(`üìù –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é: ${titleMatch ? '–î–ê' : '–ù–ï–¢'}`);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø—Ä–æ—à–µ–ª –ª–∏ —Ç–µ—Å—Ç
      const testPassed = (authorMatch && titleMatch) === testCase.expectedMatch;
      console.log(`\n‚úÖ –¢–µ—Å—Ç ${testPassed ? '–ü–†–û–ô–î–ï–ù' : '–ù–ï –ü–†–û–ô–î–ï–ù'}`);
      
      if (testPassed) {
        passedTests++;
      }
    }
    
    console.log(`\n${'='.repeat(50)}`);
    console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
    console.log(`${'='.repeat(50)}`);
    console.log(`–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${totalTests}`);
    console.log(`–ü—Ä–æ–π–¥–µ–Ω–æ: ${passedTests}`);
    console.log(`–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${totalTests - passedTests}`);
    console.log(`–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${((passedTests / totalTests) * 100).toFixed(2)}%`);
    
    if (passedTests === totalTests) {
      console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    } else {
      console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞.');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞:', error);
    process.exit(1);
  }
}

testBookMatching();