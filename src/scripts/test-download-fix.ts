import { taskManager } from '../lib/task-manager';

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ "Operation not found"
 */
async function testDownloadFix() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ "Operation not found"');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
  const testOperationId = `test-download-${Date.now()}`;
  console.log(`üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–¥–∞—á–∏ —Å ID: ${testOperationId}`);
  
  const task = taskManager.createTask(testOperationId);
  console.log(`‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞:`, task);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
  const retrievedTask = taskManager.getTaskStatus(testOperationId);
  if (retrievedTask) {
    console.log(`‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω–∞:`, retrievedTask);
  } else {
    console.error(`‚ùå –ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è`);
    return;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
  taskManager.updateTaskStatus(testOperationId, 'running', '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏');
  console.log(`üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "running"`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
  const updatedTask = taskManager.getTaskStatus(testOperationId);
  if (updatedTask && updatedTask.status === 'running') {
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω: ${updatedTask.status}`);
  } else {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏`);
    return;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞—á–∏
  taskManager.updateTaskProgress(testOperationId, 50, '–ü–æ–ª–æ–≤–∏–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  console.log(`üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ 50%`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
  const progressTask = taskManager.getTaskStatus(testOperationId);
  if (progressTask && progressTask.progress === 50) {
    console.log(`‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞—á–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω: ${progressTask.progress}%`);
  } else {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–¥–∞—á–∏`);
    return;
  }
  
  // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞—á—É
  taskManager.updateTaskStatus(testOperationId, 'completed', '–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
  console.log(`‚úÖ –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
  const finalTask = taskManager.getTaskStatus(testOperationId);
  if (finalTask && finalTask.status === 'completed') {
    console.log(`‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
  } else {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏`);
    return;
  }
  
  console.log('\nüèÅ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testDownloadFix().catch(console.error);
}