import { TelegramSyncService } from '../lib/telegram/sync';

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –∫–Ω–∏–≥ –∏–∑ Telegram
 * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏
 */
export async function downloadMissingFiles() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram');
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const syncService = await TelegramSyncService.getInstance();
    
    // –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é (–±–µ–∑ –æ—á–µ—Ä–µ–¥–∏)
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑—É–º–Ω—ã–π –ª–∏–º–∏—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const results = await syncService.downloadAndProcessFilesDirectly(50);
    
    const successCount = results.filter((result: { success?: boolean }) => result.success !== false).length;
    const failedCount = results.length - successCount;
    
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${successCount} —É—Å–ø–µ—à–Ω–æ, ${failedCount} —Å –æ—à–∏–±–∫–∞–º–∏`);
    
    return {
      success: true,
      message: `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${successCount} –∏–∑ ${results.length} —Ñ–∞–π–ª–æ–≤`,
      results,
      actions: [
        `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${results.length}`,
        `–£—Å–ø–µ—à–Ω–æ: ${successCount}`,
        `–° –æ—à–∏–±–∫–∞–º–∏: ${failedCount}`
      ]
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:', error);
    return {
      success: false,
      message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏',
      results: [],
      actions: []
    };
  }
}