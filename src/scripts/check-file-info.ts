/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ñ–∞–π–ª–µ –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
config({ path: path.resolve(process.cwd(), '.env') });

async function checkFileInfo(messageId: number) {
  console.log(`üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ —Å Message ID: ${messageId}`);
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabase = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL!,
      process.env.SUPABASE_SERVICE_ROLE_KEY!
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ telegram_processed_messages
    const { data: processedRecord, error: processedError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .eq('message_id', messageId.toString())
      .single();
      
    if (processedError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∏–∑ telegram_processed_messages:', processedError.message);
      return;
    }
    
    if (!processedRecord) {
      console.log('‚ùå –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log('üìã –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages:');
    console.log(`   ID: ${processedRecord.id}`);
    console.log(`   Book ID: ${processedRecord.book_id}`);
    console.log(`   Message ID: ${processedRecord.message_id}`);
    console.log(`   Telegram File ID: ${processedRecord.telegram_file_id || '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}`);
    console.log(`   Processed At: ${processedRecord.processed_at}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
    const { data: book, error: bookError } = await supabase
      .from('books')
      .select('*')
      .eq('id', processedRecord.book_id)
      .single();
      
    if (bookError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ:', bookError.message);
      return;
    }
    
    console.log('\nüìñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ:');
    console.log(`   ID: ${book.id}`);
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
    console.log(`   –ê–≤—Ç–æ—Ä: ${book.author}`);
    console.log(`   URL —Ñ–∞–π–ª–∞: ${book.file_url || '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}`);
    console.log(`   –ü—É—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${book.storage_path || '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}`);
    console.log(`   –§–æ—Ä–º–∞—Ç: ${book.file_format || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    if (book.file_size) {
      const fileSize = typeof book.file_size === 'number' ? 
        `${Math.round(book.file_size / 1024)} –ö–ë` : 
        book.file_size;
      console.log(`   –†–∞–∑–º–µ—Ä: ${fileSize}`);
    }
    
    console.log(`   Telegram File ID: ${book.telegram_file_id || '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}`);
    
    // –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∏–º –µ–≥–æ –≤ Storage
    if (book.storage_path) {
      console.log('\n‚òÅÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ –≤ Storage:');
      console.log(`   –ü—É—Ç—å: ${book.storage_path}`);
      console.log(`   –§–æ—Ä–º–∞—Ç: ${book.file_format}`);
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
      const ext = path.extname(book.storage_path).toLowerCase();
      if (ext === '.fb2') {
        console.log(`   –¢–∏–ø: FB2 (FictionBook 2.0)`);
      } else if (ext === '.zip') {
        console.log(`   –¢–∏–ø: ZIP –∞—Ä—Ö–∏–≤`);
      } else {
        console.log(`   –¢–∏–ø: ${ext.substring(1).toUpperCase()} (–Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ:', error);
  }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
  const args = process.argv.slice(2);
  if (args.length === 0) {
    console.error('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.error('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx src/scripts/check-file-info.ts <messageId>');
    console.error('–ü—Ä–∏–º–µ—Ä: npx tsx src/scripts/check-file-info.ts 4434');
    process.exit(1);
  }
  
  const messageId = parseInt(args[0], 10);
  if (isNaN(messageId)) {
    console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.error('ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º');
    process.exit(1);
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
  checkFileInfo(messageId);
}