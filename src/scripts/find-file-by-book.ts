/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–Ω–∏–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * –∏ –ø–æ–ª—É—á–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
config({ path: path.resolve(process.cwd(), '.env') });

async function findFileByBook(searchTerm: string) {
  console.log(`üöÄ –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "${searchTerm}"`);
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabase = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL!,
      process.env.SUPABASE_SERVICE_ROLE_KEY!
    );
    
    // –ò—â–µ–º –∫–Ω–∏–≥–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É
    const { data: books, error } = await supabase
      .from('books')
      .select('id, title, author, telegram_post_id')
      .or(`title.ilike.%${searchTerm}%,author.ilike.%${searchTerm}%`)
      .limit(10);
      
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥:', error.message);
      return;
    }
    
    if (!books || books.length === 0) {
      console.log('‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${books.length} –∫–Ω–∏–≥:`);
    
    for (const book of books) {
      console.log(`\nüìñ ${book.author} - ${book.title}`);
      console.log(`   Book ID: ${book.id}`);
      console.log(`   Telegram Post ID: ${book.telegram_post_id || 'N/A'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages
      const { data: processedRecords, error: processedError } = await supabase
        .from('telegram_processed_messages')
        .select('message_id, telegram_file_id, processed_at')
        .eq('book_id', book.id);
        
      if (processedError) {
        console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–ø–∏—Å–∏: ${processedError.message}`);
      } else if (processedRecords && processedRecords.length > 0) {
        const processedRecord = processedRecords[0];
        console.log(`   üìã –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages:`);
        console.log(`      Message ID: ${processedRecord.message_id}`);
        console.log(`      File ID: ${processedRecord.telegram_file_id || '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}`);
        console.log(`      Processed At: ${processedRecord.processed_at || 'N/A'}`);
        
        if (processedRecord.telegram_file_id) {
          console.log(`   üí° –§–∞–π–ª —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω (ID: ${processedRecord.telegram_file_id})`);
        } else {
          console.log(`   üí° –ß—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:`);
          console.log(`      npx tsx src/scripts/download-single-file.ts ${processedRecord.message_id}`);
        }
      } else {
        console.log(`   ‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥–∏:', error);
  }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
  const args = process.argv.slice(2);
  if (args.length === 0) {
    console.error('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å');
    console.error('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx src/scripts/find-file-by-book.ts "–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∞–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏"');
    console.error('–ü—Ä–∏–º–µ—Ä: npx tsx src/scripts/find-file-by-book.ts "–¢–∞–π–Ω–∏–∫–æ–≤—Å–∫–∏–π"');
    process.exit(1);
  }
  
  const searchTerm = args.join(' ');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
  findFileByBook(searchTerm);
}