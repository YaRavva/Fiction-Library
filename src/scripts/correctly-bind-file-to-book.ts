#!/usr/bin/env tsx

import 'dotenv/config';
import { createClient } from '@supabase/supabase-js';
import * as fs from 'fs';

async function correctlyBindFileToBook() {
  console.log('=== –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ —Ñ–∞–π–ª–∞ 1039.zip –∫ –∫–Ω–∏–≥–µ ===');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Supabase
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  
  if (!supabaseUrl || !supabaseServiceKey) {
    console.error('‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    return;
  }
  
  const supabase = createClient(supabaseUrl, supabaseServiceKey);
  
  try {
    const messageId = '1039'; // –≠—Ç–æ message_id –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Ñ–∞–π–ª–æ–≤
    const fileName = '1039.zip';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ (–º—ã –µ–≥–æ —Å–∫–∞—á–∞–ª–∏ —Ä–∞–Ω–µ–µ)
    const localFilePath = `./src/scripts/${fileName}`;
    if (!fs.existsSync(localFilePath)) {
      console.error(`‚ùå –û–®–ò–ë–ö–ê: –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª ${fileName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    const fileStats = fs.statSync(localFilePath);
    const fileSize = fileStats.size;
    console.log(`–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSize} –±–∞–π—Ç`);
    
    console.log(`\n1. –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages —Å telegram_file_id = ${messageId}...`);
    let { data: processedMessage, error: searchError } = await supabase
      .from('telegram_processed_messages')
      .select('*')
      .eq('telegram_file_id', messageId)
      .single();
    
    if (processedMessage && !searchError) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages:');
      console.log(`  ID: ${processedMessage.id}`);
      console.log(`  Book ID: ${processedMessage.book_id}`);
      console.log(`  Message ID: ${processedMessage.message_id}`);
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
      console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ...');
      let { data: book, error: bookError } = await supabase
        .from('books')
        .select('*')
        .eq('id', processedMessage.book_id)
        .single();
      
      if (book && !bookError) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞:');
        console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
        console.log(`  –ê–≤—Ç–æ—Ä: ${book.author}`);
        console.log(`  ID: ${book.id}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –∫–Ω–∏–≥–∏
        console.log('\n3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ –∫–Ω–∏–≥–∏...');
        
        const updateData = {
          file_url: `https://s3.cloud.ru/books/${fileName}`,
          file_size: fileSize,
          file_format: 'zip',
          telegram_file_id: messageId, // –≠—Ç–æ ID —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
          storage_path: `books/${fileName}`
        };
        
        const { data: updatedBook, error: updateError } = await supabase
          .from('books')
          .update(updateData)
          .eq('id', book.id)
          .select()
          .single();
        
        if (updateError) {
          console.error('‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ:');
          console.error(updateError.message);
          return;
        }
        
        console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:');
        console.log(`  File URL: ${updatedBook.file_url}`);
        console.log(`  File Size: ${updatedBook.file_size}`);
        console.log(`  File Format: ${updatedBook.file_format}`);
        console.log(`  Telegram File ID: ${updatedBook.telegram_file_id}`);
        console.log(`  Storage Path: ${updatedBook.storage_path}`);
        
        console.log('\nüéâ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–Ω–∏–≥–µ!');
      } else {
        console.error('‚ùå –û–®–ò–ë–ö–ê: –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        if (bookError) console.error(bookError.message);
        return;
      }
    } else {
      console.log('‚ÑπÔ∏è  –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages —Å telegram_file_id –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å —Å message_id...');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å –ø–æ message_id (–∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö)
      let { data: metadataMessage, error: metadataError } = await supabase
        .from('telegram_processed_messages')
        .select('*')
        .eq('message_id', messageId)
        .single();
      
      if (metadataMessage && !metadataError) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤ telegram_processed_messages:');
        console.log(`  ID: ${metadataMessage.id}`);
        console.log(`  Book ID: ${metadataMessage.book_id}`);
        console.log(`  Message ID: ${metadataMessage.message_id}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏ —É–∂–µ telegram_file_id
        if (metadataMessage.telegram_file_id) {
          console.log(`‚ö†Ô∏è  –î–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω telegram_file_id: ${metadataMessage.telegram_file_id}`);
          console.log('–§–∞–π–ª, –≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω.');
          return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
        console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ...');
        let { data: book, error: bookError } = await supabase
          .from('books')
          .select('*')
          .eq('id', metadataMessage.book_id)
          .single();
        
        if (book && !bookError) {
          console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞:');
          console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
          console.log(`  –ê–≤—Ç–æ—Ä: ${book.author}`);
          console.log(`  ID: ${book.id}`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –∫–Ω–∏–≥–∏
          console.log('\n3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ –∫–Ω–∏–≥–∏...');
          
          const updateData = {
            file_url: `https://s3.cloud.ru/books/${fileName}`,
            file_size: fileSize,
            file_format: 'zip',
            telegram_file_id: messageId, // –≠—Ç–æ ID —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            storage_path: `books/${fileName}`
          };
          
          const { data: updatedBook, error: updateError } = await supabase
            .from('books')
            .update(updateData)
            .eq('id', book.id)
            .select()
            .single();
          
          if (updateError) {
            console.error('‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ:');
            console.error(updateError.message);
            return;
          }
          
          console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:');
          console.log(`  File URL: ${updatedBook.file_url}`);
          console.log(`  File Size: ${updatedBook.file_size}`);
          console.log(`  File Format: ${updatedBook.file_format}`);
          console.log(`  Telegram File ID: ${updatedBook.telegram_file_id}`);
          console.log(`  Storage Path: ${updatedBook.storage_path}`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages —Å telegram_file_id
          console.log('\n4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages...');
          const { error: updateMessageError } = await supabase
            .from('telegram_processed_messages')
            .update({
              telegram_file_id: messageId,
              processed_at: new Date().toISOString()
            })
            .eq('id', metadataMessage.id);
          
          if (updateMessageError) {
            console.error('‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ telegram_processed_messages:');
            console.error(updateMessageError.message);
            return;
          }
          
          console.log('‚úÖ –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
          console.log('\nüéâ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–Ω–∏–≥–µ!');
        } else {
          console.error('‚ùå –û–®–ò–ë–ö–ê: –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
          if (bookError) console.error(bookError.message);
          return;
        }
      } else {
        console.log('‚ùå –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –ø–æ telegram_file_id, –Ω–∏ –ø–æ message_id');
        console.log('–í–æ–∑–º–æ–∂–Ω–æ, –∫–Ω–∏–≥–∞ –µ—â–µ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö.');
        if (metadataError) console.error(metadataError.message);
        return;
      }
    }
    
  } catch (error: any) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.error('\n–ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏:');
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–≤—è–∑–∫–∏
if (require.main === module) {
  correctlyBindFileToBook()
    .then(() => {
      console.log('\n‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    })
    .catch((error) => {
      console.error('\n‚ùå –ü—Ä–∏–≤—è–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

export { correctlyBindFileToBook };