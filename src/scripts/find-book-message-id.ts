import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

async function findBookMessageId() {
  console.log('üîç –ü–æ–∏—Å–∫ ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–Ω–∏–≥–∏ "—Ü–∏–∫–ª –•—Ä–æ–Ω–∏–∫–∏ –û–ø—É—Å—Ç–æ—à–µ–Ω–Ω—ã—Ö –∑–µ–º–µ–ª—å"');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
    
    if (!supabaseUrl || !supabaseKey) {
      console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      process.exit(1);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabase = createClient(supabaseUrl, supabaseKey);
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–≤—Ç–æ—Ä—É
    const title = '—Ü–∏–∫–ª –•—Ä–æ–Ω–∏–∫–∏ –û–ø—É—Å—Ç–æ—à–µ–Ω–Ω—ã—Ö –∑–µ–º–µ–ª—å';
    const author = '–ê–Ω—Ç–æ–Ω –ö–∞—Ä–µ–ª–∏–Ω';
    
    console.log(`üîé –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏: "${title}" –∞–≤—Ç–æ—Ä–∞ ${author}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ books
    const { data: book, error } = await supabase
      .from('books')
      .select('id, title, author, telegram_post_id')
      .eq('title', title)
      .eq('author', author)
      .single();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏:', error);
      process.exit(1);
    }
    
    if (book) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞:`);
      console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
      console.log(`  –ê–≤—Ç–æ—Ä: ${book.author}`);
      console.log(`  ID: ${book.id}`);
      console.log(`  Telegram post ID: ${book.telegram_post_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages —Å —ç—Ç–∏–º telegram_post_id
      if (book.telegram_post_id) {
        console.log(`\nüîç –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages —Å telegram_post_id=${book.telegram_post_id}...`);
        
        const { data: messageRecord, error: messageError } = await supabase
          .from('telegram_processed_messages')
          .select('*')
          .eq('message_id', book.telegram_post_id)
          .single();
        
        if (messageError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages:', messageError);
        } else if (messageRecord) {
          console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages:`);
          console.log(`  Message ID: ${messageRecord.message_id}`);
          console.log(`  Book ID: ${messageRecord.book_id}`);
          console.log(`  Telegram file ID: ${messageRecord.telegram_file_id || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
          console.log(`  Processed at: ${messageRecord.processed_at}`);
        } else {
          console.log('‚ùå –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
      } else {
        console.log('‚ö†Ô∏è  –£ –∫–Ω–∏–≥–∏ –Ω–µ –∑–∞–¥–∞–Ω telegram_post_id');
      }
    } else {
      console.log('‚ùå –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    process.exit(1);
  }
}

findBookMessageId();