import { config } from 'dotenv';
import { resolve } from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config({ path: resolve(__dirname, '../../.env') });

import { Book WormService } from '../lib/telegram/book-worm-service';

async function testFileMatching() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤...');
    
    try {
        // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
        const book-worm = new Book WormService();
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
        const testBook = {
            id: 'test-id',
            title: '–ú–∏—Ä –ü–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞',
            author: 'Unknown',
            telegram_post_id: '123'
        };
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        const testFiles = [
            { filename: '–¢–æ–º_–°–≤–µ—Ç–µ—Ä–ª–∏—á_–ò—Å—á–µ–∑–Ω—É–≤—à–∏–π_–º–∏—Ä_(2018)_(2020).fb2', messageId: '100' },
            { filename: 'Unknown_–ú–∏—Ä_–ü–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞.fb2', messageId: '101' },
            { filename: '–î—Ä—É–≥–æ–π_–∞–≤—Ç–æ—Ä_–î—Ä—É–≥–∞—è_–∫–Ω–∏–≥–∞.fb2', messageId: '102' }
        ];
        
        // –ó–¥–µ—Å—å –º—ã –±—ã –≤—ã–∑–≤–∞–ª–∏ –º–µ—Ç–æ–¥ findMatchingFile, –Ω–æ –æ–Ω –ø—Ä–∏–≤–∞—Ç–Ω—ã–π
        // –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∑–∞–ø—É—Å—Ç–∏–º –ø–æ–ª–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        console.log('üîç –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
        await (book-worm as any).initializeServices();
        
        // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
        const result = await (book-worm as any).syncFiles();
        
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:');
        console.log(`–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.processed}`);
        console.log(`–ü—Ä–∏–≤—è–∑–∞–Ω–æ: ${result.linked}`);
        console.log(`–ü—Ä–æ–ø—É—â–µ–Ω–æ: ${result.skipped}`);
        console.log(`–û—à–∏–±–æ–∫: ${result.errors}`);
        
        console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testFileMatching().catch(console.error);