import { config } from 'dotenv';
import { resolve } from 'path';
import { getSupabaseAdmin } from '../lib/supabase';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
const envPath = resolve(__dirname, '../../.env');
config({ path: envPath });

async function countTotalBooks() {
  try {
    console.log('üîç –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥...');
    const supabase = getSupabaseAdmin();
    
    if (!supabase) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Supabase');
      return;
    }
    
    // @ts-ignore
    const { count, error } = await supabase
      .from('books')
      .select('*', { count: 'exact', head: true });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –∫–Ω–∏–≥:', error.message);
      return;
    }
    
    console.log(`üìö –í—Å–µ–≥–æ –∫–Ω–∏–≥: ${count}`);
    
    // –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –∫–Ω–∏–≥–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∞ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
    // @ts-ignore
    const { count: emptyMetadataCount, error: emptyMetadataError } = await supabase
      .from('books')
      .select('*', { count: 'exact', head: true })
      .or('author.is.null,title.is.null')
    
    if (emptyMetadataError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –∫–Ω–∏–≥ –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:', emptyMetadataError.message);
      return;
    }
    
    console.log(`üìÑ –ö–Ω–∏–≥ –±–µ–∑ –∞–≤—Ç–æ—Ä–∞ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è: ${emptyMetadataCount}`);
    console.log(`üìä –ü—Ä–æ—Ü–µ–Ω—Ç –∫–Ω–∏–≥ –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: ${((emptyMetadataCount || 0) / (count || 1) * 100).toFixed(2)}%`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥—Å—á–µ—Ç
countTotalBooks();