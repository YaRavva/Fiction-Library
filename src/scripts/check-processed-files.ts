/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–∏—Å–µ–π —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º telegram_file_id
 */

import { config } from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: path.resolve(process.cwd(), '.env') });

async function checkProcessedFiles() {
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º telegram_file_id\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º telegram_file_id
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º telegram_file_id...');
    const { data: records, error } = await supabase
      .from('telegram_processed_messages')
      .select('message_id, telegram_file_id, processed_at, book_id')
      .not('telegram_file_id', 'is', null)
      .order('processed_at', { ascending: false })
      .limit(10);
      
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:', error.message);
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${records.length} –∑–∞–ø–∏—Å–µ–π —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º telegram_file_id:\n`);
    
    // –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
    for (const record of records) {
      const { data: book, error: bookError } = await supabase
        .from('books')
        .select('title, author')
        .eq('id', record.book_id)
        .single();
        
      if (bookError) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ ${record.book_id}:`, bookError.message);
        continue;
      }
      
      console.log(`üìù Message ID: ${record.message_id}`);
      console.log(`   Telegram File ID: ${record.telegram_file_id}`);
      console.log(`   –ö–Ω–∏–≥–∞: "${book.title}" –∞–≤—Ç–æ—Ä–∞ ${book.author}`);
      console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${record.processed_at}`);
      console.log('');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    const { count: totalCount, error: countError } = await supabase
      .from('telegram_processed_messages')
      .select('*', { count: 'exact', head: true });
      
    if (!countError) {
      console.log(`   –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: ${totalCount}`);
    }
    
    const { count: withFileIdCount, error: withFileIdCountError } = await supabase
      .from('telegram_processed_messages')
      .select('*', { count: 'exact', head: true })
      .not('telegram_file_id', 'is', null);
      
    if (!withFileIdCountError) {
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–π —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º telegram_file_id: ${withFileIdCount}`);
      if (totalCount && totalCount > 0) {
        const percentage = ((withFileIdCount || 0) / totalCount * 100).toFixed(2);
        console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${percentage}%`);
      }
    }
    
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
checkProcessedFiles().catch(error => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});