import { config } from 'dotenv';
import { serverSupabase } from '@/lib/serverSupabase';
import { DownloadWorker } from '@/lib/telegram/download-worker';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: '.env' });

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—á–µ—Ä–µ–¥–∏
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * npx tsx src/scripts/test-queue-functionality.ts
 */

async function testQueueFunctionality() {
  try {
    console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—á–µ—Ä–µ–¥–∏...\n');

    // 1. –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏...');
    const { data: currentTasks, error: currentTasksError } = await serverSupabase
      .from('telegram_download_queue')
      .select('*')
      .limit(5);

    if (currentTasksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞—á:', currentTasksError);
      process.exit(1);
    }

    console.log(`  –ù–∞–π–¥–µ–Ω–æ ${currentTasks?.length || 0} –∑–∞–¥–∞—á –≤ –æ—á–µ—Ä–µ–¥–∏`);

    // 2. –î–æ–±–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
    console.log('\n2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–¥–∞—á–∏...');
    const worker = await DownloadWorker.getInstance();
    await worker.addTask('test_message_123', 'test_channel_456', 1);
    console.log('  ‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');

    // 3. –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏...');
    const { data: newTasks, error: newTasksError } = await serverSupabase
      .from('telegram_download_queue')
      .select('*')
      .eq('message_id', 'test_message_123')
      .eq('channel_id', 'test_channel_456');

    if (newTasksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏:', newTasksError);
      process.exit(1);
    }

    if (newTasks && newTasks.length > 0) {
      const task: any = newTasks[0];
      console.log('  ‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å');
      console.log(`    ID: ${task.id}`);
      console.log(`    Status: ${task.status}`);
    } else {
      console.log('  ‚ùå –ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥–∏');
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å –≤–æ—Ä–∫–µ—Ä–∞
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–æ—Ä–∫–µ—Ä–∞...');
    // –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–æ—Ä–∫–µ—Ä–∞ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞,
    // –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º, —á—Ç–æ —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å
    const workerInstance = await DownloadWorker.getInstance();
    console.log('  ‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –≤–æ—Ä–∫–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω');

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–æ—Ä–∫–µ—Ä: npm run start-download-worker');
    console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—á–µ—Ä–µ–¥—å: npm run check-download-queue');
    console.log('   - –î–æ–±–∞–≤—å—Ç–µ –∑–∞–¥–∞—á—É: npm run add-to-download-queue <messageId> <channelId> [priority]');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—á–µ—Ä–µ–¥–∏:', error);
    process.exit(1);
  }
}

// –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testQueueFunctionality();