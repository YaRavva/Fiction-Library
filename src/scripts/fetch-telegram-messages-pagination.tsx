// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import dotenv from 'dotenv';
dotenv.config();

import { TelegramService } from '../lib/telegram/client';

async function fetchTelegramMessagesWithPagination() {
    console.log('=== –ü–û–õ–£–ß–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô –° –ü–ê–ì–ò–ù–ê–¶–ò–ï–ô ===\n');
    
    let client: TelegramService | null = null;
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –∫–ª–∏–µ–Ω—Ç–∞
        console.log('1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...');
        client = await TelegramService.getInstance();
        console.log('   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª —Å —Ñ–∞–π–ª–∞–º–∏
        console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É —Å —Ñ–∞–π–ª–∞–º–∏...');
        const filesChannel = await client.getFilesChannel();
        console.log('   ‚úÖ –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É —Å —Ñ–∞–π–ª–∞–º–∏ –ø–æ–ª—É—á–µ–Ω');
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
        console.log('3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...');
        
        let allMessages: any[] = [];
        let offsetId: number | undefined = undefined;
        const batchSize = 100; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –∑–∞–ø—Ä–æ—Å
        let batchCount = 0;
        const maxBatches = 3; // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ç—á–µ–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        
        while (batchCount < maxBatches) {
            console.log(`   üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞—Ç—á–∞ ${batchCount + 1} (offsetId: ${offsetId || 'latest'})...`);
            
            const messages = await client.getMessages(filesChannel, batchSize, offsetId);
            
            if (!messages || messages.length === 0) {
                console.log('   ‚ö†Ô∏è  –ë–æ–ª—å—à–µ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç');
                break;
            }
            
            console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π`);
            allMessages = [...allMessages, ...messages];
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º offsetId –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º –±–∞—Ç—á–µ
            const oldestMessage = messages[messages.length - 1];
            offsetId = oldestMessage.id;
            
            batchCount++;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–≤—ã—Ö –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ –±–∞—Ç—á–µ
            console.log(`   üìã –ü–µ—Ä–≤—ã–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –±–∞—Ç—á–∞:`);
            for (let i = 0; i < Math.min(3, messages.length); i++) {
                const msg = messages[i];
                if (msg.document) {
                    // –ò—â–µ–º –∏–º—è —Ñ–∞–π–ª–∞
                    let filename = 'unknown';
                    if (msg.document.attributes) {
                        const fileNameAttr = msg.document.attributes.find((attr: any) => 
                            attr.className === 'DocumentAttributeFilename'
                        );
                        if (fileNameAttr && (fileNameAttr as any).fileName) {
                            filename = (fileNameAttr as any).fileName;
                        }
                    }
                    console.log(`      ${msg.id}: ${filename}`);
                } else {
                    console.log(`      ${msg.id}: —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`);
                }
            }

            console.log('   ' + '‚îÄ'.repeat(50));
        }
        
        console.log(`\nüìä –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${allMessages.length}`);
        
        // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        if (client && typeof (client as any).disconnect === 'function') {
            await (client as any).disconnect();
            console.log('\n4. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç Telegram...');
            console.log('   ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
        }
        
        console.log('\n=== –ü–û–õ–£–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
        
        // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        if (client && typeof (client as any).disconnect === 'function') {
            try {
                await (client as any).disconnect();
                console.log('   ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
            } catch (disconnectError) {
                console.log('   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏:', disconnectError);
            }
        }
    }
}

fetchTelegramMessagesWithPagination().catch(console.error);