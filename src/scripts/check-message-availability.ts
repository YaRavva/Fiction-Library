import { config } from 'dotenv';
import { resolve } from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config({ path: resolve(__dirname, '../../.env') });

import { TelegramService } from '../lib/telegram/client';

async function checkMessageAvailability() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä TelegramService
        const telegramClient = await TelegramService.getInstance();
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª —Å —Ñ–∞–π–ª–∞–º–∏
        console.log('üìö –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É "–ê—Ä—Ö–∏–≤ –¥–ª—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∏"...');
        const channel = await telegramClient.getFilesChannel();
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        const testMessageIds = [4775, 4754, 4611, 4490, 4491];
        
        for (const messageId of testMessageIds) {
            console.log(`\nüì• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è ${messageId}...`);
            
            try {
                // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ ID
                const messages = await telegramClient.getMessages(channel, 1, messageId) as any[];
                
                if (messages && messages.length > 0) {
                    const message = messages[0];
                    console.log(`  ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ`);
                    
                    // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–µ
                    if (message) {
                        console.log(`  üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:`, Object.keys(message || {}));
                        
                        // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞
                        if (message.media) {
                            console.log(`  üìé –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞`);
                        } else if (message.document) {
                            console.log(`  üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç`);
                        } else if (message.photo) {
                            console.log(`  üì∏ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ`);
                        } else {
                            console.log(`  ‚ö†Ô∏è  –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞`);
                        }
                    } else {
                        console.log(`  ‚ö†Ô∏è  –°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`);
                    }
                } else {
                    console.log(`  ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
                }
            } catch (error) {
                console.error(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ${messageId}:`, error);
            }
        }
    } catch (error) {
        console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
    } finally {
        // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –∫–ª–∏–µ–Ω—Ç–∞
        try {
            const telegramClient = await TelegramService.getInstance();
            await telegramClient.disconnect();
            console.log('\nüîå –ö–ª–∏–µ–Ω—Ç Telegram –æ—Ç–∫–ª—é—á–µ–Ω');
        } catch (shutdownError) {
            console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:', shutdownError);
        }
    }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
checkMessageAvailability().catch(console.error);