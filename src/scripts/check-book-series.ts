import { createClient } from '@supabase/supabase-js';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || '';
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || '';
const supabase = createClient(supabaseUrl, supabaseKey);

async function checkBookSeries() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–∏–∏ –¥–ª—è –∫–Ω–∏–≥–∏ "—Ü–∏–∫–ª –ö–æ—Ä–∞–±–ª—å –≤–æ —Ñ—å–æ—Ä–¥–µ"');
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const { data: books, error: booksError } = await supabase
      .from('books')
      .select('*')
      .eq('title', '—Ü–∏–∫–ª –ö–æ—Ä–∞–±–ª—å –≤–æ —Ñ—å–æ—Ä–¥–µ')
      .eq('author', '–ï–ª–∏–∑–∞–≤–µ—Ç–∞ –î–≤–æ—Ä–µ—Ü–∫–∞—è');
    
    if (booksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏:', booksError);
      return;
    }
    
    if (!books || books.length === 0) {
      console.log('‚ùå –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return;
    }
    
    const book = books[0];
    console.log('üìö –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞:');
    console.log('- ID:', book.id);
    console.log('- –ù–∞–∑–≤–∞–Ω–∏–µ:', book.title);
    console.log('- –ê–≤—Ç–æ—Ä:', book.author);
    console.log('- Series ID:', book.series_id || '–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ —Å–µ—Ä–∏–∏');
    
    // –ï—Å–ª–∏ –∫–Ω–∏–≥–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ —Å–µ—Ä–∏–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–∏—é
    if (book.series_id) {
      const { data: series, error: seriesError } = await supabase
        .from('series')
        .select('*')
        .eq('id', book.series_id)
        .single();
      
      if (seriesError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–µ—Ä–∏–∏:', seriesError);
        return;
      }
      
      if (series) {
        console.log('\nüìö –ù–∞–π–¥–µ–Ω–∞ —Å–µ—Ä–∏—è:');
        console.log('- ID:', series.id);
        console.log('- –ù–∞–∑–≤–∞–Ω–∏–µ:', series.title);
        console.log('- –ê–≤—Ç–æ—Ä:', series.author);
        console.log('- –°–æ—Å—Ç–∞–≤ —Å–µ—Ä–∏–∏:', series.series_composition || '–ø—É—Å—Ç–æ');
        
        if (series.series_composition && Array.isArray(series.series_composition)) {
          console.log('- –ö–Ω–∏–≥–∏ –≤ —Å–æ—Å—Ç–∞–≤–µ:');
          series.series_composition.forEach((book: any, index: number) => {
            console.log(`  ${index + 1}. ${book.title} (${book.year})`);
          });
        }
      }
    } else {
      console.log('\n‚ÑπÔ∏è  –ö–Ω–∏–≥–∞ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ —Å–µ—Ä–∏–∏. –ü—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–∏—è —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º:');
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–∏—è —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
      const { data: seriesList, error: seriesListError } = await supabase
        .from('series')
        .select('*')
        .eq('title', '—Ü–∏–∫–ª –ö–æ—Ä–∞–±–ª—å –≤–æ —Ñ—å–æ—Ä–¥–µ')
        .eq('author', '–ï–ª–∏–∑–∞–≤–µ—Ç–∞ –î–≤–æ—Ä–µ—Ü–∫–∞—è');
      
      if (seriesListError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–µ—Ä–∏–∏:', seriesListError);
        return;
      }
      
      if (seriesList && seriesList.length > 0) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å–µ—Ä–∏–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º:');
        seriesList.forEach((series: any) => {
          console.log('- ID:', series.id);
          console.log('  –ù–∞–∑–≤–∞–Ω–∏–µ:', series.title);
          console.log('  –°–æ—Å—Ç–∞–≤ —Å–µ—Ä–∏–∏:', series.series_composition || '–ø—É—Å—Ç–æ');
        });
      } else {
        console.log('‚ùå –°–µ—Ä–∏–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }
    }
    
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkBookSeries();