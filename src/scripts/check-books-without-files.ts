#!/usr/bin/env tsx

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */

import { serverSupabase } from '../lib/serverSupabase';

async function checkBooksWithoutFiles() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–∏–≥–∏ –±–µ–∑ —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');

    try {
        // –ü–æ–ª—É—á–∞–µ–º –∫–Ω–∏–≥–∏ —Å telegram_post_id, –Ω–æ –±–µ–∑ telegram_file_id
        const { data: booksWithoutFiles, error } = await serverSupabase
            .from('books')
            .select('id, title, author, telegram_post_id')
            .not('telegram_post_id', 'is', null)
            .or('telegram_file_id.is.null,file_url.is.null') as { data: any[] | null, error: any };

        if (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤:', error);
            return;
        }

        console.log(`üìö –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤: ${booksWithoutFiles?.length || 0}`);

        if (booksWithoutFiles && booksWithoutFiles.length > 0) {
            console.log('\nüìã –ü–µ—Ä–≤—ã–µ 10 –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤:');
            booksWithoutFiles.slice(0, 10).forEach((book, index) => {
                console.log(`${index + 1}. "${book.title}" –∞–≤—Ç–æ—Ä–∞ ${book.author}`);
                console.log(`   ID: ${book.id}, Telegram Post ID: ${book.telegram_post_id}`);
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∞–≤—Ç–æ—Ä–∞–º
            const authorsCount = new Map();
            booksWithoutFiles.forEach(book => {
                const author = book.author || '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
                authorsCount.set(author, (authorsCount.get(author) || 0) + 1);
            });

            console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–≤—Ç–æ—Ä–∞–º:');
            Array.from(authorsCount.entries())
                .sort((a, b) => b[1] - a[1])
                .slice(0, 10)
                .forEach(([author, count]) => {
                    console.log(`   ${author}: ${count} –∫–Ω–∏–≥`);
                });
        }

        // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥
        const { count: totalBooks, error: totalError } = await serverSupabase
            .from('books')
            .select('*', { count: 'exact', head: true }) as { count: number | null, error: any };

        if (!totalError) {
            console.log(`\nüìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –≤ –±–∞–∑–µ: ${totalBooks}`);

            const booksWithFiles = (totalBooks || 0) - (booksWithoutFiles?.length || 0);
            console.log(`üìÅ –ö–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏: ${booksWithFiles}`);
            console.log(`üìö –ö–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤: ${booksWithoutFiles?.length || 0}`);
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkBooksWithoutFiles().catch((error) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});