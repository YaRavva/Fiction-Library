import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config();

async function analyzeBooks() {
  try {
    console.log('üîç –ê–Ω–∞–ª–∏–∑ –∫–Ω–∏–≥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π...\n');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

    if (!supabaseUrl || !supabaseKey) {
      console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
    const supabase = createClient(supabaseUrl, supabaseKey);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('üì• –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    const { data: books, error: booksError } = await supabase
      .from('books')
      .select('id, title, author, telegram_post_id');

    if (booksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–Ω–∏–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', booksError);
      return;
    }

    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${books.length} –∫–Ω–∏–≥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n`);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram
    console.log('üì• –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è Telegram...');
    const { data: processedMessages, error: messagesError } = await supabase
      .from('telegram_processed_messages')
      .select('message_id, book_id');

    if (messagesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:', messagesError);
      return;
    }

    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${processedMessages.length} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n`);

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö:');
    
    // –ö–Ω–∏–≥–∏ —Å telegram_post_id
    const booksWithTelegramId = books.filter(book => book.telegram_post_id);
    console.log(`   üìö –ö–Ω–∏–≥ —Å telegram_post_id: ${booksWithTelegramId.length}`);
    
    // –ö–Ω–∏–≥–∏ –±–µ–∑ telegram_post_id
    const booksWithoutTelegramId = books.filter(book => !book.telegram_post_id);
    console.log(`   üìö –ö–Ω–∏–≥ –±–µ–∑ telegram_post_id: ${booksWithoutTelegramId.length}`);
    
    // –°–æ–æ–±—â–µ–Ω–∏—è —Å book_id
    const messagesWithBookId = processedMessages.filter(msg => msg.book_id);
    console.log(`   üì® –°–æ–æ–±—â–µ–Ω–∏–π —Å book_id: ${messagesWithBookId.length}`);
    
    // –°–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ book_id
    const messagesWithoutBookId = processedMessages.filter(msg => !msg.book_id);
    console.log(`   üì® –°–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ book_id: ${messagesWithoutBookId.length}`);
    
    // –ö–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–≤—è–∑–∞–Ω—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    const linkedBooks = new Set(messagesWithBookId.map(msg => msg.book_id));
    const booksLinkedToMessages = books.filter(book => linkedBooks.has(book.id));
    console.log(`   üîó –ö–Ω–∏–≥, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: ${booksLinkedToMessages.length}`);
    
    // –ö–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï —Å–≤—è–∑–∞–Ω—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    const booksNotLinkedToMessages = books.filter(book => !linkedBooks.has(book.id));
    console.log(`   üîó –ö–Ω–∏–≥, –ù–ï —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: ${booksNotLinkedToMessages.length}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï —Å–≤—è–∑–∞–Ω—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    console.log('\nüìã –ù–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï —Å–≤—è–∑–∞–Ω—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏:');
    booksNotLinkedToMessages.slice(0, 10).forEach(book => {
      console.log(`   - ${book.author} - ${book.title} (ID: ${book.id})`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥—É–±–ª–∏–∫–∞—Ç—ã —Å—Ä–µ–¥–∏ –∫–Ω–∏–≥ –±–µ–∑ telegram_post_id
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã —Å—Ä–µ–¥–∏ –∫–Ω–∏–≥ –±–µ–∑ telegram_post_id...');
    const duplicates = [];
    const bookKeys = new Set();
    
    for (const book of booksWithoutTelegramId) {
      const key = `${book.author}|||${book.title}`;
      if (bookKeys.has(key)) {
        duplicates.push(book);
      } else {
        bookKeys.add(key);
      }
    }
    
    console.log(`   ‚ùå –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${duplicates.length}`);
    
    if (duplicates.length > 0) {
      console.log('   –î—É–±–ª–∏–∫–∞—Ç—ã:');
      duplicates.slice(0, 10).forEach(book => {
        console.log(`     - ${book.author} - ${book.title} (ID: ${book.id})`);
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–∏–≥–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º telegram_post_id
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–Ω–∏–≥–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º telegram_post_id...');
    const telegramIdMap = new Map();
    const duplicateTelegramBooks = [];
    
    for (const book of booksWithTelegramId) {
      if (telegramIdMap.has(book.telegram_post_id)) {
        duplicateTelegramBooks.push(book);
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –ø–µ—Ä–≤—É—é –∫–Ω–∏–≥—É —Å —ç—Ç–∏–º ID
        const firstBook = telegramIdMap.get(book.telegram_post_id);
        if (!duplicateTelegramBooks.includes(firstBook)) {
          duplicateTelegramBooks.push(firstBook);
        }
      } else {
        telegramIdMap.set(book.telegram_post_id, book);
      }
    }
    
    console.log(`   ‚ùå –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥ —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º—Å—è telegram_post_id: ${duplicateTelegramBooks.length}`);
    
    if (duplicateTelegramBooks.length > 0) {
      console.log('   –ö–Ω–∏–≥–∏ —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º—Å—è telegram_post_id:');
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ telegram_post_id
      const grouped = new Map();
      for (const book of duplicateTelegramBooks) {
        if (!grouped.has(book.telegram_post_id)) {
          grouped.set(book.telegram_post_id, []);
        }
        grouped.get(book.telegram_post_id).push(book);
      }
      
      Array.from(grouped.entries()).slice(0, 5).forEach(([telegramId, books]) => {
        console.log(`     Telegram ID: ${telegramId}`);
        (books as { author: string; title: string; id: string }[]).forEach(book => {
          console.log(`       - ${book.author} - ${book.title} (ID: ${book.id})`);
        });
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
if (require.main === module) {
  analyzeBooks();
}