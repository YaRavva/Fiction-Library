#!/usr/bin/env tsx

import 'dotenv/config';
import { S3Client, CreateBucketCommand } from '@aws-sdk/client-s3';

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∫–µ—Ç–∞ –≤ Cloud.ru S3
 */

async function createCloudRuBucket() {
  console.log('üöÄ –°–æ–∑–¥–∞–µ–º –±–∞–∫–µ—Ç –≤ Cloud.ru S3');
  
  // –°–æ–∑–¥–∞–µ–º —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π S3-–∫–ª–∏–µ–Ω—Ç –¥–ª—è cloud.ru —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
  const s3Client = new S3Client({
    endpoint: 'https://s3.cloud.ru',
    region: process.env.AWS_REGION || 'ru-central-1',
    credentials: {
      accessKeyId: process.env.AWS_ACCESS_KEY_ID!,
      secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY!,
    },
  });
  
  const bucketName = `fiction-library-${Date.now()}`;
  
  try {
    console.log(`\nüìã –°–æ–∑–¥–∞–µ–º –±–∞–∫–µ—Ç "${bucketName}"...`);
    
    const command = new CreateBucketCommand({
      Bucket: bucketName,
    });
    
    const response = await s3Client.send(command);
    console.log('‚úÖ –ë–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è:');
    console.log(response);
    
    console.log(`\n‚ÑπÔ∏è  –ò–º—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –±–∞–∫–µ—Ç–∞: ${bucketName}`);
    
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∫–µ—Ç–∞ –≤ Cloud.ru S3:', error.message);
    console.error('–ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏:');
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∫–µ—Ç–∞
if (require.main === module) {
  createCloudRuBucket()
    .then(() => {
      console.log('\n‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    })
    .catch((error) => {
      console.error('\n‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

export { createCloudRuBucket };