import { config } from 'dotenv';
import { resolve } from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config({ path: resolve(__dirname, '../../.env') });

interface Book {
  title: string;
  author: string;
  description?: string;
  publication_year?: number;
  file_format?: string;
  genres?: string[];
  tags?: string[];
}

async function supabaseInsertExample() {
  console.log('–ü—Ä–∏–º–µ—Ä –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase –≤ –ø—Ä–æ–µ–∫—Ç–µ Fiction Library');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
    
    if (!supabaseUrl || !supabaseServiceKey) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
      return;
    }
    
    console.log('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã');
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Supabase –∫–ª–∏–µ–Ω—Ç
    const { createClient } = await import('@supabase/supabase-js');
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    
    // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
    const newBook: Book = {
      title: '–í–æ–π–Ω–∞ –∏ –º–∏—Ä',
      author: '–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π',
      description: '–†–æ–º–∞–Ω-—ç–ø–æ–ø–µ—è, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å–æ–±—ã—Ç–∏—è –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã 1812 –≥–æ–¥–∞',
      publication_year: 1969,
      file_format: 'fb2',
      genres: ['–∫–ª–∞—Å—Å–∏–∫–∞', '—Ä–æ–º–∞–Ω', '–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π'],
      tags: ['–≤–æ–π–Ω–∞', 'XIX –≤–µ–∫', '–†–æ—Å—Å–∏—è']
    };
    
    // –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\n‚ûï –ü—Ä–∏–º–µ—Ä: –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏...');
    const { data, error } = await supabase
      .from('books')
      .insert(newBook)
      .select('id, title, author')
      .single();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∫–Ω–∏–≥–∏:', error.message);
      // –ü—Ä–æ–≤–µ—Ä–∏–º, –≤–æ–∑–º–æ–∂–Ω–æ –∫–Ω–∏–≥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (error.code === '23505') {
        console.log('‚ÑπÔ∏è  –ö–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ');
      }
    } else {
      console.log(`‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞:`);
      console.log(`  ID: ${data.id}`);
      console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: "${data.title}"`);
      console.log(`  –ê–≤—Ç–æ—Ä: ${data.author}`);
    }
    
    // –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüîÑ –ü—Ä–∏–º–µ—Ä: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∏...');
    if (data && data.id) {
      const { data: updatedData, error: updateError } = await supabase
        .from('books')
        .update({ 
          downloads_count: 1,
          views_count: 5 
        })
        .eq('id', data.id)
        .select('id, title, downloads_count, views_count')
        .single();
      
      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏:', updateError.message);
      } else {
        console.log(`‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:`);
        console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: "${updatedData.title}"`);
        console.log(`  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∑–æ–∫: ${updatedData.downloads_count}`);
        console.log(`  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${updatedData.views_count}`);
      }
    }
    
    console.log('\n‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—Å—Ç–∞–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase:', error);
  }
}

supabaseInsertExample().catch(console.error);