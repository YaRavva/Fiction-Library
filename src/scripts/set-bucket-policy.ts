#!/usr/bin/env tsx

import 'dotenv/config';
import { 
  PutBucketAclCommand,
  PutBucketPolicyCommand
} from '@aws-sdk/client-s3';
import { cloudRuS3 } from '../lib/cloud-ru-s3-service';

async function setBucketPolicy() {
  console.log('=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–∞–∫–µ—Ç–∞ ===');
  
  const bucketName = process.env.S3_BUCKET_NAME || 'books';
  console.log(`–ë–∞–∫–µ—Ç: ${bucketName}`);
  
  try {
    // 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ACL –±–∞–∫–µ—Ç–∞ (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)
    console.log('\n1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ACL –±–∞–∫–µ—Ç–∞...');
    const putAclCommand = new PutBucketAclCommand({
      Bucket: bucketName,
      ACL: 'private'
    });
    
    await cloudRuS3.send(putAclCommand);
    console.log('‚úÖ ACL –±–∞–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    
    // 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–∞–∫–µ—Ç–∞ (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)
    console.log('\n2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–∞–∫–µ—Ç–∞...');
    
    // –ü–æ–ª—É—á–∏–º Owner ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    const ownerId = process.env.AWS_ACCESS_KEY_ID?.split(':')[0] || 'YOUR-TENANT-ID';
    
    const policy = {
      Version: "2012-10-17",
      Statement: [
        {
          Sid: "OwnerFullAccess",
          Effect: "Allow",
          Principal: {
            AWS: `arn:aws:iam::${ownerId}:root`
          },
          Action: "s3:*",
          Resource: [
            `arn:aws:s3:::${bucketName}`,
            `arn:aws:s3:::${bucketName}/*`
          ]
        }
      ]
    };
    
    const putPolicyCommand = new PutBucketPolicyCommand({
      Bucket: bucketName,
      Policy: JSON.stringify(policy)
    });
    
    await cloudRuS3.send(putPolicyCommand);
    console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∞ –±–∞–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–ª–∏—Ç–∏–∫–∏:');
    console.log(`–ë–∞–∫–µ—Ç: ${bucketName}`);
    console.log('ACL: private');
    console.log('–ü–æ–ª–∏—Ç–∏–∫–∞: –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞');
    
  } catch (error: any) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.name);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
    if (error.$metadata) {
      console.error('HTTP Status:', error.$metadata.httpStatusCode);
      console.error('Request ID:', error.$metadata.requestId);
    }
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.error('\n–ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏:');
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–ª–∏—Ç–∏–∫–∏
if (require.main === module) {
  setBucketPolicy()
    .then(() => {
      console.log('\n‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    })
    .catch((error) => {
      console.error('\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

export { setBucketPolicy };