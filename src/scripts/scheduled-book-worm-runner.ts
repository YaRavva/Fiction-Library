import { config } from 'dotenv';
import { resolve } from 'path';
import { spawn } from 'child_process';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config({ path: resolve(__dirname, '../../.env') });

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç "–ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è" –≤ —Ä–µ–∂–∏–º–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
async function runScheduledBookWorm() {
    console.log('‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è');
    console.log(`üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${new Date().toLocaleString('ru-RU')}`);
    
    try {
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç "–ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è" –≤ —Ä–µ–∂–∏–º–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const scriptPath = resolve(__dirname, 'run-book-worm.ts');
        const child = spawn('npx', ['tsx', scriptPath, 'update'], {
            cwd: process.cwd(),
            env: process.env,
            stdio: 'inherit'
        });
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
        child.on('close', (code) => {
            console.log(`üèÅ –ö–Ω–∏–∂–Ω—ã–π –ß–µ—Ä–≤—å –∑–∞–≤–µ—Ä—à–∏–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º: ${code}`);
        });
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        child.on('error', (error) => {
            console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è:', error);
        });
    } catch (error) {
        console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ö–Ω–∏–∂–Ω–æ–≥–æ –ß–µ—Ä–≤—è:', error);
    }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –Ω–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
if (require.main === module) {
    runScheduledBookWorm().catch(console.error);
}

export { runScheduledBookWorm };