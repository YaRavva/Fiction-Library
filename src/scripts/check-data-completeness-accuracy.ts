/**
 * Script to check completeness and accuracy between telegram_messages_index and books tables
 * This script verifies if all indexed messages have corresponding books and if metadata matches
 */

import { serverSupabase } from '../lib/serverSupabase';

async function checkDataCompletenessAndAccuracy() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏...');
  console.log('================================================');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã: –∑–∞–ø–∏—Å–∏ –≤ telegram_messages_index –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ books
    console.log('\nüìä 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –¥–∞–Ω–Ω—ã—Ö...');
    console.log('–ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π –≤ telegram_messages_index –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ books');

    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º –≤—Å–µ message_id –∏–∑ telegram_messages_index
    const { data: allIndexed, error: indexedError } = await serverSupabase
      .from('telegram_messages_index')
      .select('message_id');

    if (indexedError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ telegram_messages_index:', indexedError);
      return;
    }

    // –ü–æ–ª—É—á–∏–º –≤—Å–µ telegram_post_id –∏–∑ books
    const { data: allBooks, error: booksError } = await serverSupabase
      .from('books')
      .select('telegram_post_id')
      .not('telegram_post_id', 'is', null);

    if (booksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ books:', booksError);
      return;
    }

    // –ù–∞–π–¥–µ–º message_id, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –∏–Ω–¥–µ–∫—Å–µ, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ books
    const indexedIds = new Set(allIndexed?.map((item: any) => item.message_id) || []);
    const bookIds = new Set(allBooks?.map((item: any) => item.telegram_post_id) || []);

    const missingIds = Array.from(indexedIds).filter(id => !bookIds.has(id));

    // –ü–æ–ª—É—á–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–ø–∏—Å—è—Ö
    const { data: missingBooks, error: missingError } = await serverSupabase
      .from('telegram_messages_index')
      .select('message_id, author, title')
      .in('message_id', missingIds);

    if (missingError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª–Ω–æ—Ç—ã:', missingError);
      return;
    }

    console.log(`–ù–∞–π–¥–µ–Ω–æ ${missingBooks?.length || 0} –∑–∞–ø–∏—Å–µ–π –≤ –∏–Ω–¥–µ–∫—Å–µ –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ books:`);
    if (missingBooks && missingBooks.length > 0) {
      missingBooks.slice(0, 10).forEach((record: any, index: number) => {
        console.log(`  ${index + 1}. Message ID: ${record.message_id}`);
        console.log(`     –ê–≤—Ç–æ—Ä: ${record.author || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`     –ù–∞–∑–≤–∞–Ω–∏–µ: ${record.title || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      });

      if (missingBooks.length > 10) {
        console.log(`  ... –∏ –µ—â–µ ${missingBooks.length - 10} –∑–∞–ø–∏—Å–µ–π`);
      }
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏: –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    console.log('\nüìä 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...');
    console.log('–ü–æ–∏—Å–∫ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏');

    // –ü–æ–ª—É—á–∏–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Å –ø–æ–º–æ—â—å—é JOIN —á–µ—Ä–µ–∑ rpc –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const { data: indexRecords, error: indexError } = await serverSupabase
      .from('telegram_messages_index')
      .select('message_id, author, title')
      .not('author', 'is', null)
      .not('title', 'is', null);

    if (indexError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ telegram_messages_index:', indexError);
      return;
    }

    const { data: bookRecords, error: bookError } = await serverSupabase
      .from('books')
      .select('telegram_post_id, author, title')
      .not('telegram_post_id', 'is', null);

    if (bookError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ books:', bookError);
      return;
    }

    // –ù–∞–π–¥–µ–º –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
    const mismatchedRecords: any[] = [];
    indexRecords?.forEach((indexRecord: any) => {
      const bookRecord = bookRecords?.find((book: any) => book.telegram_post_id === indexRecord.message_id);
      if (bookRecord &&
          (indexRecord.author !== bookRecord.author || indexRecord.title !== bookRecord.title)) {
        mismatchedRecords.push({
          message_id: indexRecord.message_id,
          index_author: indexRecord.author,
          index_title: indexRecord.title,
          book_author: bookRecord.author,
          book_title: bookRecord.title
        });
      }
    });

    console.log(`–ù–∞–π–¥–µ–Ω–æ ${mismatchedRecords?.length || 0} –∑–∞–ø–∏—Å–µ–π —Å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è–º–∏ –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:`);
    if (mismatchedRecords && mismatchedRecords.length > 0) {
      mismatchedRecords.slice(0, 10).forEach((record: any, index: number) => {
        console.log(`  ${index + 1}. Message ID: ${record.message_id}`);
        console.log(`     –í –∏–Ω–¥–µ–∫—Å–µ - –ê–≤—Ç–æ—Ä: "${record.author}", –ù–∞–∑–≤–∞–Ω–∏–µ: "${record.title}"`);
        console.log(`     –í books   - –ê–≤—Ç–æ—Ä: "${record.books.author}", –ù–∞–∑–≤–∞–Ω–∏–µ: "${record.books.title}"`);
        console.log('');
      });

      if (mismatchedRecords.length > 10) {
        console.log(`  ... –∏ –µ—â–µ ${mismatchedRecords.length - 10} –∑–∞–ø–∏—Å–µ–π`);
      }
    }

    // 3. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä 3. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...');

    const { count: totalIndexed, error: totalIndexedError } = await serverSupabase
      .from('telegram_messages_index')
      .select('*', { count: 'exact', head: true });

    const { count: totalBooks, error: totalBooksError } = await serverSupabase
      .from('books')
      .select('*', { count: 'exact', head: true })
      .not('telegram_post_id', 'is', null);

    // –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    const matchedCount = indexRecords?.filter((indexRecord: any) =>
      bookRecords?.some((book: any) => book.telegram_post_id === indexRecord.message_id)
    ).length || 0;

    if (totalIndexedError || totalBooksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      return;
    }

    console.log(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ telegram_messages_index: ${totalIndexed || 0}`);
    console.log(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ —Å telegram_post_id –≤ books: ${totalBooks || 0}`);
    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π (–∏–Ω–¥–µ–∫—Å + –∫–Ω–∏–≥–∏): ${matchedCount}`);
    console.log(`–ó–∞–ø–∏—Å–µ–π –≤ –∏–Ω–¥–µ–∫—Å–µ –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ books: ${totalIndexed ? totalIndexed - matchedCount : 0}`);

    // 4. –ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
    const completenessPercentage = totalIndexed ? (matchedCount / totalIndexed * 100).toFixed(2) : '0.00';
    console.log(`–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª–Ω–æ—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è: ${completenessPercentage}%`);

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkDataCompletenessAndAccuracy();