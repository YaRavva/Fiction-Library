import { config } from 'dotenv';
import { resolve } from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config({ path: resolve(__dirname, '../../.env') });

import { TelegramFileService } from '../lib/telegram/file-service';
import { serverSupabase } from '../lib/serverSupabase';

interface Book {
    id: string;
    title: string;
    author: string;
    telegram_post_id: string;
}

async function findMissingFiles() {
    console.log('üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤...');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å telegram_post_id, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç telegram_file_id
        const { data: booksWithoutFiles, error } = await serverSupabase
            .from('books')
            .select('id, title, author, telegram_post_id')
            .not('telegram_post_id', 'is', null)
            .is('telegram_file_id', null);
            
        if (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–Ω–∏–≥:', error);
            return;
        }
        
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${booksWithoutFiles?.length || 0} –∫–Ω–∏–≥ –±–µ–∑ —Ñ–∞–π–ª–æ–≤`);
        
        if (!booksWithoutFiles || booksWithoutFiles.length === 0) {
            console.log('‚úÖ –í—Å–µ –∫–Ω–∏–≥–∏ –∏–º–µ—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã');
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä TelegramFileService
        const fileService = await TelegramFileService.getInstance();
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        console.log('üì• –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ –∫–∞–Ω–∞–ª–∞...');
        const filesToProcess = await fileService.getFilesToProcess(50); // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 50 —Ñ–∞–π–ª–æ–≤
        console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${filesToProcess.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞`);
        
        // –î–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–∏–≥–∏ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
        for (const book of booksWithoutFiles) {
            const typedBook = book as Book;
            console.log(`\nüìñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–∏–≥–∏: "${typedBook.title}" –∞–≤—Ç–æ—Ä–∞ ${typedBook.author} (ID: ${typedBook.id})`);
            console.log(`  üìß Telegram post ID: ${typedBook.telegram_post_id}`);
            
            // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
            const matchingFile = filesToProcess.find(file => {
                // –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è
                return file.messageId?.toString() === typedBook.telegram_post_id;
            });
            
            if (matchingFile) {
                console.log(`  ‚úÖ –ù–∞–π–¥–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª: ${matchingFile.filename}`);
                console.log(`  üìù Message ID —Ñ–∞–π–ª–∞: ${matchingFile.messageId}`);
                
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                // –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–∑–æ–≤ fileService.processSingleFileById(matchingFile.messageId);
            } else {
                console.log(`  ‚ùå –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–≤—ã—Ö 50 —Ñ–∞–π–ª–∞—Ö`);
                
                // –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏ –∏ –Ω–∞–π—Ç–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                const { author, title } = TelegramFileService.extractMetadataFromFilename(`${typedBook.author} - ${typedBook.title}`);
                console.log(`  üîç –ü–æ–∏—Å–∫ –ø–æ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º: –∞–≤—Ç–æ—Ä="${author}", –Ω–∞–∑–≤–∞–Ω–∏–µ="${title}"`);
                
                // –ü–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–≤—Ç–æ—Ä—É
                const potentialMatches = filesToProcess.filter(file => {
                    const filename = file.filename?.toString().toLowerCase() || '';
                    const titleMatch = filename.includes(title.toLowerCase().replace(/\s+/g, '_'));
                    const authorMatch = filename.includes(author.toLowerCase().replace(/\s+/g, '_'));
                    return titleMatch || authorMatch;
                });
                
                if (potentialMatches.length > 0) {
                    console.log(`  üìö –ù–∞–π–¥–µ–Ω–æ ${potentialMatches.length} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:`);
                    for (const match of potentialMatches) {
                        console.log(`    - ${match.filename} (ID: ${match.messageId})`);
                    }
                } else {
                    console.log(`  ‚ö†Ô∏è –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
                }
            }
        }
    } catch (error) {
        console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
    } finally {
        // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–∏—Å–∞
        const fileService = await TelegramFileService.getInstance();
        await fileService.shutdown();
    }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
findMissingFiles().catch(console.error);