import { serverSupabase } from '../lib/serverSupabase';
import dotenv from 'dotenv';

dotenv.config();

async function cleanupIncorrectFile() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...');
    
    // –ò—â–µ–º –∫–Ω–∏–≥—É —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL
    const supabase: any = serverSupabase;
    const { data: book, error } = await supabase
      .from('books')
      .select('*')
      .eq('title', '—Ü–∏–∫–ª –ú–∏—Ü–µ–ª–∏–π')
      .single();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥–∏:', error);
      return;
    }
    
    if (!book) {
      console.log('‚ö†Ô∏è –ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    const anyBook = book as any;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: "${anyBook.title}" (ID: ${anyBook.id})`);
    console.log(`  –¢–µ–∫—É—â–∏–π URL —Ñ–∞–π–ª–∞: ${anyBook.file_url}`);
    console.log(`  –¢–µ–∫—É—â–∏–π –ø—É—Ç—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: ${anyBook.storage_path}`);
    console.log(`  Telegram ID —Ñ–∞–π–ª–∞: ${anyBook.telegram_file_id}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    if (anyBook.file_url && anyBook.file_url.includes('/books/') && anyBook.telegram_file_id) {
      console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–∞–π–ª —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –∏–º–µ–Ω–∏');
      
      // –û—á–∏—â–∞–µ–º –ø—Ä–∏–≤—è–∑–∫—É —Ñ–∞–π–ª–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—ç—Ç–∞–ø–Ω–æ
      console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º –ø—Ä–∏–≤—è–∑–∫—É —Ñ–∞–π–ª–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º file_url
      const { error: updateError1 } = await supabase
        .from('books')
        .update({
          file_url: null
        })
        .eq('id', anyBook.id);
      
      if (updateError1) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ file_url:', updateError1);
        return;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º file_size
      const { error: updateError2 } = await supabase
        .from('books')
        .update({
          file_size: null
        })
        .eq('id', anyBook.id);
      
      if (updateError2) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ file_size:', updateError2);
        return;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º file_format
      const { error: updateError3 } = await supabase
        .from('books')
        .update({
          file_format: null
        })
        .eq('id', anyBook.id);
      
      if (updateError3) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ file_format:', updateError3);
        return;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º telegram_file_id
      const { error: updateError4 } = await supabase
        .from('books')
        .update({
          telegram_file_id: null
        })
        .eq('id', anyBook.id);
      
      if (updateError4) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ telegram_file_id:', updateError4);
        return;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º downloads_count
      const { error: updateError6 } = await supabase
        .from('books')
        .update({
          downloads_count: null
        })
        .eq('id', anyBook.id);
      
      if (updateError6) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ downloads_count:', updateError6);
        return;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º updated_at
      const { error: updateError7 } = await supabase
        .from('books')
        .update({
          updated_at: new Date().toISOString()
        })
        .eq('id', anyBook.id);
      
      if (updateError7) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ updated_at:', updateError7);
        return;
      }
      
      console.log('‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ–∞–π–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      
    } else {
      console.log('‚úÖ –§–∞–π–ª —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–º–µ–Ω–∏');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ –æ—á–∏—Å—Ç–∫–∏:', error);
  }
}

cleanupIncorrectFile();