import { BookWormService } from '../lib/telegram/book-worm-service';
import { TelegramFileService } from '../lib/telegram/file-service';
import dotenv from 'dotenv';

dotenv.config();

async function testSpecificCases() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è...');
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ö–æ—Ç–∏–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
    const testCases = [
      {
        book: {
          title: "–¶–∏–∫–ª –ß–µ—Ä–Ω–æ—è–∑—ã–∫–∏–π",
          author: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä –ë—å—é–ª–º–∞–Ω"
        },
        filename: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä_–°—Ç–∞—à–µ—Ñ—Ñ_–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–π_—Ü–∏–∫–ª.zip",
        shouldMatch: false,
        description: "–†–∞–∑–Ω—ã–µ –∞–≤—Ç–æ—Ä—ã - –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      },
      {
        book: {
          title: "–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–π —Ü–∏–∫–ª",
          author: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä –°—Ç–∞—à–µ—Ñ—Ñ"
        },
        filename: "–ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä_–°—Ç–∞—à–µ—Ñ—Ñ_–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–π_—Ü–∏–∫–ª.zip",
        shouldMatch: true,
        description: "–¢–æ—Ç –∂–µ –∞–≤—Ç–æ—Ä –∏ —Ü–∏–∫–ª - –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      },
      {
        book: {
          title: "–ù–æ—á–Ω–æ–π –î–æ–∑–æ—Ä",
          author: "–°–µ—Ä–≥–µ–π –õ—É–∫—å—è–Ω–µ–Ω–∫–æ"
        },
        filename: "–õ—É–∫—å—è–Ω–µ–Ω–∫–æ_–°–µ—Ä–≥–µ–π_–ù–æ—á–Ω–æ–π_–î–æ–∑–æ—Ä.fb2.zip",
        shouldMatch: true,
        description: "–¢–æ—Ç –∂–µ –∞–≤—Ç–æ—Ä –∏ –∫–Ω–∏–≥–∞ - –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å"
      }
    ];
    
    console.log('\nüìã –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏:');
    console.log('=================');
    
    for (const [index, testCase] of testCases.entries()) {
      console.log(`\n${index + 1}. ${testCase.description}`);
      console.log(`   –ö–Ω–∏–≥–∞: "${testCase.book.title}" –∞–≤—Ç–æ—Ä–∞ ${testCase.book.author}`);
      console.log(`   –§–∞–π–ª: ${testCase.filename}`);
      console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${testCase.shouldMatch ? '–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ' : '–ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è'}`);
    }
    
    // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram, –∑–∞–ø—É—Å—Ç–∏–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç
    console.log('\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ –∏–∑ Telegram...');
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä BookWormService
    const bookWorm = new BookWormService();
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('\nüì• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
    await bookWorm['initializeServices']();
    
    if (bookWorm['fileService']) {
      // –ü–æ–ª—É—á–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5)
      const files = await bookWorm['fileService']['getFilesToProcess'](5);
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö
      console.log('\nüìÅ –§–∞–π–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
      files.forEach((file: any, index: number) => {
        console.log(`   ${index + 1}. ${file.filename} (ID: ${file.messageId})`);
      });
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤:', error);
    process.exit(1);
  }
}

testSpecificCases();