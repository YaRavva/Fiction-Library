import { config } from 'dotenv';
import { TelegramSyncService } from '../lib/telegram/sync';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: '.env' });

/**
 * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–¥—ã –ø—Ä–∏—á–∏–Ω –ø—Ä–æ–ø—É—Å–∫–∞ –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 * @param reason –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–¥ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
 * @returns –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 */
function translateSkipReason(reason: string): string {
  switch (reason) {
    case 'book_not_found':
      return '–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö';
    case 'book_not_imported':
      return '–ö–Ω–∏–≥–∞ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞';
    case 'already_processed':
      return '–§–∞–π–ª —É–∂–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω —Ä–∞–Ω–µ–µ';
    case 'book_already_has_file':
      return '–£ –∫–Ω–∏–≥–∏ —É–∂–µ –µ—Å—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª';
    case 'book_already_has_file_in_books_table':
      return '–£ –∫–Ω–∏–≥–∏ —É–∂–µ –µ—Å—Ç—å —Ñ–∞–π–ª –≤ —Ç–∞–±–ª–∏—Ü–µ books';
    default:
      return reason || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞';
  }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª –∏–∑ Telegram –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param messageId ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–∞–π–ª–æ–º –≤ Telegram
 * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
 */
export async function downloadSingleFile(messageId: number) {
  let syncService: TelegramSyncService | null = null;
  
  try {
    console.log(`üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –∏–∑ Telegram (ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${messageId})`);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    syncService = await TelegramSyncService.getInstance();
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª
    console.log('üì• –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª...');
    const result = await syncService.processSingleFileById(messageId);
    
    const success = result.success !== false;
    const skipped = result.skipped === true;
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if (skipped) {
      console.log(`‚ö†Ô∏è –§–∞–π–ª –ø—Ä–æ–ø—É—â–µ–Ω: ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})`);
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
      const translatedReason = translateSkipReason(result.reason as string);
      console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${translatedReason}`);
      
      if (result.bookTitle && result.bookAuthor) {
        console.log(`   –ö–Ω–∏–≥–∞: ${result.bookAuthor} - ${result.bookTitle}`);
      }
    } else if (success) {
      console.log(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})`);
      
      if (result.bookTitle && result.bookAuthor) {
        console.log(`   –ö–Ω–∏–≥–∞: ${result.bookAuthor} - ${result.bookTitle}`);
      }
      
      if (result.fileSize) {
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        const fileSize = typeof result.fileSize === 'number' ? 
          `${Math.round(result.fileSize / 1024)} –ö–ë` : 
          result.fileSize;
        console.log(`   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSize}`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
      if (result.filename) {
        const ext = path.extname(result.filename as string).toLowerCase();
        if (ext === '.fb2' || ext === '.zip') {
          console.log(`   –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${ext.substring(1).toUpperCase()}`);
        } else {
          console.log(`   –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${ext.substring(1).toUpperCase()} (–Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)`);
        }
      }
      
      if (result.fileUrl) {
        console.log(`   URL —Ñ–∞–π–ª–∞: ${result.fileUrl}`);
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})`);
      console.log(`   –û—à–∏–±–∫–∞: ${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    let report = `–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:\n`;
    report += `–§–∞–π–ª: ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${result.messageId})\n`;
    report += `–°—Ç–∞—Ç—É—Å: ${skipped ? '–ü—Ä–æ–ø—É—â–µ–Ω' : success ? '–£—Å–ø–µ—à–Ω–æ' : '–û—à–∏–±–∫–∞'}\n`;
    
    if (skipped) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
      const translatedReason = translateSkipReason(result.reason as string);
      report += `–ü—Ä–∏—á–∏–Ω–∞: ${translatedReason}\n`;
    } else if (!success && result.error) {
      report += `–û—à–∏–±–∫–∞: ${result.error}\n`;
    }
    
    if (result.bookTitle && result.bookAuthor) {
      report += `–ö–Ω–∏–≥–∞: ${result.bookAuthor} - ${result.bookTitle}\n`;
    }
    
    if (result.fileSize) {
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
      const fileSize = typeof result.fileSize === 'number' ? 
        `${Math.round(result.fileSize / 1024)} –ö–ë` : 
        result.fileSize;
      report += `–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSize}\n`;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
    if (result.filename) {
      const ext = path.extname(result.filename as string).toLowerCase();
      if (ext === '.fb2' || ext === '.zip') {
        report += `–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${ext.substring(1).toUpperCase()}\n`;
      } else {
        report += `–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${ext.substring(1).toUpperCase()} (–Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)\n`;
      }
    }
    
    if (result.fileUrl) {
      report += `URL —Ñ–∞–π–ª–∞: ${result.fileUrl}\n`;
    }
    
    // –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if (success && !skipped && process.env.NEXT_PUBLIC_SUPABASE_URL && process.env.SUPABASE_SERVICE_ROLE_KEY) {
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
      
      try {
        const supabase = createClient(
          process.env.NEXT_PUBLIC_SUPABASE_URL,
          process.env.SUPABASE_SERVICE_ROLE_KEY
        );
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ books
        const { data: book, error: bookError } = await supabase
          .from('books')
          .select('*')
          .eq('telegram_file_id', messageId.toString())
          .single();
          
        if (bookError) {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∫–Ω–∏–≥–∏:', bookError.message);
        } else if (book) {
          console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –∫–Ω–∏–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
          console.log(`   ID: ${book.id}`);
          console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}`);
          console.log(`   –ê–≤—Ç–æ—Ä: ${book.author}`);
          console.log(`   URL —Ñ–∞–π–ª–∞: ${book.file_url}`);
          console.log(`   –ü—É—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${book.storage_path}`);
          console.log(`   –§–æ—Ä–º–∞—Ç: ${book.file_format}`);
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
          if (book.file_size) {
            const fileSize = typeof book.file_size === 'number' ? 
              `${Math.round(book.file_size / 1024)} –ö–ë` : 
              book.file_size;
            console.log(`   –†–∞–∑–º–µ—Ä: ${fileSize}`);
          }
          
          console.log(`   Telegram ID: ${book.telegram_file_id}`);
          
          report += `\n–ó–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n`;
          report += `ID: ${book.id}\n`;
          report += `–ù–∞–∑–≤–∞–Ω–∏–µ: ${book.title}\n`;
          report += `–ê–≤—Ç–æ—Ä: ${book.author}\n`;
          report += `URL —Ñ–∞–π–ª–∞: ${book.file_url}\n`;
          report += `–ü—É—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${book.storage_path}\n`;
          report += `–§–æ—Ä–º–∞—Ç: ${book.file_format}\n`;
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
          if (book.file_size) {
            const fileSize = typeof book.file_size === 'number' ? 
              `${Math.round(book.file_size / 1024)} –ö–ë` : 
              book.file_size;
            report += `–†–∞–∑–º–µ—Ä: ${fileSize}\n`;
          }
          
          report += `Telegram ID: ${book.telegram_file_id}\n`;
        } else {
          console.warn('‚ö†Ô∏è –ó–∞–ø–∏—Å—å –∫–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ telegram_processed_messages
        const { data: processedMessage, error: processedError } = await supabase
          .from('telegram_processed_messages')
          .select('*')
          .eq('telegram_file_id', messageId.toString())
          .single();
          
        if (processedError) {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ telegram_processed_messages:', processedError.message);
        } else if (processedMessage) {
          console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –≤ telegram_processed_messages:');
          console.log(`   ID: ${processedMessage.id}`);
          console.log(`   Book ID: ${processedMessage.book_id}`);
          console.log(`   Telegram File ID: ${processedMessage.telegram_file_id}`);
          console.log(`   Processed At: ${processedMessage.processed_at}`);
          
          report += `\n–ó–∞–ø–∏—Å—å –≤ telegram_processed_messages:\n`;
          report += `ID: ${processedMessage.id}\n`;
          report += `Book ID: ${processedMessage.book_id}\n`;
          report += `Telegram File ID: ${processedMessage.telegram_file_id}\n`;
          report += `Processed At: ${processedMessage.processed_at}\n`;
        } else {
          console.warn('‚ö†Ô∏è –ó–∞–ø–∏—Å—å –≤ telegram_processed_messages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
      } catch (dbError) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', dbError);
      }
    }
    
    return {
      success: skipped || success,
      message: skipped 
        ? `–§–∞–π–ª ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} –ø—Ä–æ–ø—É—â–µ–Ω: ${translateSkipReason(result.reason as string)}` 
        : success 
          ? `–§–∞–π–ª ${result.filename || '–ë–µ–∑ –∏–º–µ–Ω–∏'} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω` 
          : `–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: ${result.error}`,
      result,
      report
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
    return {
      success: false,
      message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏',
      result: null,
      report: `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
    };
  } finally {
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –∫–ª–∏–µ–Ω—Ç–∞
    if (syncService) {
      try {
        await syncService.shutdown();
        console.log('üîå Telegram –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω');
      } catch (shutdownError) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ Telegram –∫–ª–∏–µ–Ω—Ç–∞:', shutdownError);
      }
    }
  }
}

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const args = process.argv.slice(2);
  const messageId = args[0] ? parseInt(args[0], 10) : 0;
  
  if (!messageId || isNaN(messageId)) {
    console.error('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–∞–π–ª–æ–º');
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx src/scripts/download-single-file.ts <messageId>');
    console.log('–ü—Ä–∏–º–µ—Ä: npx tsx src/scripts/download-single-file.ts 12345');
    process.exit(1);
  }
  
  downloadSingleFile(messageId)
    .then((result) => {
      console.log('\nüìã –û—Ç—á–µ—Ç:');
      console.log(result.report);
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
      process.exit(1);
    });
}