import { NextResponse } from 'next/server';
import { syncBooks } from '../../../../scripts/sync-books';

export const dynamic = 'force-dynamic';

// –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ø–∞–º—è—Ç–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ë–î –∏–ª–∏ Redis)
const syncStatus = {
  isRunning: false,
  startTime: null as number | null,
  progress: 0,
  message: '–ì–æ—Ç–æ–≤ –∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏',
  lastResult: null as any
};

export async function POST(request: Request) {
  try {
    console.log('üì• –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫–Ω–∏–≥');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ —É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    if (syncStatus.isRunning) {
      return NextResponse.json(
        { 
          success: false, 
          message: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞',
          status: 'already_running'
        }, 
        { status: 409 }
      );
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    const { limit = 10 } = await request.json();
    
    console.log(`üöÄ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥ (–ª–∏–º–∏—Ç: ${limit})`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    syncStatus.isRunning = true;
    syncStatus.startTime = Date.now();
    syncStatus.progress = 0;
    syncStatus.message = `–ó–∞–ø—É—â–µ–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ${limit} –∫–Ω–∏–≥`;
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∏ –∂–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    try {
      const result = await syncBooks(limit);
      syncStatus.lastResult = result;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
      syncStatus.isRunning = false;
      syncStatus.message = `–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${result.message}`;
      syncStatus.progress = 100;
      console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–Ω–∏–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', result);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      return NextResponse.json({
        success: true,
        message: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
        status: 'completed',
        results: result.results,
        actions: result.actions,
        limit
      });
    } catch (error) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ
      syncStatus.isRunning = false;
      syncStatus.message = `–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥:', error);
      
      return NextResponse.json(
        { 
          success: false, 
          message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏' 
        }, 
        { status: 500 }
      );
    }
  } catch (error) {
    syncStatus.isRunning = false;
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥:', error);
    return NextResponse.json(
      { 
        success: false, 
        message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏' 
      }, 
      { status: 500 }
    );
  }
}

export async function GET() {
  try {
    console.log('üì• –ü–æ–ª—É—á–µ–Ω GET –∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥');
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    return NextResponse.json({
      success: true,
      status: syncStatus
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–Ω–∏–≥:', error);
    return NextResponse.json(
      { 
        success: false, 
        message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' 
      }, 
      { status: 500 }
    );
  }
}