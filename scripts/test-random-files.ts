// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç TelegramService –Ω–∞–ø—Ä—è–º—É—é

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
import * as dotenv from 'dotenv';
dotenv.config();

import { TelegramService } from '../src/lib/telegram/client';
import path from 'path';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏
const normalizeString = (str: string): string => {
  try {
    return str.normalize('NFC').toLowerCase();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏:', str);
    return str.toLowerCase();
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–∏–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å–ª–æ–≤–∞
const extractWords = (str: string): string[] => {
  // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º: –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, —Å–∫–æ–±–∫–∏, —Ç–æ—á–∫–∏ –∏ —Ç.–¥.
  return str
    .split(/[\s\-_\(\)\[\]\{\}\/\\\.]+/)
    .filter(word => word.length > 1) // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–ª–æ–≤–∞ –∫–æ—Ä–æ—á–µ 2 —Å–∏–º–≤–æ–ª–æ–≤
    .map(word => word.trim())
    .filter(word => word.length > 0);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è Telegram
function getOriginalFilename(message: any): string {
  let originalFilename = `file_${message.id}`;

  // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  if (message.document && message.document.attributes) {
    const attributes = message.document.attributes;
    const attrFileName = attributes.find((attr: any) => {
      return attr.className === 'DocumentAttributeFilename';
    });
    if (attrFileName && attrFileName.fileName) {
      originalFilename = attrFileName.fileName;
    }
  } else if (message.document && message.document.fileName) {
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    originalFilename = message.document.fileName;
  } else if (message.fileName) {
    // –ï—â–µ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    originalFilename = message.fileName;
  } else if (message.media) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ media
    const media = message.media.document || message.media.photo;
    if (media && media.fileName) {
      originalFilename = media.fileName;
    } else if (media && media.filename) {
      originalFilename = media.filename;
    }
  }

  return originalFilename;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Telegram
async function fetchTelegramFiles() {
  try {
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram...');
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä TelegramService
    const telegramClient = await TelegramService.getInstance();
    
    console.log('üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É —Å —Ñ–∞–π–ª–∞–º–∏...');
    // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª —Å —Ñ–∞–π–ª–∞–º–∏ (ID: 1515159552)
    const fileChannel = await telegramClient.getFilesChannel();
    
    console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ 300 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)...');
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–∞–π–ª–∞–º–∏ (–æ–≥—Ä–∞–Ω–∏—á–∏–º –¥–æ 300 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    const messages = await telegramClient.getAllMessages(fileChannel, 300);
    
    console.log(`üìÅ –ü–æ–ª—É—á–µ–Ω–æ ${messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–∞–π–ª–∞–º–∏
    const files = messages
      .filter((msg: any) => msg.media && (msg.media.document || msg.media.photo))
      .map((msg: any) => {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        const rawFileName = getOriginalFilename(msg);
        
        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –≤ NFC —Ñ–æ—Ä–º—É –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
        const normalizedFileName = rawFileName.normalize('NFC');

        // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏ MIME —Ç–∏–ø
        const media = msg.media.document || msg.media.photo;
        const fileSize = media?.size || 0;
        const mimeType = media?.mimeType || media?.mime_type || 'application/octet-stream';

        return {
          message_id: msg.id,
          file_name: normalizedFileName,
          file_size: fileSize,
          mime_type: mimeType,
          caption: msg.message || '',
          date: msg.date || Date.now() / 1000
        };
      });
      
    console.log(`üìä –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤`);
    
    return files;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤:', error);
    return [];
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
    console.log(`üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${process.cwd()}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    console.log(`üìç TELEGRAM_API_ID: ${process.env.TELEGRAM_API_ID ? '–ó–∞–¥–∞–Ω' : '–ù–µ –∑–∞–¥–∞–Ω'}`);
    console.log(`üìç TELEGRAM_API_HASH: ${process.env.TELEGRAM_API_HASH ? '–ó–∞–¥–∞–Ω' : '–ù–µ –∑–∞–¥–∞–Ω'}`);
    console.log(`üìç TELEGRAM_SESSION: ${process.env.TELEGRAM_SESSION ? '–ó–∞–¥–∞–Ω' : '–ù–µ –∑–∞–¥–∞–Ω'}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã
    const files = await fetchTelegramFiles();
    
    console.log(`üìä –§–∞–π–ª—ã –ø–æ–ª—É—á–µ–Ω—ã: ${files.length} —à—Ç.`);
    
    if (files.length === 0) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª—ã');
      process.exit(1);
    }
    
    // –í—ã–±–∏—Ä–∞–µ–º 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    const randomFiles = [];
    const shuffled = [...files].sort(() => 0.5 - Math.random());
    randomFiles.push(...shuffled.slice(0, 10));
    
    console.log('\nüìã 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:');
    console.log('==========================================');
    
    randomFiles.forEach((file: any, index: number) => {
      if (file.file_name) {
        const originalName = file.file_name;
        const normalizedName = normalizeString(originalName);
        const words = extractWords(normalizedName);
        
        console.log(`\n${index + 1}. –û—Ä–∏–≥–∏–Ω–∞–ª: "${originalName}"`);
        console.log(`   –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: "${normalizedName}"`);
        console.log(`   –°–ª–æ–≤–∞: [${words.join(', ')}]`);
        console.log(`   ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${file.message_id}`);
        console.log(`   –†–∞–∑–º–µ—Ä: ${file.file_size} –±–∞–π—Ç`);
        console.log(`   MIME —Ç–∏–ø: ${file.mime_type || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª —Å ID 747
    const file747 = files.find((file: any) => file.message_id === 747);
    if (file747) {
      console.log('\nüéØ –ù–ê–ô–î–ï–ù —Ñ–∞–π–ª —Å ID 747:');
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: "${file747.file_name}"`);
      console.log(`   –†–∞–∑–º–µ—Ä: ${file747.file_size} –±–∞–π—Ç`);
      
      // –ü–æ–∫–∞–∂–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
      const originalName = file747.file_name;
      const normalizedName = normalizeString(originalName);
      const words = extractWords(normalizedName);
      
      console.log(`   –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: "${normalizedName}"`);
      console.log(`   –°–ª–æ–≤–∞: [${words.join(', ')}]`);
    } else {
      console.log('\n‚ùå –§–∞–π–ª —Å ID 747 –ù–ï –ù–ê–ô–î–ï–ù');
    }
    
    console.log('\n==========================================');
    console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω');
    
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();